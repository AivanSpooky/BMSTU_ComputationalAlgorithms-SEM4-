<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Arction.Wpf.ChartingMVVM.LightningChart</name>
  </assembly>
  <members>
    <member name="T:Arction.Wpf.ChartingMVVM.ActiveView">
      <summary>
            Chart type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ActiveView.ViewXY">
      <summary>
            XY chart, 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ActiveView.View3D">
      <summary>
            3D chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ActiveView.ViewPolar">
      <summary>
            Polar chart, 2D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ActiveView.ViewSmith">
      <summary>
            Smith chart, 2D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ActiveView.ViewPie3D">
      <summary>
            Pie chart, 3D.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AfterRenderingEventArgs">
      <summary>
            Represents a class that provides arguments for the AfterRendering event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AfterRenderingEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AfterRenderingEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AfterRenderingEventArgs.Chart">
      <summary>
            The chart that was just rendered.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Alignment">
      <summary>
            General alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Alignment.Near">
      <summary>
            Near.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Alignment.Center">
      <summary>
            Center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Alignment.Far">
      <summary>
            Far. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AlignmentHorizontal">
      <summary>
            Horizontal alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentHorizontal.Left">
      <summary>
            Align left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentHorizontal.Center">
      <summary>
            Align center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentHorizontal.Right">
      <summary>
            Align right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AlignmentInSegmentGap">
      <summary>
            XY LegendBox alignment between segments.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentInSegmentGap.Near">
      <summary>
            Draw LegendBox near the related segment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentInSegmentGap.Center">
      <summary>
            Draw LegendBox at the center of gap between segments.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AlignmentInVerticalMargin">
      <summary>
            LegendBox alignment when rendered vertically on top of each other.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentInVerticalMargin.Left">
      <summary>
            LegendBox align by left edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentInVerticalMargin.Center">
      <summary>
            LegendBox aligned at center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentInVerticalMargin.Right">
      <summary>
            LegendBox align by right edge.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AlignmentPie3DTitle">
      <summary>
            3D Pie title alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentPie3DTitle.Center">
      <summary>
            Center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentPie3DTitle.Outside">
      <summary>
            Outside. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AlignmentVertical">
      <summary>
            Vertical alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentVertical.Top">
      <summary>
            Align top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentVertical.Center">
      <summary>
            Align center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AlignmentVertical.Bottom">
      <summary>
            Align bottom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AngularUnits">
      <summary>
            Angular units.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AngularUnits.Degrees">
      <summary>
            In degrees, circle is divided int 360 units.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AngularUnits.Radians">
      <summary>
            In radian, circle is divided into 2xPI units.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AngularUnits.Gradians">
      <summary>
            In gradian, circle is divided into 400 units.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotation3DSizing">
      <summary>
            Annotation3D sizing type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotation3DSizing.Automatic">
      <summary>
            Automatic size by text content.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotation3DSizing.ScreenCoordinates">
      <summary>
            Manual size in screen coordinates. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AnnotationRoundSizing">
      <summary>
            AnnotationPolar sizing type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationRoundSizing.Automatic">
      <summary>
            Automatic size by text content.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationRoundSizing.ScreenCoordinates">
      <summary>
            Manual size in screen coordinates. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AnnotationStyle">
      <summary>
            Annotation style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.Rectangle">
      <summary>
            Rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.RectangleArrow">
      <summary>
            Rectangle with arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.RoundedRectangle">
      <summary>
            Rounded rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.RoundedRectangleArrow">
      <summary>
            Rounded rectangle with arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.Arrow">
      <summary>
            Arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.Callout">
      <summary>
            Call-out, rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.RoundedCallout">
      <summary>
            Call-out, rounded rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.Ellipse">
      <summary>
            Ellipse. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.EllipseArrow">
      <summary>
            Ellipse with arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.Triangle">
      <summary>
            Triangle. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationStyle.TriangleArrow">
      <summary>
            Triangle with arrow.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AnnotationTargetCoordinates">
      <summary>
            Annotation target coordinate system.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationTargetCoordinates.ScreenCoordinates">
      <summary>
            Use screen coordinates. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationTargetCoordinates.AxisValues">
      <summary>
            Use axis values 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AnnotationXYSizing">
      <summary>
            AnnotationXY sizing type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationXYSizing.Automatic">
      <summary>
            Automatic size by text content.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationXYSizing.ScreenCoordinates">
      <summary>
            Manual size in screen coordinates. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AnnotationXYSizing.AxisValuesBoundaries">
      <summary>
            Manual size from axis boundaries values.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AreaSeriesPoint">
      <summary>
            Area series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.#ctor(System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.#ctor(System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.PointColor">
      <summary>
            Point Color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AreaSeriesPoint.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ArrayProcessThreadInfo">
      <summary>
            Array process info for a thread. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrayProcessThreadInfo.Count">
      <summary>
            Count to process within the array
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrayProcessThreadInfo.StartIndex">
      <summary>
            Start array index 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ArrowStyle">
      <summary>
            Arrow style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrowStyle.None">
      <summary>
            No arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrowStyle.Square">
      <summary>
            Square.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrowStyle.Arrow">
      <summary>
            Arrow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrowStyle.Circle">
      <summary>
            Circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ArrowStyle.Caliper">
      <summary>
            Caliper.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axis3DBinding">
      <summary>
            3D axis binding.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axis3DBinding.Primary">
      <summary>
            Bind to primary axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axis3DBinding.Secondary">
      <summary>
            Bind to secondary axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisAlignment3D">
      <summary>
            3D axis alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisAlignment3D.Inside">
      <summary>
            The axis is inside the 3D chart area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisAlignment3D.Outside">
      <summary>
            The axis is outside the 3D chart area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisAlignment3D.AtCorner">
      <summary>
            The axis is half inside and half outside the 3D chart area.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisAngleType">
      <summary>
            Amplitude axis placement angle. used in polar.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisAngleType.Relative">
      <summary>
            Calculate's axis angle with respect to calculated angle origin.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisAngleType.Absolute">
      <summary>
            Calculate's axis angle with respect to mathematical angle origin.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisBinding">
      <summary>
            Axis binding.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisBinding.XAxis">
      <summary>
            Bound to X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisBinding.YAxis">
      <summary>
            Bound to Y-axis. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisDimension">
      <summary>
            XY axis dimension.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisDimension.X">
      <summary>
            X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisDimension.Y">
      <summary>
            Y-axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisDimension3D">
      <summary>
            3D axis dimension.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisDimension3D.X">
      <summary>
            X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisDimension3D.Y">
      <summary>
            Y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisDimension3D.Z">
      <summary>
            Z-axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisRangeGapStyle">
      <summary>
            Axis range gap rendering style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisRangeGapStyle.None">
      <summary>
            Empty space.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisRangeGapStyle.Fill">
      <summary>
            Use Fill.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisRangeGapStyle.DiagonalLineDown">
      <summary>
            Draw diagonal line down: \
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisRangeGapStyle.DiagonalLineUp">
      <summary>
            Draw diagonal line up: /
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D">
      <summary>
            3D axis title alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.InsideCenter">
      <summary>
            The axis title is inside the 3D chart area, centered. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.InsideBeginning">
      <summary>
            The axis title is inside the 3D chart area, in the beginning of axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.InsideEnd">
      <summary>
            The axis title is inside the 3D chart area, in the end of axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.OutsideCenter">
      <summary>
            The axis title is outside the 3D chart area, centered.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.OutsideBeginning">
      <summary>
            The axis title is outside the 3D chart area, in the beginning of axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisTitleAlignment3D.OutsideEnd">
      <summary>
            The axis title is outside the 3D chart area, in the end of axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisValueType">
      <summary>
            Axis value type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.Number">
      <summary>
            Number values.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.Time">
      <summary>
            Time values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.DateTime">
      <summary>
            DateTime values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.MapCoordsDegrees">
      <summary>
            Map coordinates, degrees.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.MapCoordsDegNESW">
      <summary>
            Map coordinates, degrees, with N, E, S, W indication. 
            Example: 40.446195N 79.948862W
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.MapCoordsDegMinSecNESW">
      <summary>
            Map coordinates, degrees, arc minutes and seconds, with N, E, S, W indication.
            Example: 40°2'13"N 9°58'2"W
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisValueType.MapCoordsDegPadMinSecNESW">
      <summary>
            Map coordinates, degrees, arc minutes and seconds, with N, E, S, W indication. 
            The minute and second values are padded with zeros, if they are &lt; 10. 
            Example: 40°02'13"N 9°58'02"W
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisWheelAction">
      <summary>
            Wheel action on axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisWheelAction.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisWheelAction.Zoom">
      <summary>
            Zoom active axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisWheelAction.Pan">
      <summary>
            Pan active axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisWheelAction.ZoomAll">
      <summary>
            Zoom all axis, if zooming on single axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisWheelAction.PanAll">
      <summary>
            Pan all axis, if panning on single axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisXLocation3D">
      <summary>
            3D X-axis location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisXLocation3D.BottomFront">
      <summary>
            Axis is shown in bottom front.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisXLocation3D.BottomBack">
      <summary>
            Axis is shown in bottom back.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisXLocation3D.TopFront">
      <summary>
            Axis is shown in top front.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisXLocation3D.TopBack">
      <summary>
            Axis is shown in top back.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisYLocation3D">
      <summary>
            3D Y-axis location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisYLocation3D.FrontLeft">
      <summary>
            Axis is shown in front left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisYLocation3D.FrontRight">
      <summary>
            Axis is shown in front right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisYLocation3D.BackLeft">
      <summary>
            Axis is shown in back left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisYLocation3D.BackRight">
      <summary>
            Axis is shown in back right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.AxisZLocation3D">
      <summary>
            3D Z-axis location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisZLocation3D.BottomLeft">
      <summary>
            Axis is shown in bottom left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisZLocation3D.BottomRight">
      <summary>
            Axis is shown in bottom right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisZLocation3D.TopLeft">
      <summary>
            Axis is shown in top left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.AxisZLocation3D.TopRight">
      <summary>
            Axis is shown in top right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarDrawItemType3D">
      <summary>
            Bar draw item type for 3D bar draw data.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarDrawItemType3D.Title">
      <summary>
            Draw item is title.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarDrawItemType3D.Value">
      <summary>
            Draw item is value text.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarDrawItemType3D.Bar">
      <summary>
            Draw item is bar.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarSeriesValue">
      <summary>
            Bar series value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue.#ctor(System.Double,System.Double,System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="location">Location on axis.</param>
      <param name="value">Value.</param>
      <param name="text">Text.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue.#ctor(System.Double,System.Double,System.String,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="location">Location on axis.</param>
      <param name="value">Value.</param>
      <param name="text">Text.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue.Location">
      <summary>
            Location on axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue.Text">
      <summary>
            Text assigned to bar value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue.Value">
      <summary>
            Value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarSeriesValue3D">
      <summary>
            Bar series value for 3D bars.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.#ctor(System.Double,System.Double,System.Double,System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
      <param name="text">Text assigned to bar value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.#ctor(System.Double,System.Double,System.Double,System.String,System.Object)">
      <summary>
            Constructor
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
      <param name="text">Text assigned to bar value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.Text">
      <summary>
            Text assigned to bar value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarSeriesValue3D.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarsGrouping">
      <summary>
            Bars grouping.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsGrouping.ByIndex">
      <summary>
            Bars are drawn grouped by their indices 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsGrouping.ByIndexFitWidth">
      <summary>
            Bars are drawn grouped by their indices. Fit bar widths.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsGrouping.ByLocation">
      <summary>
            Bars are drawn grouped by their X values (when Orientation is Vertical).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarShape3D">
      <summary>
            Bar shape 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Simple">
      <summary>
            Box. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Cylinder">
      <summary>
            Cylinder.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.RoundedCylinder">
      <summary>
            Rounded cylinder.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Cone">
      <summary>
            Cone.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.ReversedCone">
      <summary>
            Cone reversed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Pyramid">
      <summary>
            Pyramid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.ReversedPyramid">
      <summary>
            Pyramid reversed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Ellipsoid">
      <summary>
            Ellipsoid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarShape3D.Beveled">
      <summary>
            Beveled.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarsOrientation">
      <summary>
            Bars orientation.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsOrientation.Horizontal">
      <summary>
            Horizontal.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsOrientation.Vertical">
      <summary>
            Vertical.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarsStacking">
      <summary>
            Bars stacking. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsStacking.None">
      <summary>
            Bars are shown side-by-side.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsStacking.Stack">
      <summary>
            Bars are stacked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsStacking.StackStretchToSum">
      <summary>
            Bars are stacked and stretched to produce certain sum. 
            For example, put StackSum to 100 and set y-axis units to %
            to illustrate how big portion each series value represents 
            compared to values of all series. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarsTitleHorizontalAlign">
      <summary>
            Bar labels horizontal alignment. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleHorizontalAlign.BarLeft">
      <summary>
            Align to left edge of the bar.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleHorizontalAlign.BarCenter">
      <summary>
            Align to center of the bar.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleHorizontalAlign.BarRight">
      <summary>
            Align to right edge of the bar. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign">
      <summary>
            Bar labels vertical alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign.BarTop">
      <summary>
            Align to bar top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign.BarCenter">
      <summary>
            Align to bar center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign.BarBottom">
      <summary>
            Align to bottom of the bar. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign.StackSegmentTop">
      <summary>
            Align to stack segment top (if multiple Y-axis segments are used, or graph top if not).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarsTitleVerticalAlign.StackSegmentBottom">
      <summary>
            Align to stack segment bottom (if multiple Y-axis segments are used, or graph bottom if not).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BarViewGrouping3D">
      <summary>
            Bars view grouping for 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.StackedIndexed">
      <summary>
            Bars are stacked on index.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.StackedByXValue">
      <summary>
            Bars stacked on X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.StackedStretchedToSum">
      <summary>
            Bars are stacked by X values and stretched to produce certain sum. 
            For example, put StackSum to 100 and set y-axis units to %
            to illustrate how big portion each series value represents 
            compared to values of all series. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.GroupedIndexedFitWidth">
      <summary>
            Bars are shown next to each other for same index value and fitted to view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.GroupedIndexed">
      <summary>
            Grouped by index.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.GroupedByXValue">
      <summary>
            Grouped by X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BarViewGrouping3D.Manhattan">
      <summary>
            Bars are shown in near-far view, first series in list nearest and last farthest. Bar X values control the position in X dimension. 
            Series title is shown at the start or end edge of series.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BeforeRenderingEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforeRendering event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BeforeRenderingEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BeforeRenderingEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BeforeRenderingEventArgs.Chart">
      <summary>
            The chart that was just rendered.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BeforeRenderingEventArgs.Height">
      <summary>
            The height of the chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BeforeRenderingEventArgs.Width">
      <summary>
            The width of the chart.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions">
      <summary>
            Bitmap anti-aliasing options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions.ActualPixelWeight">
      <summary>
            Put ActualPixelWeigth to higher value to make the actual pixel 
            effect more (not much blurred). Use 1 to get high blur effect.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions.BlurRadius">
      <summary>
            Use BlurRadius &gt;= 1. With 1, blur takes current pixel and one pixel from all directions.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions.ResolutionDivider">
      <summary>
            Use ResolutionDivider to divide the output bitmap size. If you want every other and column
            to be in the output bitmap, put 2.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BitmapFill">
      <summary>
            Bitmap fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.BitmapFill.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BitmapFill.Image">
      <summary>
            Gets and sets image. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BitmapFill.ImageAlpha">
      <summary>
            Gets and sets image alpha. 0 is transparent, 255 fully visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFill.ImageAlphaProperty">
      <summary>
            Identifies the ImageAlpha dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFill.ImageFillLayoutProperty">
      <summary>
            Identifies the ImageFillLayout dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFill.ImageProperty">
      <summary>
            Identifies the Image dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BitmapFill.ImageTintColor">
      <summary>
            Gets and sets image tint color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFill.ImageTintColorProperty">
      <summary>
            Identifies the ImageTintColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BitmapFill.Layout">
      <summary>
            Gets and sets fill layout. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BitmapFill.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BitmapFillLayout">
      <summary>
            Bitmap fill layout.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFillLayout.Center">
      <summary>
            Center the image. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFillLayout.Stretch">
      <summary>
            Stretch to fit width and height.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFillLayout.Tile">
      <summary>
            Tile images.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapFillLayout.Fit">
      <summary>
            Fit image to fill area and keep original image aspect ratio.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BitmapSmoothing">
      <summary>
            Bitmap smoothing options
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.None">
      <summary>
            No smoothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.Point">
      <summary>
            Point smoothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.Linear">
      <summary>
            Linear smoothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.Anisotropic">
      <summary>
            Anisotropic smoothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.PyramidalQuad">
      <summary>
            PyramidalQuad smoothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BitmapSmoothing.GaussianQuad">
      <summary>
            GaussianQuad smoothing.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Border">
      <summary>
            Border class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Border.Color1">
      <summary>
            Gets or sets primary color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Border.Color1Property">
      <summary>
            Identifies the Color1 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Border.Color2">
      <summary>
            Gets or sets secondary color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Border.Color2Property">
      <summary>
            Identifies the Color2 dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Border.Style">
      <summary>
            Gets or sets border style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Border.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Border.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Border.Width">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Border.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BorderType">
      <summary>
            Border types.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BorderType.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BorderType.Inner">
      <summary>
            Border is inside the object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BorderType.Outer">
      <summary>
            Border is outside the object.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BoundsDoublePolar">
      <summary>
            Polar boundaries. Angle minimum...angle maximum and radius minimum... radius maximum.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="angleMin">Angle minimum</param>
      <param name="angleMax">Angle maximum</param>
      <param name="radiusMin">Radius minimum</param>
      <param name="radiusMax">Radius maximum</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="angleMin">Angle minimum</param>
      <param name="angleMax">Angle maximum</param>
      <param name="radiusMin">Radius minimum</param>
      <param name="radiusMax">Radius maximum</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.AngleMax">
      <summary>
            Gets or sets angle maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.AngleMaxProperty">
      <summary>
            Identifies the AngleMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.AngleMin">
      <summary>
            Gets or sets angle minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.AngleMinProperty">
      <summary>
            Identifies the AngleMin dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.RadiusMax">
      <summary>
            Gets or sets radius maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.RadiusMaxProperty">
      <summary>
            Identifies the RadiusMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.RadiusMin">
      <summary>
            Gets or sets radius minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.RadiusMinProperty">
      <summary>
            Identifies the RadiusMin dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.SetValues(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="aMin">Angle min value</param>
      <param name="rMin">Radius min value</param>
      <param name="aMax">Angle max value</param>
      <param name="rMax">Radius max value</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoublePolar.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.BoundsDoubleXY">
      <summary>
            XY boundaries. X minimum...X maximum and Y minimum... Y maximum.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="xMin">X minimum</param>
      <param name="xMax">X maximum</param>
      <param name="yMin">Y minimum</param>
      <param name="yMax">Y maximum</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="xMin">X minimum</param>
      <param name="xMax">X maximum</param>
      <param name="yMin">Y minimum</param>
      <param name="yMax">Y maximum</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.SetValues(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="xMin">X minimum value</param>
      <param name="xMax">X maximum value</param>
      <param name="yMin">Y minimum value</param>
      <param name="yMax">Y maximum value</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.XMax">
      <summary>
            Gets or sets X maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.XMaxProperty">
      <summary>
            Identifies the XMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.XMin">
      <summary>
            Gets or sets X minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.XMinProperty">
      <summary>
            Identifies the XMin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.YMax">
      <summary>
            Gets or sets Y maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.YMaxProperty">
      <summary>
            Identifies the YMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.YMin">
      <summary>
            Gets or sets Y minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.BoundsDoubleXY.YMinProperty">
      <summary>
            Identifies the YMin dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ButtonState">
      <summary>
            User interactive object button state.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ButtonState.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState)">
      <summary>
            Constructor.
            </summary>
      <param name="button">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>button</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ButtonState.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState)</parameter>
          </include>
        </markup>
      </param>
      <param name="state">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>state</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ButtonState.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ButtonState.Button">
      <summary>
            Button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ButtonState.State">
      <summary>
            State.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ButtonState.ToString">
      <summary>
            Return ButtonState as string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ButtonState.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CaptureEventArgs">
      <summary>
            Represents a class that provides arguments for the Capture event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CaptureEventArgs.#ctor(System.Boolean,System.String,System.String)">
      <summary>
            Creates and initializes a new instance of Capture class.
            </summary>
      <param name="success">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>success</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CaptureEventArgs.#ctor(System.Boolean,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileName</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CaptureEventArgs.#ctor(System.Boolean,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="failureReason">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>failureReason</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CaptureEventArgs.#ctor(System.Boolean,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CaptureEventArgs.Chart">
      <summary>
            The chart that was just rendered.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CaptureEventArgs.FailureReason">
      <summary>
            Failure reason, if any.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CaptureEventArgs.Filename">
      <summary>
            File name of capture. Null for clipboard.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CaptureEventArgs.Success">
      <summary>
            Success status of capture.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CenterClipping">
      <summary>
            Clipping at the center of the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CenterClipping.None">
      <summary>
            No clipping, data values can move over the center to the opposite side of the chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CenterClipping.Center">
      <summary>
            Data values are clipped if their amplitude value passes the center of the chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CenterClipping.InnerCircle">
      <summary>
            Data values are clipped at the edge of the InnerCircle, which is at the innermost Amplitude value of the corresponding axis. This value is either the minimum or the maximum AmplitudeAxis value depending on the axis being reversed.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartEventArgs">
      <summary>
            Represents a class that provides arguments for a chart event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of ChartEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition">
      <summary>
            Chart event marker vertical position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition.Top">
      <summary>
            Top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition.GraphTop">
      <summary>
            Graph top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition.GraphCenter">
      <summary>
            Graph center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition.GraphBottom">
      <summary>
            Graph bottom.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition.Bottom">
      <summary>
            Bottom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartException">
      <summary>
            Chart exception class. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartException.ExceptionInfo">
      <summary>
            ExceptionInfo contains information about the exception as structs
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartInfo">
      <summary>
            Information about LightningChart used when throwing errors.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.ActiveView">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.ChartInfo.ActiveView</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.AliveCount">
      <summary>
            Number of charts currently alive.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.ChartHeight">
      <summary>
            Gets chart object's screen heigth.
            <para>The value is in pixels for WinForms applications and in DIPs for WPF applications.</para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.ChartScreenPosition">
      <summary>
            Gets chart's position on the screen (in pixels)
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.ChartWidth">
      <summary>
            Gets chart object's screen width.
            <para>The value is in pixels for WinForms applications and in DIPs for WPF applications.</para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.CreatedCount">
      <summary>
            Number of total created charts.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.DebuggerAttached">
      <summary>
            Is a deployment key set.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.DeploymentKeyChanged">
      <summary>
            Is a deployment key set (at least once).
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.DisposedCount">
      <summary>
            Number of disposed charts.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.EngineInitResults">
      <summary>
            List of engine init results.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartInfo.GatherChartInfo(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Collect information about chart.
            </summary>
      <param name="chart">The chart where the data is to be collected from</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.Id">
      <summary>
            ID of chart.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.IsDPIAware">
      <summary>
            Is the application DPI aware.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.IsPixelAlignmentOK">
      <summary>
            Checks if pixel alignment information is correct
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.IsPixelAlignmentOn">
      <summary>
            Checks if pixel alignment system is on
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.LastErrorHandled">
      <summary>
            Has a ChartMessage event been registered and handled correctly.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.LicenseStatus">
      <summary>
            Chart license status.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.NagText">
      <summary>
            License nag text.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.PixelAlignmentOffset">
      <summary>
            Returns pixel currently used pixel alignment offset
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.PixelAlignmentOffsetIsFinal">
      <summary>
            Checks if pixel alignment is on
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.RenderDevice">
      <summary>
            Render device information.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.RenderOptions">
      <summary>
            Charts update type.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.ThrowChartErrorsEnabled">
      <summary>
            Is throwing of chart errors enabled in chart settings.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartInfo.ToString">
      <summary>
            Returns struct values as a string.
            </summary>
      <returns>Struct values as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.UndisposedCount">
      <summary>
            Number of charts which were not correctly disposed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartInfo.Version">
      <summary>
            LightningChart version number.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartMessageInfo">
      <summary>
            ChartMessageInfo is passed on ChartMessage and it contains information about the error event.
            Also used as a part of ExceptionInfo.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.Chart">
      <summary>
            LightningChart object where the message happened.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.Description">
      <summary>
            Description of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.Details">
      <summary>
            Details of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.InternalError">
      <summary>
            Source exception of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.MessageSeverity">
      <summary>
            Severity level of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.MessageType">
      <summary>
            Type of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.Source">
      <summary>
            Message source object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.StackTrace">
      <summary>
            Stack trace from a possible exception.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartMessageInfo.TimeStamp">
      <summary>
            Date and time when the message occurred.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartMessageInfo.ToString">
      <summary>
            Returns struct values as a string.
            </summary>
      <returns>Struct values as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartNode">
      <summary>
            Chart base node.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Owner of node</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.CheckIfInvalidRefAndComplain(System.Object)">
      <summary>
            Checks if the given object is null or disposed, and complains if it's not and returns true.
            <para>Idea of this is to do sanity checks on methods, allowing testing of object references required in the method.</para><para>Disposed check is done only on ChartNodes</para><para>
            Call this with required refs, and if the return value is false, exit the method or do something, but skip the usage and 
            try to get out of the situation gracefully. 
            </para><para>
            Notifies the user through <see cref="M:Arction.Wpf.ChartingMVVM.ChartNode.HandleChartMessage(Arction.Wpf.ChartingMVVM.MessageSeverity,Arction.Wpf.ChartingMVVM.MessageType,System.String,System.String,System.Boolean,System.Exception,System.Object)" />. 
            Null objects cause <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.NullReference" /> message and disposed objects cause <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.DisposedObjectAction" /> type message.
            </para><para>
            Severity is always <see cref="F:Arction.Wpf.ChartingMVVM.MessageSeverity.RecoverableError" />.
            </para></summary>
      <param name="item">Item of which validity is to be checked. </param>
      <returns>True if there was some problem with the reference.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.CheckIfInvalidRefAndComplain(System.Object[])">
      <summary>
            Checks if any of the given objects are null or disposed, and complains to user if they are, and returns true.
            <para>Idea of this is to do sanity checks on methods, allowing testing of object references required in the method.</para><para>This works identically to <see cref="M:Arction.Wpf.ChartingMVVM.ChartNode.CheckIfInvalidRefAndComplain(System.Object)" />, but accepts multiple objects. </para><para>Disposed check is done only on ChartNodes</para><para>
            Call this with required refs, and if the return value is false, exit the method or do something, but skip the usage and 
            try to get out of the situation gracefully. 
            </para><para>
            Notifies the user through <see cref="M:Arction.Wpf.ChartingMVVM.ChartNode.HandleChartMessage(Arction.Wpf.ChartingMVVM.MessageSeverity,Arction.Wpf.ChartingMVVM.MessageType,System.String,System.String,System.Boolean,System.Exception,System.Object)" />. 
            Null objects cause <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.NullReference" /> message and disposed objects cause <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.DisposedObjectAction" /> type message.
            </para><para>
            Severity is always <see cref="F:Arction.Wpf.ChartingMVVM.MessageSeverity.RecoverableError" />.
            </para></summary>
      <param name="items">Item of which validity is to be checked. </param>
      <returns>True if there was some problem with any of the references.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.CloneCore(System.Windows.Freezable)">
      <summary>
            MSDN: Makes the instance a clone (deep copy) of the specified Freezable using base (non-animated) property values.
            </summary>
      <param name="sourceFreezable">Source object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>
            MSDN: Makes the instance a modifiable clone (deep copy) of the specified Freezable using current property values.
            </summary>
      <param name="sourceFreezable">Source object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.Dispose">
      <summary>
            Release all resources used by this instance.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>
            MSDN: Makes the instance a frozen clone of the specified Freezable using base (non-animated) property values.
            </summary>
      <param name="sourceFreezable">Source object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartNode.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>
            MSDN: Makes the current instance a frozen clone of the specified Freezable. If the object has animated dependency properties, their current animated values are copied.
            </summary>
      <param name="sourceFreezable">Source object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartNode.m_bIsDisposedByOwner">
      <summary>
            IsDisposed by owner or not
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartOptions">
      <summary>
             Generic options controlling LightningChart behavior. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartOptions.#ctor">
      <summary>
            Chart Options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartOptions.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Chart Options
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartOptions.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.AllowDPIChangeInduceWindowResize">
      <summary>
            Boolean to check if automatic LightningChart resizing / repositioning is allowed when
            application window DPI changes.
            Default value is false. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.AllowDPIChangeInduceWindowResizeProperty">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Arction.Wpf.ChartingMVVM.ChartOptions.AllowDPIChangeInduceWindowResizeProperty</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.AllowInternalCursorChange">
      <summary>
            Gets or sets if allow internal cursor change. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.AllowInternalCursorChangeProperty">
      <summary>
            Identifies the AllowInternalCursorChange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.AllowUserInteraction">
      <summary>
            Gets or sets if allow allow user interaction with interaction device (e.g. mouse). Device hit testing with objects 
            cause CPU overhead when the device is moved. This is a dependency property.
            If device interaction is not absolute necessary directly within chart 
            and if you want to maximize the performance, set this false. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.AllowUserInteractionProperty">
      <summary>
            Identifies the AllowUserInteraction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.ChartMessageMinimumLevel">
      <summary>
            Allows setting a minimum ChartMessage MessageSeverity level.
            Messages with a MessageSeverity below the minimum level will not be sent to the user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.ChartMessageMinimumLevelProperty">
      <summary>
            Allows filtering of ChartMessages 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartOptions.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.RaiseEventsAfterDraw">
      <summary>
             Defines if the events raised during rendering should be emitted only at the end of the drawing (frame) 
             or when the changes occur.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.RaiseEventsAfterDrawProperty">
      <summary>
            Identifies the RaiseEventsAfterDraw dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.ShowDebugData">
      <summary>
             Controls showing debugging information on chart. 
             This is intended only for debugging and special situations. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.ShowDebugDataProperty">
      <summary>
            Identifies the ShowDebugData dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.ShowHints">
      <summary>
             Selects when to show hints about the use of some critical properties.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.ShowHintsProperty">
      <summary>
            Selects whent o show hints about the use of some critical properties.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.ThrowChartExceptions">
      <summary>
            Gets or sets if chart controlled errors will cause an ChartException to be thrown. This is a dependency property.
            Alternatively, you can use ChartError event handler to handle errors. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.ThrowChartExceptionsProperty">
      <summary>
            Identifies the ThrowChartExceptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartOptions.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartOptions.WheelRequiresFocus">
      <summary>
             Defines if the chart reacts to wheel events without focus. 
             This is usefull especially on situations when chart is in scrollable control and 
             it's not wished that the chart processes the wheel events. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartOptions.WheelRequiresFocusProperty">
      <summary>
            Identifies the Options dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartTitleAlignment">
      <summary>
            Chart title align.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.TopLeft">
      <summary>
            Align top-left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.TopLeftMargin">
      <summary>
            Align to top-left margin.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.TopCenter">
      <summary>
            Align top center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.TopRightMargin">
      <summary>
            Align to right margin.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.TopRight">
      <summary>
            Align top-right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.LeftCenter">
      <summary>
            Align left center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.RightCenter">
      <summary>
            Align right center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.BottomLeft">
      <summary>
            Align bottom-left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.BottomLeftMargin">
      <summary>
            Align to bottom-left margin. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.BottomCenter">
      <summary>
            Align bottom center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.BottomRightMargin">
      <summary>
            Align to bottom-right margin.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTitleAlignment.BottomRight">
      <summary>
            Align bottom-right. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartTools">
      <summary>
            Chart tools provides versatile static methods.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.ChartTools</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.AdjustBitmapAlpha(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Adjusts bitmap alpha to given level for every pixel. Doesn't modify the input bitmap.
            </summary>
      <param name="bitmapIn">Input bitmap.</param>
      <param name="alpha">Alpha.</param>
      <returns>Bitmap with selected alpha.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.AntiAliasBitmap(System.Drawing.Bitmap,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Anti-alias bitmap. Makes anti-aliasing for image, or blur-effect.
            </summary>
      <param name="bitmapIn">Source bitmap to be anti-aliased.</param>
      <param name="options">Anti-aliasing options.</param>
      <returns>Creates the correct size output bitmap and returns it. If invalid parameters are given, returns null.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.BitmapFrameTo32BGRA(System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Covert BitmapFrame to 32 BGRA.
            </summary>
      <param name="img">Input BitmapFrame.</param>
      <returns>32BGRA BitmapFrame.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.BitmapSegmentFromBitmap(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Get a segment (sub-region) of a bitmap. 
            </summary>
      <param name="bitmapIn">Source bitmap.</param>
      <param name="firstColumnIndex">Index of first column to appear in output bitmap.</param>
      <param name="segmentWidth">Segment width in pixels.</param>
      <param name="firstRowIndex">Index of first row to appear in output bitmap.</param>
      <param name="segmentHeight">Segment height in pixels.</param>
      <returns>Bitmap segment an a new bitmap.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalcGradient(System.Windows.Media.Color,System.Windows.Media.Color,System.Double)">
      <summary>
            Calculates the gradient color between two colors.
            </summary>
      <param name="colorFrom">From-color.</param>
      <param name="colorTo">To-color.</param>
      <param name="positionPercents">Gradient color position in percents (0...100%).</param>
      <returns>Gradient color.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalcPolygonArea(Arction.Wpf.ChartingMVVM.PointDouble2D[])">
      <summary>
            Get polygon area.
            </summary>
      <param name="points">Polygon route points.</param>
      <returns>Area of polygon.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalcPolygonCenterOfGravity(Arction.Wpf.ChartingMVVM.PointDouble2D[])">
      <summary>
            Calculate center of gravity (centroid) of a homogenous polygon.
            </summary>
      <param name="points">Polygon route points.</param>
      <returns>Center of gravity point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateMapCoordSphericalAngles(Arction.Wpf.ChartingMVVM.MapCoordinate,System.Double,System.Double@,System.Double@)">
      <summary>
            Calculate map coordinate spherical angles, phi and theta. 
            </summary>
      <param name="coordinate">Coordinate.</param>
      <param name="sphereRadius">Sphere radius.</param>
      <param name="phi">Phi angle in degrees.</param>
      <param name="theta">Theta angle in degrees.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateMapDistance(Arction.Wpf.ChartingMVVM.MapCoordinate,Arction.Wpf.ChartingMVVM.MapCoordinate)">
      <summary>
            Calculate distance between two coordinates in world map, by using two coordinates.
            </summary>
      <param name="coordinate1">First coordinate.</param>
      <param name="coordinate2">Second coordinate.</param>
      <returns>Distance in kilometers.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateMapDistance(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculate distance between two coordinates in world map, by using latitude and longitude.
            </summary>
      <param name="coord1">First coordinate.</param>
      <param name="coord2">Second coordinate.</param>
      <returns>Distance in kilometers.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateMapDistance(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculate distance between two coordinates in world map, by using latitude and longitude.
            </summary>
      <param name="longitude1">First point longitude.</param>
      <param name="longitude2">Second point longitude.</param>
      <param name="latitude1">First point latitude.</param>
      <param name="latitude2">Second point latitude.</param>
      <returns>Distance in kilometers.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateMapDistance(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Calculate distance between two coordinates in world map, by using latitude and longitude.
            </summary>
      <param name="coord1">First coordinate.</param>
      <param name="coord2">Second coordinate.</param>
      <returns>Distance in kilometers.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateSphereFullGreatCircleCoords(Arction.Wpf.ChartingMVVM.MapCoordinate,Arction.Wpf.ChartingMVVM.MapCoordinate,System.Double)">
      <summary>
            Calculate great circle coords for sphere.
            </summary>
      <param name="beginPoint">Begin point.</param>
      <param name="endPoint">End point.</param>
      <param name="angleStep">Angle step.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateSphereFullGreatCircleCoords(Arction.Wpf.ChartingMVVM.MapCoordinate,Arction.Wpf.ChartingMVVM.MapCoordinate,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CalculateSphericalRoute(Arction.Wpf.ChartingMVVM.MapCoordinate,Arction.Wpf.ChartingMVVM.MapCoordinate,System.Double,System.Double)">
      <summary>
            Calculate a spherical route (going shortest way, in sphere surface). This is also known as Great Circle route. 
            </summary>
      <param name="beginPoint">Route begin coordinate.</param>
      <param name="endPoint">Route end coordinate.</param>
      <param name="sphereRadius">Sphere radius.</param>
      <param name="angleStep">Angle step.</param>
      <returns>Route waypoints.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CaptureControlToBitmap(System.Windows.Forms.Control)">
      <summary>
            Captures a Control area to a bitmap, very fast. 
            Great for making 
            - Chart  
            - Any other Control
            - Form 
            capture into set of images.
            </summary>
      <param name="control">Control to capture.</param>
      <returns>Bitmap.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)">
      <summary>
             hue = angle of color circle where 0 deg = red, 120 deg = green, 240 deg = blue.
             saturation: defines the brilliance and intensity of a color. default = 1,range = 0-1
             value refers to the lightness or darkness of a color. default = 1, range = 0-1
             alfa describes the transparency. default = 1. range = 0-1
            </summary>
      <param name="hue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="saturation">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saturation</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="alfa">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alfa</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.ColorHSVA(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ColorToInt(System.Drawing.Color)">
      <summary>
            Drawing color to integer.
            </summary>
      <param name="color">Color.</param>
      <returns>Drawing color as ARGB value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ColorToInt(System.Windows.Media.Color)">
      <summary>
            Media color to integer.
            </summary>
      <param name="color">Color.</param>
      <returns>Media color as ARGB value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.Convert2DArrayTo1D``1(``0[0:,0:])">
      <summary>
            Convert 2-dimensional array to 1-dimensional, row by row
            </summary>
      <param name="array">2D array</param>
      <typeparam name="T">Type of item</typeparam>
      <returns>1D array</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertDataToColorsByFixedIntervalPalette(System.Double[],System.Double[],System.Windows.Media.Color[])">
      <summary>
            Convert data values to colors, by given palette. Palette is defined by steps, consisting of value and corresponding color. 
            E.g. 0 : Black, 50: Yellow, 100: Red. 
            The output colors are interpolated based on their position between steps. E.g. in this example palette, 
            data value 60 will be almost yellow, but a little bit blending with red.
            </summary>
      <param name="dataValues">Data values.</param>
      <param name="paletteStepValues">Values of palette. Count must be equal to step color count.</param>
      <param name="paletteStepColors">Colors of palette. Count must be equal to step value count.</param>
      <returns>Colors as ARGB integer values.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertDoubleArrayToBitmap(System.Double[][],System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
      <summary>
            Convert Array of Double to Bitmap.
            </summary>
      <param name="array">Double array.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="maxValue">Maximum value.</param>
      <param name="minValue">Minimum value.</param>
      <param name="stepCount">Step count.</param>
      <param name="colorsA">Alpha array.</param>
      <param name="colorsR">Red array.</param>
      <param name="colorsG">Green array.</param>
      <param name="colorsB">Blue array.</param>
      <returns>Bitmap frame.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertDoubleArrayToBitmap(System.Double[][],System.Windows.Media.Color[],System.Double,System.Double)">
      <summary>
            Convert double array into colors, by using gradient fixed-interval palette.
            </summary>
      <param name="array">Jagged array matrix, M x N.</param>
      <param name="colors">Colors.</param>
      <param name="minValue">Minimum value, which represents the first color.</param>
      <param name="maxValue">Maximum value, which represents the last color.</param>
      <returns>Bitmap.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertFromString(System.String)">
      <summary>
            Convert Hex to Winforms color
            </summary>
      <param name="hex">Hex string</param>
      <returns>Converted color. If unable to convert a color channel (a, r, g, b), returns 0 to that channel.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertImageToFormat32bppArgb(System.Drawing.Image)">
      <summary>
            Converts image format to 32 bits ARGB.
            </summary>
      <param name="sourceImage">Source image, which is not in 32bppArgb format.</param>
      <returns>Image in 32bbArgb format.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertMapCoordDMSToDegrees(System.Int32,System.UInt32,System.Double)">
      <summary>
            Convert DMS (Degrees, minutes, seconds) value to decimal degrees value.
            </summary>
      <param name="degrees">Degrees.</param>
      <param name="arcMinutes">Arc minutes.</param>
      <param name="arcSeconds">Arc seconds.</param>
      <returns>Degrees value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertMapCoordDMSToDegrees(System.UInt32,System.UInt32,System.Double,Arction.Wpf.ChartingMVVM.CoordPostfix)">
      <summary>
            Convert DMS (Degrees, minutes, seconds) value to decimal degrees value, with given post-fix (N,E,S,W).  
            </summary>
      <param name="degrees">Degrees.</param>
      <param name="arcMinutes">Arc minutes.</param>
      <param name="arcSeconds">Arc seconds.</param>
      <param name="postfix">Postfix.</param>
      <returns>Degrees value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertMapCoordTo3DPointOnSphere(Arction.Wpf.ChartingMVVM.MapCoordinate,System.Double)">
      <summary>
            Convert map coordinate to a point in 3D space. The 3D space has origin in (0,0,0).
            </summary>
      <param name="mapCoordinate">Map coordinate.</param>
      <param name="sphereRadius">Sphere radius.</param>
      <returns>3D point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ConvertTicksToSeconds(System.Int64)">
      <summary>
            Converts time ticks to seconds, accurately. 
            </summary>
      <param name="ticks">Ticks value.</param>
      <returns>Seconds value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CreateGrayscaleAlphaMap(System.Drawing.Bitmap)">
      <summary>
            Create a grayscale bitmap of source bitmap's pixels' alpha level.
            White output pixel means A = 255, Black means A = 0, and grayscales values between them. 
            </summary>
      <param name="bitmapIn">Source bitmap whose alpha level is to be investigated pixel-by-pixel.</param>
      <returns>Bitmap having alpha RGB values as grayscale, and alpha 255 in each output pixel.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.Double[][][],System.Windows.Media.Color[],System.Double,System.Double)">
      <summary>
            Convert 3-dimensional array to texture map.
            </summary>
      <param name="data">3-Dimensional array.</param>
      <param name="colors">Color array.</param>
      <param name="minValue">Minimal value of the dataset.</param>
      <param name="maxValue">Maximal value of the dataset.</param>
      <returns>Texture Map.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.CreateMap(System.Windows.Media.Imaging.BitmapFrame[])">
      <summary>
            Create Texture Map packed for VolumeRendering.
            </summary>
      <param name="imgs">Images.</param>
      <returns>Bitmap frame.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ExtractValues(Arction.Wpf.ChartingMVVM.IntensityPoint[0:,0:])">
      <summary>
            Create a jagged array of Intensity series data (IntensityPoint array).
            Extracts IntensityPoint.Value fields. 
            </summary>
      <param name="data">Data.</param>
      <returns>Values array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.GatherApplicationInformation(Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions,Arction.Wpf.ChartingMVVM.LightningChart,System.String,System.String)">
      <summary>
            Gathers various information for debugging purposes as a string and optionally saves the output to a text file.
            Gathered data (if <see cref="T:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions" /> is set to All): system information, LightningChart object information,
            list of running processes, DxDiag output, installed Windows hotfixes.
            </summary>
      <param name="options">Data gathering options flags. See <see cref="T:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions" />.</param>
      <param name="chart">LightningChart object (optional, leave null if not running with a LightningChart instance).</param>
      <param name="path">Path to folder where file is saved (optional, if not specified the data won't be saved to a file and just returned as a string).</param>
      <param name="fileName">Output text file filename (optional, if not specified the default name is created with timestamp).</param>
      <returns>The gathered data as a string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.GetAllControls(System.Windows.Forms.Control,System.Boolean)">
      <summary>
            Get all controls and its subcontrols
            </summary>
      <param name="control">Control whose controls are to investigated</param>
      <param name="getSubControls">Give true if control's subcontrols are seeked too (recursive)</param>
      <returns>List of contorls</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.GetPixelColors(System.Drawing.Bitmap)">
      <summary>
            Get pixel color of a bitmap. This is much faster method than calling GetPixel() separately for each pixel of a bitmap.
            </summary>
      <param name="bitmapIn">Bitmap.</param>
      <returns>Pixel colors as an array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ImageFromResource(System.String,System.Reflection.Assembly)">
      <summary>
            Create image from assembly embedded resource. Includes assembly name in the beginning of resource name. 
            </summary>
      <param name="resourceName">Resource name, without assembly identifier. 
            E.g. "Resources.ArctionLogo.png", not like "Arction.DemoApp.Resources.ArctionLogo.png"</param>
      <param name="resourceAssembly">Assembly where the resource is located</param>
      <returns>Image if success, else null</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ImageFromResourceFullName(System.String,System.Reflection.Assembly)">
      <summary>
            Create image from assembly embbedded resource
            </summary>
      <param name="fullyQualifiedName">Fully qualified resource name.</param>
      <param name="resourceAssembly">Assembly where the resource is located.</param>
      <returns>Image if success, otherwise null.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ImageFromResourceWpf(System.String,System.Reflection.Assembly)">
      <summary>
            Create image from assembly embbedded resource. Includes assembly name in the beginning of resource name. 
            </summary>
      <param name="resourceName">Resource name, without assembly identifier. 
            E.g. "Resources.ArctionLogo.png", not like "Arction.DemoApp.Resources.ArctionLogo.png"</param>
      <param name="resourceAssembly">Assembly where the resource is located</param>
      <returns>Image if success, else null</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.IntensityValuesToIntensityGridPoints(System.Double[][])">
      <summary>
            Convert intensity values jagged array to intensity grid points. Fills IntensityPoint.Value fields only. 
            </summary>
      <param name="values">Values.</param>
      <returns>Rectangular array of intensity points.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.InterpolateBilinear(System.Double[][],System.Int32,System.Int32)">
      <summary>
            Makes bilinear interpolation for given data array.
            </summary>
      <param name="sourceArray">Source data array.</param>
      <param name="factorX">X density multiplier.</param>
      <param name="factorY">Y density multiplier.</param>
      <returns>Interpolated data array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.Is64BitProcess">
      <summary>
            Find out if this process needs 64-bit DLLs. 
            </summary>
      <returns>True if 64-bit DLLs are needed. False if it's happy with 32-bit DLLs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.LoadImages(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.LoadImages(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="folderName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>folderName</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.LoadImages(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartTools.LoadImages(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.MediaColorToDrawingColor(System.Windows.Media.Color)">
      <summary>
            Media color to draw color.
            </summary>
      <param name="color">Color.</param>
      <returns>Media color as Drawing color.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.Rotate3DCoordinate(Arction.Wpf.ChartingMVVM.PointDouble3D,System.Double,System.Double,System.Double)">
      <summary>
            Rotate 3D coordinate with yaw - pitch - roll method.
            </summary>
      <param name="point">3D coordinate.</param>
      <param name="angleAboutXAxis">Rotation angle in degrees, about X-axis.</param>
      <param name="angleAboutYAxis">Rotation angle in degrees, about Y-axis.</param>
      <param name="angleAboutZAxis">Rotation angle in degrees, about Z-axis.</param>
      <returns>Rotated coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.RoundToNearestInterval(System.Double,System.Double)">
      <summary>
            Rounds the value to nearest multiple of Interval.
            </summary>
      <param name="value">Value to round.</param>
      <param name="interval">Interval.</param>
      <returns>Nearest interval multiple.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.SamePoint(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Test if two point equals.
            </summary>
      <param name="p1">Point 1.</param>
      <param name="p2">Point 2.</param>
      <returns>True is points are at about same locations.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ShowLoadedAssemblies">
      <summary>
            Show list of loaded assemblies by this application. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.SolvePointBetweenPoints(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,System.Single,Arction.Wpf.ChartingMVVM.PointFloat@)">
      <summary>
            Solve point within a line going from Point1 to Point2. 
            </summary>
      <param name="point1">First point.</param>
      <param name="point2">Second point.</param>
      <param name="distanceFromP1">Distance from Point1 towards Point2.</param>
      <param name="result">Solved point.</param>
      <returns>Returns true if successfully solved (length is not 0).</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.SolvePointBetweenPoints(Arction.Wpf.ChartingMVVM.PointFloatXYZ,Arction.Wpf.ChartingMVVM.PointFloatXYZ,System.Single)">
      <summary>
            Solve point within a line going from Point1 to Point2. 
            </summary>
      <param name="point1">First point</param>
      <param name="point2">Second point</param>
      <param name="fPointPositionFromP1">Position in range 0...1.</param>
      <returns>Point in position.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.WriteLog(System.String)">
      <summary>
            Write a string to log file. The log file is c:\temp\LightningChartLog.txt.
            </summary>
      <param name="entry">String to write.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.WriteLog(System.String,System.String)">
      <summary>
            Write a string to log file. 
            </summary>
      <param name="entry">String to write.</param>
      <param name="fileName">File name.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartTools.ZoomToDataAndLabelsArea(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Zoom to data and label area.
            </summary>
      <param name="chart">Chart to apply zooming.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions">
      <summary>
            Options for calling GatherApplicationInformation.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.GetSystemInfo">
      <summary>
            Get information about the system like operating system, RAM etc.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.GetChartInfo">
      <summary>
            Get information about LightningChart object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.GetProcessInfo">
      <summary>
            Get information about running processes in the system.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.GetDxDiagInfo">
      <summary>
            Get infromation from DxDiag.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.GetHotfixInfo">
      <summary>
            Get installed Windows hotfixes in the system.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions.All">
      <summary>
            Gather everything
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartUpdateTypes">
      <summary>
             Defines how/when chart is updated and new frames are rendered.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartUpdateTypes.Sync">
      <summary>
            Chart is updated in sync fashion on property changes. This is the fastest way to get most performance out of the chart and 
            to minimize latency. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartUpdateTypes.Async">
      <summary>
             Chart is updated on async fashion. The chart will update as fast as possible after property changes, but the property changes will return as fast as possible, and
             chart will render new frame at some later point. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChartUpdateTypes.LimitedFrameRate">
      <summary>
            Chart will limit the framerate of the updates to value defined by <see cref="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.FrameRateLimit" />. 
            <para>This is similar to the Async option, but keeps prevents new frames to be rendered right after another, thus reducing framerate, but sparing 
            system resources. 
            </para></summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartWeakEventManager">
      <summary>
            Represents a ChartWeakEventManager object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.ChartWeakEventManager</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.AddListener(System.Windows.IWeakEventListener)">
      <summary>
            Add new listener
            </summary>
      <param name="listener">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>listener</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.AddListener(System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.AddListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)">
      <summary>
            Add new listener
            </summary>
      <param name="source">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.AddListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
      <param name="listener">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>listener</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.AddListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Type,System.Windows.IWeakEventListener)">
      <summary>
            Remove listener
            </summary>
      <param name="source">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Type,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
      <param name="listener">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>listener</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Type,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)">
      <summary>
            Remove listener
            </summary>
      <param name="source">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
      <param name="listener">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>listener</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.RemoveListener(System.Windows.Threading.DispatcherTimer,System.Windows.IWeakEventListener)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.StartListening(System.Object)">
      <summary>
            Start listening from source
            </summary>
      <param name="source">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.StartListening(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.StopListening(System.Object)">
      <summary>
            Stop listening from source
            </summary>
      <param name="source">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChartWeakEventManager.StopListening(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1">
      <summary>
            Represents a collection of freezable chart child objects.
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.#ctor">
      <summary>
            Creates and initializes a new instance of ChildObjectCollection class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Creates and initializes a new instance of ChildObjectCollection 
            class that contains the same elements as the specified collection.
            </summary>
      <param name="collection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>collection</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.#ctor(System.Int32)">
      <summary>
            Creates and initializes a new instance of ChildObjectCollection 
            class that is empty and has the specified initial capacity.
            </summary>
      <param name="capacity">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>capacity</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.#ctor(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.AddRange(System.Collections.Generic.IList{`0})">
      <summary>
            Adds the elements of the specified collection to the end of this collection.
            </summary>
      <param name="collection">The collection whose elements should be added to the end of this collection.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.ApplyDelegate(System.Action{System.Collections.Generic.IList{`0}})">
      <summary>
            Apply delegate
            </summary>
      <param name="action">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>action</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.ApplyDelegate(System.Action{System.Collections.Generic.IList{`0}})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.CollectionChanged">
      <summary>
            Occurs when the collection changes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.RemoveFromBeginning(System.Int32)">
      <summary>
            Remove from beginning to index
            </summary>
      <param name="count">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>count</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.RemoveFromBeginning(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.RemoveRange(System.Int32,System.Int32)">
      <summary>
            Removes a range of elements from this collection.
            </summary>
      <param name="startIndex">The zero-based starting index of the range of elements to remove.</param>
      <param name="stopIndex">The zero-based stopping index of the range of elements to remove.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.ChartNode)">
      <summary>
            Set owners for sub-nodes
            </summary>
      <param name="items">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.ChartNode)</parameter>
          </include>
        </markup>
      </param>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.ChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Set chart as owner for items in list. This is special case as LightningChart is not ChartNode.
            </summary>
      <param name="items">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.SetSubNodeOwners(System.Collections.IList,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.ToList">
      <summary>
            Creates a generic list from this collection.
            </summary>
      <returns>A generic list that contains the elements from this collection.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChildObjectCollection`1.CollectionChangedEventHandler">
      <summary>
            Represents the method that handles the CollectionChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Information about the event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags">
      <summary>
            ChildPropertyChanged flags. These flags must be OR'd on each level, so that root level is reported all the flags.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.None">
      <summary>
            No flags, just re-renders the chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAllSeriesDrawData">
      <summary>
            All series draw data must be freed, so root level can reconstruct it.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.UpdateChartTitle">
      <summary>
            Update chart title
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.DisableZoom">
      <summary>
            Disable zooming
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.DoAutoYFit">
      <summary>
            Do auto Y fit now.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAllSeriesLegendIcons">
      <summary>
            Free all series legendbox icon
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeSeriesDrawData">
      <summary>
            Draw data of certain series must be freed, so root level can reconstruct it.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeSeriesLegendIcon">
      <summary>
            Free a series legendbox icon
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAllSeriesDrawDataOfAxis">
      <summary>
            All series draw data of certain axis must be freed, so root level can reconstruct it.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeCertainDrawDataSynchronized">
      <summary>
            Free certain draw data synchronized to main thread. Use this to make LightningChartPro free draw data from object finalizer
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeScrollBarDrawData">
      <summary>
            Free scrollbar draw data
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAllDrawData">
      <summary>
            Free everything
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAllSeriesDrawDataOf3DAxis">
      <summary>
            Free all draw data of 3D series where this 3D axis is bound
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.InvalidateSurfacePaletteSorting">
      <summary>
            Surface palette sorting must be updated
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.ChangeAnnotationOrder">
      <summary>
            Annotation order must be changed in list of annotations.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeMapData">
      <summary>
            Free map draw data.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.CancelRendering">
      <summary>
            Cancel rendering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.RecalculateAutolabel">
      <summary>
            Recalculate autolabel.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeAnnotationsOfAxis">
      <summary>
            Free annotation bound to this axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.FreeNonShiftableSeriesDrawDataOfAxis">
      <summary>
            Free non-shiftable series draw data.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.DirtyDrawData">
      <summary>
             Notification to parent that the settings defining the draw data 
             related to sender and/or relayer has been modified and the drawdata
             needs to be recalculated/updated/redefined/freed. 
             
             It's usually OK to remove the flag from the parameter value
             after processing on parent. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.UpdateLegendBox">
      <summary>
            Update LegendBox as some related property has changed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ChildPropertyChangedFlags.View3DRotationAndOrZoomChanged">
      <summary>
            View3D rotation or zoom has changed.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ClipArea">
      <summary>
            Clip area. Prevents owner series data from rendering in Begin...End range. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ClipArea.#ctor(System.Double,System.Double,Arction.Wpf.ChartingMVVM.ClipDirection)">
      <summary>
            Constructor.
            </summary>
      <param name="begin">Begin value. Start clipping from here. </param>
      <param name="end">End value. End clipping here.</param>
      <param name="clipDirection">Clip direction, X or Y.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ClipArea.#ctor(System.Double,System.Double,Arction.Wpf.ChartingMVVM.ClipDirection,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="begin">Begin value. Start clipping from here. </param>
      <param name="end">End value. End clipping here.</param>
      <param name="clipDirection">Clip direction, X or Y.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ClipArea.#ctor(System.Double,System.Double,System.Int32,Arction.Wpf.ChartingMVVM.ClipDirection)">
      <summary>
            Constructor.
            </summary>
      <param name="begin">Begin value. Start clipping from here. </param>
      <param name="end">End value. End clipping here.</param>
      <param name="clipDirection">Clip direction, X or Y.</param>
      <param name="marginPixels">Margin pixels. Set positive to clip more, negative to clip less.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ClipArea.#ctor(System.Double,System.Double,System.Int32,Arction.Wpf.ChartingMVVM.ClipDirection,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="begin">Begin value. Start clipping from here. </param>
      <param name="end">End value. End clipping here.</param>
      <param name="clipDirection">Clip direction, X or Y.</param>
      <param name="marginPixels">Margin pixels. Set positive to clip more, negative to clip less.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipArea.Begin">
      <summary>
            Begin value. Start clipping from here. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipArea.ClipDirection">
      <summary>
            Clip direction, X or Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipArea.End">
      <summary>
            End value. End clipping here.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipArea.MarginPixels">
      <summary>
            Amount of pixels to clip more from positions calculated from Begin and End values. 
            0: Don't clip more or less. 
            Positive: Clip more, the clipped area is this many pixels wider from both left and right (or top and bottom).
            Negative: Clip less, the clipped area is this many pixels narrower from both left and right (or top and bottom). 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipArea.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ClipArea.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ClipboardImageFormat">
      <summary>
            Clipboard image format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Bmp">
      <summary>
            Windows bitmap, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Png">
      <summary>
            Portable network graphics, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Jpg">
      <summary>
            JPG, JPEG, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Tif">
      <summary>
            Tagged image format file, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Gif">
      <summary>
            Graphic interchange format, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipboardImageFormat.Emf">
      <summary>
            Enhanced metafile, vector format.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ClipDirection">
      <summary>
            Clip direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipDirection.None">
      <summary>
            None. Don't clip, disabled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipDirection.X">
      <summary>
            Clip in X direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ClipDirection.Y">
      <summary>
            Clip in Y direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ColorTheme">
      <summary>
            Theme colors.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.Dark">
      <summary>
            Dark color theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.LightGray">
      <summary>
            Light gray color theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.SkyBlue">
      <summary>
            Sky blue color theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.TurquoiseHexagon">
      <summary>
            Light blue dynamic theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.Magma">
      <summary>
            Red Magma theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.Auroras">
      <summary>
            Auroras theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.BrushedMetal">
      <summary>
            Brushed metal.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.RedCarbon">
      <summary>
            Red carbon theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.Paper">
      <summary>
            Paper theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.WorldCyberSpace">
      <summary>
            World cyber space
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ColorTheme.CustomDynamicTheme">
      <summary>
            Custom Dynamic theme. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ContourLineLabels">
      <summary>
            Contour Line Label's properties.
            Property tree: if enabled; manipulate format, font and color of text.
            Default state is disabled;
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ContourLineLabels.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ContourLineLabels.#ctor(Arction.Wpf.ChartingMVVM.ChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Owner of this object.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ContourLineLabels.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineLabels.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ContourLineLabels.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ContourLineLabels.Font">
      <summary>
            Gets or sets title font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineLabels.FontProperty">
      <summary>
            Identifies the Font dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ContourLineLabels.LabelsNumberFormat">
      <summary>
            Gets or sets labels number format. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineLabels.LabelsNumberFormatProperty">
      <summary>
            Identifies the LabelsNumberFormat dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ContourLineLabels.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ContourLineLabels.ToString">
      <summary>
            Description of class.
            </summary>
      <returns>description</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ContourLineLabels.Visible">
      <summary>
            Gets or sets text visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineLabels.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ContourLineType3D">
      <summary>
            The contour line type for Surface series, 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.None">
      <summary>
            No contour line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.FastColorZones">
      <summary>
            Performance optimized thin vertical zones based on Y-field (height). All lines use same color. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.FastPalettedZones">
      <summary>
            Performance optimized thin zone at palette step edge based on Y-field (height in the 3D Surface series data point), various colors set by the palette.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.ColorLineByY">
      <summary>
            The contour lines is calculated based on Y-field (height in the 3D Surface series data point). Single color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.PalettedLineByY">
      <summary>
            The contour lines are calculated based on Y-field (height). Various colors set by the palette.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.ColorLineByValue">
      <summary>
            The contour lines are calculated based on Value-field (in the 3D Surface series data point). Single color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineType3D.PalettedLineByValue">
      <summary>
            The contour lines are calculated based on Value-field (in the 3D Surface series data point). Various colors set by the palette.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ContourLineTypeXY">
      <summary>
            The contour line type for Intensity/Color map series, 2D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineTypeXY.None">
      <summary>
            No contour line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineTypeXY.FastColorZones">
      <summary>
            Performance optimized thin vertical zones based on intensityValue (height). All lines use same color. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineTypeXY.FastPalettedZones">
      <summary>
            Performance optimized thin zone at palette step edge based on intensityValue (height), various colors set by the palette.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineTypeXY.ColorLine">
      <summary>
            The contour lines are made with actual lines. Single color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ContourLineTypeXY.PalettedLine">
      <summary>
            The contour lines are made with actual lines. Various colors set by the palette.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ConversionRoutines">
      <summary>
            Static class for converting WPF to WinForms objects and vice versa
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ConversionRoutines.ToWinFormsColor(System.Windows.Media.Color)">
      <summary>
            Convert WPF color to WinForms color
            </summary>
      <param name="color">Color to convert</param>
      <returns>Color</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ConversionRoutines.ToWinFormsImage(System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Converts image from wpf to winforms
            </summary>
      <param name="sourceImage">Source image</param>
      <returns>Image as winforms</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ConversionRoutines.ToWinFormsImage(System.Windows.Media.Imaging.BitmapImage)">
      <summary>
            Converts image from wpf to winforms
            </summary>
      <param name="sourceImage">Source image</param>
      <returns>Image as winforms</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ConversionRoutines.ToWPFColor(System.Drawing.Color)">
      <summary>
            Convert WinForms color to WPF color
            </summary>
      <param name="color">Color to convert</param>
      <returns>Color</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ConversionRoutines.ToWPFImage(System.Drawing.Image)">
      <summary>
            Converts image from winforms to wpf
            </summary>
      <param name="sourceImage">Source image</param>
      <returns>Image as wpf</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateSystem">
      <summary>
            Coordinate system selector.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateSystem.ScreenCoordinates">
      <summary>
            Use screen coordinates 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateSystem.RelativeCoordinatesToTarget">
      <summary>
            Use relative screen coordinates to target. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateSystem.AxisValues">
      <summary>
            Use axis values. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateSystem3DPie">
      <summary>
            Coordinate system selector for 3DPie.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateSystem3DPie.ScreenCoordinates">
      <summary>
            Use screen coordinates. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateSystem3DPie.RelativeCoordinatesToTarget">
      <summary>
            Use relative screen coordinates to target. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordPostfix">
      <summary>
            Degrees, arc minutes, arc seconds representation coordinate postfix. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordPostfix.N">
      <summary>
            North.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordPostfix.E">
      <summary>
            East.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordPostfix.S">
      <summary>
            South.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordPostfix.W">
      <summary>
            West.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordXY">
      <summary>
            2D coordinate, double format. Used with UserInteractiveObject.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordXY.#ctor(System.Double,System.Double)">
      <summary>
            Constructor
            </summary>
      <param name="x">X</param>
      <param name="y">Y</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordXY.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor
            </summary>
      <param name="x">X</param>
      <param name="y">Y</param>
      <param name="tag">Tag, freely assignable object</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXY.Tag">
      <summary>
            Tag. Freely assignable object
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordXY.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXY.X">
      <summary>
            X value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXY.Y">
      <summary>
            Y value
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordXYZ">
      <summary>
            3D coordinate structure.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordXYZ.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXYZ.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXYZ.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordXYZ.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Cull">
      <summary>
            Culling of 3D triangles.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Cull.None">
      <summary>
            No culling, render all triangles regardless of their normal angle to camera.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Cull.Clockwise">
      <summary>
            Cull clockwise defined triangles.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Cull.CounterClockwise">
      <summary>
            Cull counterclockwise defined triangles
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CursorStyle">
      <summary>
            Cursor styles.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CursorStyle.VerticalNoTracking">
      <summary>
            Vertical cursor. No series values tracking. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CursorStyle.HairCrossTracking">
      <summary>
            Hair cross vertical cursor. Resolves values from series and draws horizontal line at the section of cursor and series. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CursorStyle.PointTracking">
      <summary>
            Point tracking. Resolves values from series and draws a point with selected style at the section of cursor and series. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs">
      <summary>
            Represents a class that provides arguments for the CustomLinePointColoringAndShaping base event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of CustomLinePointColoringAndShapingBaseEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.CanModifyColors">
      <summary>
            Tells if Colors array can be modified.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.CanModifyCoords">
      <summary>
            Tells if Coords array can be modified.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.Colors">
      <summary>
            Custom colors.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.Coords">
      <summary>
            Screen coordinates of line points.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.DataPointIndices">
      <summary>
            Data point indices of the points that appear in the Coords and Colors arrays.
            Subsequent data points hitting the same screen coordinate may have been reduced.
            DataPointIndices array will tell indices which were actually used. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.HasDataPointIndices">
      <summary>
            Has data point indices information available. Not applicable to all series types. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomLinePointColoringAndShapingBaseEventArgs.SweepPageIndex">
      <summary>
            Page index in sweeping X axis (0 or 1), for others, 0. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomTickStyle">
      <summary>
            Custom Tick And Grid Style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomTickStyle.TickAndGrid">
      <summary>
            Style Tick and Grid. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomTickStyle.Tick">
      <summary>
            Style Tick.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomTickStyle.Grid">
      <summary>
            Style Grid. Labels are not shown with this style.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.D3DImageCopy">
      <summary>
            Class to get D3DImage working with remote desktop connection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.D3DImageCopy.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.D3DImageCopy.GetBackBuffer">
      <summary>
            Get backbuffer.
            </summary>
      <returns>Backbuffer.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataBreakingOptions">
      <summary>
            Data breaking options.
            Defines, if gaps are enabled on series data and by which value.
            Default state is disabled and default gap value is Double.NaN;
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataBreakingOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataBreakingOptions.#ctor(Arction.Wpf.ChartingMVVM.ChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Owner of this object.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataBreakingOptions.Enabled">
      <summary>
            Data gap defining value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataBreakingOptions.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataBreakingOptions.ToString">
      <summary>
            TO String
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.DataBreakingOptions.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataBreakingOptions.Value">
      <summary>
            Data gap defining value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataBreakingOptions.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DefaultColors">
      <summary>
            Default colors
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AnnotationArrowWpf">
      <summary>
            Annotation arrow color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AnnotationBorderWpf">
      <summary>
            Annotation border color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AnnotFillGradientWpf">
      <summary>
            Annotation gradient fill color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AnnotFillWpf">
      <summary>
            Annotation fill color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AnnottextWpf">
      <summary>
            Annotation text color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisGridStripsWpf">
      <summary>
            Axis grid strips fill
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisLabelsWpf">
      <summary>
            Axis labels color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisMajorDivTick3DWpf">
      <summary>
            Axis major div tick 3D 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisMajorDivTickWpf">
      <summary>
            Axis major division tick color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisNibs2DWpf">
      <summary>
            Axis scale nibs color, 2D
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisNibs3DWpf">
      <summary>
            Axis scale nibs color, 3D
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisTitleShadowWpf">
      <summary>
            Axis title shadow color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisTitleWpf">
      <summary>
            Axis title color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.AxisUnitsWpf">
      <summary>
            Axis units color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BackgroundGradientWpf">
      <summary>
            Background gradient color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BackgroundWpf">
      <summary>
            Background color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BarsGradientWpf">
      <summary>
            Bar series gradient color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BarsWpf">
      <summary>
            Bar series color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BlinkGradientStartWpf">
      <summary>
            Blink gradient color 1
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.BlinkGradientStopWpf">
      <summary>
            Blink gradient color 2
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorBorderWpf">
      <summary>
            Data cursor border color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorFill1Wpf">
      <summary>
            Data cursor Fill1 color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorFill2Wpf">
      <summary>
            Data cursor Fill2 color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorFill3Wpf">
      <summary>
            Data cursor Fill3 color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorLabelFill1Wpf">
      <summary>
            Data cursor label Fill1 color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorTableBackWpf">
      <summary>
            Data cursor table background color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DataCursorTableBorderWpf">
      <summary>
            Data cursor table border color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.DefaultColorTheme">
      <summary>
            Default color theme.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ErrorBarsWpf">
      <summary>
            Error bars color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.GraphBackgroundGradientWpf">
      <summary>
            Graph background gradient color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.GraphBackgroundWpf">
      <summary>
            Graph background color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.GraphBorderWpf">
      <summary>
            Graph border color 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxBorderWpf">
      <summary>
            Legend box border color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxCategoryWpf">
      <summary>
            Legend box category text color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxCheckBoxWpf">
      <summary>
            Legend box checkbox border color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxCheckMarkWpf">
      <summary>
            Legend box checkbox mark color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxGradientWpf">
      <summary>
            Legend box gradient color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxShadowWpf">
      <summary>
            Legend box shadow color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxTextWpf">
      <summary>
            Legend box text color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxUnitsWpf">
      <summary>
            LegendBox Units Color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxValueLabelsWpf">
      <summary>
            LegendBox value labels color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LegendBoxWpf">
      <summary>
            Legend box color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.LineSeriesCursorWpf">
      <summary>
            Line series cursor color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.MapItemTitle">
      <summary>
            Map item title
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.PolarAxisUnitsWpf">
      <summary>
            Polar axis units color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.PolarAxisWpf">
      <summary>
            Polar axis color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_BackgroundFill_ColorWPF">
      <summary>
            Default color for ScrollBar.BackgroundFill.Color property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_BackgroundFill_GradientColorWPF">
      <summary>
            Default color for ScrollBar.BackgroundFill.GradientColor property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_Border_Color1WPF">
      <summary>
            Default color for ScrollBar.Border.Color1 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_Border_Color2WPF">
      <summary>
            Default color for ScrollBar.Border.Color2 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_BorderColorWPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.BorderColor property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_Color1WPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.Color1 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_Color2WPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.Color2 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_Icon_BorderColorWPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.Icon.BorderColor property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_Icon_Color1WPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.Icon.Color1 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ButtonOptions_Icon_Color2WPF">
      <summary>
            Default color for ScrollBar.ButtonOptions.Icon.Color2 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ScrollThumbOptions_BorderColorWPF">
      <summary>
            Default color for ScrollBar.ScrollThumbOptions.BorderColor property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ScrollThumbOptions_Color1WPF">
      <summary>
            Default color for ScrollBar.ScrollThumbOptions.Color1 property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ScrollBar_ScrollThumbOptions_Color2WPF">
      <summary>
            Default color for ScrollBar.ScrollThumbOptions.Color2 property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DefaultColors.SeriesForBlackBackgroundWpf">
      <summary>
            Default series colors against black background
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DefaultColors.SeriesWpf">
      <summary>
            Default colors
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.SimpleHighlightGradientWpf">
      <summary>
            Gradient when blinking is not used, on mouse over 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.TitleShadowWpf">
      <summary>
            Title shadow color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.TitleWpf">
      <summary>
            Title color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.WallGridStrip1Wpf">
      <summary>
            Wall grid strip color 1
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.WallGridStrip2Wpf">
      <summary>
            Wall grid strip color 2
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.WallsWpf">
      <summary>
            Walls color in 3D view
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.XAxisWpf">
      <summary>
            X axis color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.YAxisWpf">
      <summary>
            Y axis color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ZoomRectangleFillWpf">
      <summary>
            Zoom rectangle fill color
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DefaultColors.ZoomRectangleWpf">
      <summary>
            Zoom rectangle border color
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DeviceTypeFlags">
      <summary>
             Flags specifying possible rendering engines.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DeviceTypeFlags.None">
      <summary>None of the engines.</summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DeviceTypeFlags.DX9">
      <summary>DX9 engine.</summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DeviceTypeFlags.DX11">
      <summary>DX11 engine.</summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult">
      <summary>
            DigitalLineSeries coordinate solver result.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.CoordBottom">
      <summary>
            Bottom Y-coordinate at cursor position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.CoordTop">
      <summary>
            Top Y-coordinate at cursor position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.MinIndex">
      <summary>
            Minimum data point index.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.NearestX">
      <summary>
            Nearest X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.PointCount">
      <summary>
            Data point count for column.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.SolveStatus">
      <summary>
            Solve status. Use values only if SolveStatus is OK.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DigitalLineSeriesCoordinateSolveResult.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult">
      <summary>
            DigitalLineSeries value solve result.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.NearestDataPointIndex">
      <summary>
            Nearest data point index of the searched X value. Note that e.g. in real-time examples this is only valid when there is no data added to series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.NearestX">
      <summary>
            Nearest X value of the searched X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.SolveStatus">
      <summary>
            Solve status. Use result values only if SolveStatus is OK.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.YMax">
      <summary>
            Max Y value on the searched X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DigitalLineSeriesValueSolveResult.YMin">
      <summary>
            Min Y value on the searched X value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Direction">
      <summary>
            Directions.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.None">
      <summary>
            No direction. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Right">
      <summary>
            Right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Up">
      <summary>
            Up.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Left">
      <summary>
            Left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Down">
      <summary>
            Down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Vertical">
      <summary>
            Vertical (right). 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Direction.Horizontal">
      <summary>
            Horizontal (down). 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DoubleClickAction3D">
      <summary>
            Double click zoom/pan operation. 
            <para>
            Used as value for <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.DevicePrimaryButtonDoubleClickAction" /> property, 
            to define what happens when device primary button is double clicked.
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DoubleClickAction3D.Off">
      <summary>
            Disabled. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DoubleClickAction3D.ZoomToDataAndLabelsArea">
      <summary>
            Zoom to fit all data and LabelsArea (the graph) to area limited by margins and <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPadding" />. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DpiHelper">
      <summary>
            Static helper class that contains helpers on DPI related issues.
            Meaning mainly PX to DIP conversions. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.DipToPx(System.Double,System.Boolean)">
      <summary>
             Converts given DIP (Device Independent Pixels) values to PX (Screen pixels) using system DPI settings. 
            </summary>
      <param name="DIP">Value to convert in DIPs</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.DipToPx(System.Drawing.RectangleF@)">
      <summary>
             Converts given rectangle size and position defined in DIP (Device Independent Pixels) to PX (Screen pixels) 
             values using system DPI settings. 
            </summary>
      <param name="PX">Rectangle to convert / modify, defined in DIPs.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.DipToPx(System.Single,System.Boolean)">
      <summary>
             Converts given DIP (Device Independent Pixels) values to PX (Screen pixels) using system DPI settings. 
            </summary>
      <param name="DIP">Value to convert in DIPs</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.DipToPx(System.Windows.Point)">
      <summary>
             Converts given point defined in DIP (Device Independent Pixels) to PX (Screen pixels) 
             values using system DPI settings. 
            </summary>
      <param name="point">Point to convert, defined in DIPs.</param>
      <returns>Point in PX</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DpiHelper.DpiAware">
      <summary>
             Defines if the system process is DPI aware or not. 
             Currently there is no way distinguishing between system aware and Per-monitor aware.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DpiHelper.DpiXFactor">
      <summary>
             Effective Zoom factor of the system DPI of the screen width.
             Factor that describes how many real pixels there are per one DIP in X direction.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DpiHelper.DpiYFactor">
      <summary>
             Effective Zoom factor of the system DPI of the screen height.
             Factor that describes how many real pixels there are per one DIP in Y direction.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.PxToDip(System.Double,System.Boolean)">
      <summary>
             Converts given PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Value to convert in pixels.</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.PxToDip(System.Drawing.RectangleF@)">
      <summary>
             Converts given rectangle size and position defined in PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Rectangle to convert / modify, defined in pixels.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.PxToDip(System.Single,System.Boolean)">
      <summary>
             Converts given PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Value to convert in pixels.</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DpiHelper.PxToDip(System.Windows.Point)">
      <summary>
             Converts given point defined in PX (Screen pixels) to DIP (Device Independent Pixels)
             values using system DPI settings. 
            </summary>
      <param name="point">Point to convert, defined in PX.</param>
      <returns>Point in DIPs</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DraggableObject">
      <summary>
            Draggable handler, handles dragging maneuvers of chart object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DraggableObject.AllowDragging">
      <summary>
            Gets or sets if allow dragging by user. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DraggableObject.AllowDraggingProperty">
      <summary>
            Identifies the AllowDragging dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.DraggableObject.DraggedByUser">
      <summary>
            Dragged by user.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.InvokeDraggedEvent">
      <summary>
            Invoke DraggedByUser event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.DraggableObject.InvokeDraggedEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DraggableObject.m_iMouseDragDistanceTolerance">
      <summary>
            Moving pixel distance after which state is changed to Drag.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.ResetLocation">
      <summary>
            Reset location, if moved by mouse.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.SetAllowDragging(System.Boolean)">
      <summary>
             internal change handler of the AllowDragging property.
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.DraggableObject.SetAllowDragging(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.DraggableObject.SetAllowDragging(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="FinalPosition">True if the position is set due to the end of dragging.
            Implemented original for snapping Smith markers.
            </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DraggableObject.SetProperCursor">
      <summary>
            Set proper cursor. Default for dragging is hand and for resize SizeAll.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DXFeatureLevel">
      <summary>
            DX Feature level.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.Unknown">
      <summary>
            Unknown DX.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_9_1">
      <summary>
            DX 9.1.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_9_2">
      <summary>
            DX 9.2.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_9_3">
      <summary>
            DX 9.3.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_10_0">
      <summary>
            DX 10.0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_10_1">
      <summary>
            DX 10.1.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DXFeatureLevel.DX_11_0">
      <summary>
            DX 11.0.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage">
      <summary>
            Background image for dynamic themes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.None">
      <summary>
            No Dynamic background image
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.BrickWall">
      <summary>
            Default for Dynamic Themes BrickWall
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.Magma">
      <summary>
            Magma style background image
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.Auroras">
      <summary>
            Auroras theme
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.BrushedMetal">
      <summary>
            Brushed metal
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.RedCarbon">
      <summary>
            Red carbon theme 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.Paper">
      <summary>
            Paper theme
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.TurquoiseHexagon">
      <summary>
            TurquiseHexagon background image
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.WorldCyberSpace">
      <summary>
            World cyper space background image
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DynamicBackgroundImage.Custom">
      <summary>
            Custom background image (Add image to your theme via CustomDynamicBackgroundImage variable)
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EngineInitResult">
      <summary>
            Engine Init Result. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineInitResult.DateTime">
      <summary>
             Date and time the engine initialization was tried or the information was created. 
             This fields can not be trusted if the initialization is not tried.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineInitResult.DeviceType">
      <summary>
             Defines the engine type this information concerns.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineInitResult.Exceptions">
      <summary>
            List of exceptions encountered on engine initialization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineInitResult.Success">
      <summary>
             If true, initialization of the engine was successful. False if not. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EngineInitResult.ToString">
      <summary>
            Used to convert GetLastEngineInitResults to string to help reporting of it's contents.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EngineInitResult.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineInitResult.Warnings">
      <summary>
             List of warnings and other messages encountered during initialization, that would have been reported to the ChartError event if they would have been encountered later. 
             <para>These messages will be delivered through the ChartError event for the activated device in a patch after the init.</para></summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EngineWarning">
      <summary>
            Defines a type for messages that can be received from the rendering engine.
            Used to pass messages from engine to LightningChart during initialization.
            <para>Usually the messages are warnings or other notifications intended for optimization and debugging. If they are critical they usually result in exceptions.</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineWarning.Description">
      <summary>
            Summary of the problem on a general level
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineWarning.Details">
      <summary>
            Details of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineWarning.MessageSeverity">
      <summary>
            Severity level of the message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineWarning.MessageType">
      <summary>
            Type of the message.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EngineWarning.op_Explicit(Arction.RenderingDefinitions.EngineWarning)~Arction.Wpf.ChartingMVVM.EngineWarning">
      <summary>
             Conversion to EngineWarning from RD.EngineWarning. There should be a better way for this.
            </summary>
      <param name="src">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>src</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EngineWarning.op_Explicit(Arction.RenderingDefinitions.EngineWarning)~Arction.Wpf.ChartingMVVM.EngineWarning</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EngineWarning.op_Explicit(Arction.RenderingDefinitions.EngineWarning)~Arction.Wpf.ChartingMVVM.EngineWarning</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EngineWarning.TimeStamp">
      <summary>
            Date and time when the event occurred.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EnhancedAntiAliasing">
      <summary>
            Enhanced anti-aliasing. Anti-aliasing is made in GPU shader. 
            This is useful especially for GPUs that don't support anti-aliasing in GPU hardware. 
            Provides better visual quality and clearness of lines than hardware anti-aliasing. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EnhancedAntiAliasing.On">
      <summary>
            Use enhanced anti-aliasing.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EnhancedAntiAliasing.IfNotSupportedByHardware">
      <summary>
            Use only if anti-aliasing is not supported in hardware.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EnhancedAntiAliasing.Off">
      <summary>
            Don't use enhanced anti-aliasing. Anti-aliasing in hardware is used, if it's supported and enabled in object's settings.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkerSymbol">
      <summary>
            Event marker symbol.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkerSymbol.Flag">
      <summary>
            Flag symbol.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkerSymbol.FlagLightning">
      <summary>
            Flag with a lightning on it.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkerSymbol.Rectangle">
      <summary>
            Rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkerSymbol.Circle">
      <summary>
            Circle (or oval).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkerSymbol.Triangle">
      <summary>
            Triangle.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ExceptionInfo">
      <summary>
            Struct for containing error and debug information for ChartExceptions.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ExceptionInfo.ChartInfo">
      <summary>
            Information about LightningChart instance.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ExceptionInfo.ChartMessageInfo">
      <summary>
            Information about chart message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ExceptionInfo.DataGatheringSuccessful">
      <summary>
            Indicates if data was successfully gathered on an exception.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ExceptionInfo.SystemInfo">
      <summary>
            Information about users system.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExceptionInfo.ToString">
      <summary>
            Return information as a string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExceptionInfo.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ExtensionsClass">
      <summary>
            Extensions
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CalculateGradient2(System.Drawing.Color,System.Drawing.Color,System.Double)">
      <summary>
            Calculate gradient for Wpf
            </summary>
      <param name="colorFrom">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorFrom</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CalculateGradient2(System.Drawing.Color,System.Drawing.Color,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="colorTo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorTo</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CalculateGradient2(System.Drawing.Color,System.Drawing.Color,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="positionPercents">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>positionPercents</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CalculateGradient2(System.Drawing.Color,System.Drawing.Color,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CalculateGradient2(System.Drawing.Color,System.Drawing.Color,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CopyItems(System.Array,System.Array,System.Int32)">
      <summary>
            Copy array
            </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CopyItems(System.Array,System.Array,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="destination">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>destination</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CopyItems(System.Array,System.Array,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.CopyItems(System.Array,System.Array,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.RenderingDefinitions.PointDouble2D)">
      <summary>
            Square distance between two points
            </summary>
      <param name="from">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>from</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.RenderingDefinitions.PointDouble2D)</parameter>
          </include>
        </markup>
      </param>
      <param name="dest">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.RenderingDefinitions.PointDouble2D)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.RenderingDefinitions.PointDouble2D)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D)">
      <summary>
            Square distance between two points
            </summary>
      <param name="from">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>from</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D)</parameter>
          </include>
        </markup>
      </param>
      <param name="dest">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)">
      <summary>
            Square distance between two points
            </summary>
      <param name="from">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>from</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)</parameter>
          </include>
        </markup>
      </param>
      <param name="dest">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Square distance between two points
            </summary>
      <param name="from">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>from</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </param>
      <param name="dest">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.DistanceSquareTo(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.GatherApplicationInformation(Arction.Wpf.ChartingMVVM.LightningChart,Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions,System.String,System.String)">
      <summary>
            Gathers various information from the current chart for debugging purposes as a string by calling <see cref="M:Arction.Wpf.ChartingMVVM.ChartTools.GatherApplicationInformation(Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions,Arction.Wpf.ChartingMVVM.LightningChart,System.String,System.String)" />
            Optionally saves the output to a text file if file path and file name are specified.
            Gathered data (if <see cref="T:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions" /> is set to All): system information, chart information,
            list of running processes, DxDiag output, installed Windows hotfixes.
            </summary>
      <param name="chart">Chart to collect data from.</param>
      <param name="options">Data gathering options flags. See <see cref="T:Arction.Wpf.ChartingMVVM.ChartTools.GatherDataOptions" />.</param>
      <param name="path">Path to folder where file is saved (optional, if not specified the data won't be saved to a file and just returned as a string).</param>
      <param name="fileName">Output text file filename (optional, if not specified the default name is created with timestamp)</param>
      <returns>The gathered data as a string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.GetItemCount(System.Array)">
      <summary>
            Get item counter
            </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.GetItemCount(System.Array)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.GetItemCount(System.Array)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose``1(System.Collections.Generic.IList{``0},System.Int32)">
      <summary>
             Removes item from the list and then disposes it. 
            </summary>
      <param name="list">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose``1(System.Collections.Generic.IList{``0},System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="i">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose``1(System.Collections.Generic.IList{``0},System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose``1(System.Collections.Generic.IList{``0},System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose(System.Collections.IList,System.Int32)">
      <summary>
             Removes item from the list and then disposes it. 
            </summary>
      <param name="list">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose(System.Collections.IList,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="i">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.RemoveAndDispose(System.Collections.IList,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Drawing.Color)">
      <summary>
             Convert given color to currently active platform.
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Windows.Media.Color)">
      <summary>
             Convert given color to currently active platform.
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Windows.Media.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToCurrentPlat(System.Windows.Media.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToLongString(Arction.Wpf.ChartingMVVM.RendererDeviceType)">
      <summary>
            Change device types to long strings
            </summary>
      <param name="rdi">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rdi</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToLongString(Arction.Wpf.ChartingMVVM.RendererDeviceType)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToLongString(Arction.Wpf.ChartingMVVM.RendererDeviceType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPlatSize(Arction.Wpf.ChartingMVVM.SizeInt)">
      <summary>
            To WPF size
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPlatSize(Arction.Wpf.ChartingMVVM.SizeInt)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPlatSize(Arction.Wpf.ChartingMVVM.SizeInt)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPublicColor(System.Drawing.Color)">
      <summary>
            Make public color
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPublicColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToPublicColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToShortString(Arction.Wpf.ChartingMVVM.RendererDeviceType)">
      <summary>
            Change device types to short strings
            </summary>
      <param name="rdi">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rdi</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToShortString(Arction.Wpf.ChartingMVVM.RendererDeviceType)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToShortString(Arction.Wpf.ChartingMVVM.RendererDeviceType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToSizeInt(System.Windows.Size)">
      <summary>
            To RD.SizeInt size
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToSizeInt(System.Windows.Size)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToSizeInt(System.Windows.Size)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(Arction.RenderingDefinitions.ColorRD)">
      <summary>
            To WinForm color
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(Arction.RenderingDefinitions.ColorRD)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(Arction.RenderingDefinitions.ColorRD)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Drawing.Color)">
      <summary>
            To WinForm color
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Windows.Media.Color)">
      <summary>
            To WinForm color
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Windows.Media.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsColor(System.Windows.Media.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsSize(System.Windows.Size)">
      <summary>
            To WinForm size
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsSize(System.Windows.Size)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWinFormsSize(System.Windows.Size)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfColor(System.Drawing.Color)">
      <summary>
            To WPF color
            </summary>
      <param name="color">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfColor(System.Drawing.Color)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(Arction.Wpf.ChartingMVVM.SizeInt)">
      <summary>
            To WPF size
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(Arction.Wpf.ChartingMVVM.SizeInt)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(Arction.Wpf.ChartingMVVM.SizeInt)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(System.Drawing.Size)">
      <summary>
            To WPF size
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(System.Drawing.Size)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ExtensionsClass.ToWpfSize(System.Drawing.Size)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Fill">
      <summary>
            Fill class that can be applied to a rectangle
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Fill.#ctor">
      <summary>
            Constructor for Fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Fill.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.Bitmap">
      <summary>
            Gets or sets bitmap fill options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.BitmapProperty">
      <summary>
            Identifies the Bitmap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.BitmapSmoothing">
      <summary>
            Gets or sets bitmap texture filtering. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.BitmapSmoothingProperty">
      <summary>
            Identifies the BitmapSmoothing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.Color">
      <summary>
            Gets or sets fill color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Fill.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Fill.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.GradientColor">
      <summary>
            Gets or sets gradient color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.GradientColorProperty">
      <summary>
            Identifies the GradientColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.GradientDirection">
      <summary>
            Gets or sets gradient direction in degrees, angle increases counterclockwise. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.GradientDirectionProperty">
      <summary>
            Identifies the GradientDirection dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.GradientFill">
      <summary>
            Gets or sets gradient type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.GradientFillProperty">
      <summary>
            Identifies the GradientFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Fill.Style">
      <summary>
            Gets or sets fill style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Fill.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Fill.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.FillLayout">
      <summary>
            Fill layout.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.FillLayout.Stretch">
      <summary>
            Stretch layout. Image is stretched to rectangle draw area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.FillLayout.Tile">
      <summary>
            Tile. Use also tile count properties.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.FontsRenderingQuality">
      <summary>
            Fonts rendering quality.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.FontsRenderingQuality.Low">
      <summary>
            No anti-aliasing, best performance. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.FontsRenderingQuality.Mid">
      <summary>
            Anti-aliased fonts.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.FontsRenderingQuality.High">
      <summary>
            Best anti-aliasing and quality, lowest performance. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GPUPreference">
      <summary>
            GPU preference. Is only applicable with D11 device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GPUPreference.SystemSetting">
      <summary>
            Use default GPU.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GPUPreference.PreferHighPerformanceGraphics">
      <summary>
            Try to select high performance GPU.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GPUPreference.PreferLowPowerGraphics">
      <summary>
            Try to select GPU at CPU/Motherboard, which usually uses less power than separate GPU.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GradientFill">
      <summary>
            Gradient fill type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFill.Solid">
      <summary>
            Solid fill, no gradient.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFill.Linear">
      <summary>
            Linear gradient.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFill.Radial">
      <summary>
            Gradient is shaded towards circle edges.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFill.RadialStretched">
      <summary>
            Gradient is shaded towards area edges like ellipse.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFill.Cylindrical">
      <summary>
            Gradient is shaded from color1 to color2 and back to color1.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GradientFillPoint">
      <summary>
            Gradient fill type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFillPoint.Solid">
      <summary>
            Solid fill, no gradient.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFillPoint.Linear">
      <summary>
            Linear gradient.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GradientFillPoint.Edge">
      <summary>
            Gradient is shaded towards area edges like ellipse.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GraphSegmentInfo">
      <summary>
            Graph segment info. Needed when showing multiple Y-axes stacked.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.FirstSegmentTop">
      <summary>
            First segment top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.GraphHeight">
      <summary>
            Graph height.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.SegmentBottoms">
      <summary>
            Segment bottom coordinates. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.SegmentCount">
      <summary>
            Segment count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.SegmentTops">
      <summary>
            Segment top coordinates. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GraphSegmentInfo.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridAxis">
      <summary>
            Grid source axis. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridAxis.None">
      <summary>
            No grid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridAxis.Primary">
      <summary>
            Primary axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridAxis.Secondary">
      <summary>
            Secondary axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridLineSource">
      <summary>
            Selector between custom and normal gridline / ticks rendering. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridLineSource.Both">
      <summary>
            Rendering both custom and normal items.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridLineSource.Custom">
      <summary>
            Custom items are rendered.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridLineSource.Normal">
      <summary>
            Normal items are rendered.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptions">
      <summary>
            Grid options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptions.Color">
      <summary>
            Gets or sets line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptions.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptions.Pattern">
      <summary>
            Gets or sets line pattern. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptions.PatternProperty">
      <summary>
            Identifies the Pattern dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptions.PatternScale">
      <summary>
            Gets or sets pattern scale. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptions.PatternScaleProperty">
      <summary>
            Identifies the PatternScale dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptions.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptions.Visible">
      <summary>
            Gets or sets if grid if visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptions.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptionsAngular">
      <summary>
             Empty class for angular grid options. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsAngular.#ctor">
      <summary>
             Default constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsAngular.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptionsRound">
      <summary>
            Grid options of round views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsRound.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsRound.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsRound.LabelsColor">
      <summary>
            Color of the labels.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsRound.LabelsColorProperty">
      <summary>
            Identifies the LablesColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsRound.LineWidth">
      <summary>
            Gets or sets line width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsRound.LineWidthProperty">
      <summary>
            Identifies the LineWidth dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptionsSmith">
      <summary>
            Grid options of Smith view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmith.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmith.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsSmith.CustomGridLines">
      <summary>
            List of manually defined gridlines.
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsSmith.CustomGridLinesProperty">
      <summary>
             Denpendency proeprty for manually defined gridlines. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmith.Dispose(System.Boolean)">
      <summary>
            Dispose
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.GridOptionsSmith</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsSmith.LabelsVisible">
      <summary>
            Grid labels visible.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsSmith.LabelsVisibleProperty">
      <summary>
            Identifies the RealLabelsVisible dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsSmith.m_CustomGridVals">
      <summary>
             List of manually defined gridline positions as normed values.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsSmith.Source">
      <summary>
            Determines which gridlines are rendered, both, just the custom ones, 
            or just the automatic ones. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsSmith.SourceProperty">
      <summary>
             Denpendency proeprty for manually defined gridlines. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine">
      <summary>
            Smith Grid extra line options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="Owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine.Value">
      <summary>
             Real or Imaginary compnent of the Value of the Gridline position
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLine.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLineCollection">
      <summary>
            Represents a collection of GridOptionsSmithExtraLine objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.GridOptionsSmithExtraLineCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridTypeSmith">
      <summary>
            Enumeration specifying how the smith grid are to be formed. 
            For more information, see AxisSmith.GridType property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridTypeSmith.Distance">
      <summary>
            Determine gridline positions so that each line is positioned in a point where the value is nice and event, 
            and distance to other lines is approximately value set in GridDivSpacing.
            
            For more information on actual positioning, see the GridDivSpacing property of AxisSmith. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridTypeSmith.DivCount">
      <summary>
            Determine gridline positions so that specific number of gridlines are placed on even distances from the center line, that is always 
            drawn. 
            Number of gridlines can be set using GridDivCount property. See that for more information about positioning of the gridlines. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.GridVisibilityOrder">
      <summary>
            Defines the grids position in relation to other elements in depth direction.
            In other words, used in defining in which order different objects are drawn.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridVisibilityOrder.BehindSeries">
      <summary>
            Grid lines behind series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.GridVisibilityOrder.FrontOfSeries">
      <summary>
            Grid lines in front of series.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Highlight">
      <summary>
            Highlight style, when user is over an object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Highlight.None">
      <summary>
            No highlight.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Highlight.Simple">
      <summary>
            Highlight with brighter color, and possibly thicker object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Highlight.Blink">
      <summary>
            Highlight with blinking color, and possibly thicker object.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HighlightedStateEventArgs">
      <summary>
            Defines event information for HighlightedStateEventHandler. Contains information for highlighting state changes. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightedStateEventArgs.IsHighlighted">
      <summary>
            Defines if the item is currently (on next frame) highlighted or not. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightedStateEventArgs.SourceType">
      <summary>
            Reason why the event was launched. Defines the effective source of the event. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HighlightedStateEventHandler">
      <summary>
            Event type for notifying changes in the highlighting state of an object. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HighlightingItemBase">
      <summary>
            Base class for all LC objects that can be highlighted. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.#ctor">
      <summary>
             Constructor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
             Constructor. 
            </summary>
      <param name="owner">Owner object. </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.HighlightingItemBase.Highlight">
      <summary>
            Gets or sets highlight style. Item can be highlighted by user interactive device or by code. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.HighlightingItemBase.HighlightedStateChanged">
      <summary>
            Event telling that highlighted state has changed. Contains information of the new state. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightingItemBase.HighlightProperty">
      <summary>
            Identifies the Highlight dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.InvokeHighlightedStateChangedEvent(Arction.Wpf.ChartingMVVM.HighlightStateSource)">
      <summary>
            Invokes HighlightedStateChanged events. 
            </summary>
      <param name="source">Arguments to use instead of current objects stored MouseEvent arguments. 
            Can be used to speed up speed up the call if the event is already constructed.
            Note that the object is not updated in any way if given, so it can be used to deliver wrong information. 
            </param>
      <returns>
            Return value of the Charts RaiseEvent method. False if the event could not be emitted, true otherwise.
            <para>
            True emitting of the event succeeds. If no event listeners is registered, this should return true.
            </para></returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.IsHighlighted">
      <summary>
            returns true if the object is highlighted. 
            </summary>
      <returns>True if the object is highlighted. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.RemoveHighlight">
      <summary>
             Removes forced highlighting. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.SetHighlight">
      <summary>
             Highlights the object. 
             <para>
             This is a kind of "forced" highlight, and the object might be highlighted even if the highlighting type (defined by Highlight property) is set to None. 
             How the highlighting happens, if any, depends on object. Most objects use the defined type by default, and fall back to Simple highlighting if None is set. 
             </para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighlightingItemBase.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HighlightStateSource">
      <summary>
            Reason/source for highlighting event. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightStateSource.Hover">
      <summary>
            Items highlighting state has changed because of user action. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightStateSource.LegendBox">
      <summary>
            Items highlighting state has changed because of legend box action. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighlightStateSource.UserSet">
      <summary>
            Items highlighting state has changed because of user action. Items SetHighlight or RemoveHighlight has been called.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint">
      <summary>
            HighLow series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="yHigh">Y high value.</param>
      <param name="yLow">Y low value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.#ctor(System.Double,System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="yHigh">Y high value.</param>
      <param name="yLow">Y low value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.#ctor(System.Double,System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="yHigh">Y high value.</param>
      <param name="yLow">Y low value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="yHigh">Y high value.</param>
      <param name="yLow">Y low value.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.PointColor">
      <summary>
            Point Color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.YHigh">
      <summary>
            Y high value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HighLowSeriesPoint.YLow">
      <summary>
            Y low value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HintsVisible">
      <summary>
             Options for defining when to show hints. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HintsVisible.Never">
      <summary>
             Never show any hints
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HintsVisible.DesignTime">
      <summary>
             Hints are visible only at design time. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HintsVisible.Always">
      <summary>
             Hints are visible always.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HorizontalScrollBar">
      <summary>
            Horizontal scrollbar.
            Values use unsigned 64-bit integer value range.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.#ctor">
      <summary>
            Constructor for form editor list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.Alignment">
      <summary>
            Alignment. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when alignment is changed
            </summary>
      <param name="d">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>d</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.AlignmentProperty">
      <summary>
            Alignment property for horizontal scroll bar
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HorizontalScrollBar.Dispose(System.Boolean)">
      <summary>
            Dispose
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.HorizontalScrollBar</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HorizontalScrollBarAlignment">
      <summary>
            Horizontal scroll bar alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HorizontalScrollBarAlignment.None">
      <summary>
            No alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HorizontalScrollBarAlignment.BelowGraph">
      <summary>
            Scrollbar is horizontally aligned below the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HorizontalScrollBarAlignment.GraphCenter">
      <summary>
            Scrollbar is horizontally aligned to the center of the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.HorizontalScrollBarAlignment.AboveGraph">
      <summary>
            Scrollbar is horizontally aligned above the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.HorizontalScrollBarCollection">
      <summary>
            Represents a collection of HorizontalScrollBar objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.HorizontalScrollBarCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IChartNode">
      <summary>
            Interface for identifying chart objects.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IColoredPoint">
      <summary>
            Colored Point.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IColoredPoint.PointColor">
      <summary>
            Color of the point.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IGridOptions">
      <summary>
            Grid options.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IGridOptions.Color">
      <summary>
            Grid color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IGridOptions.Pattern">
      <summary>
            Grid pattern.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IGridOptions.PatternScale">
      <summary>
            Pattern scale
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IGridOptions.ToString">
      <summary>
            Grid to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.IGridOptions.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IGridOptions.Visible">
      <summary>
            Grid visible.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IHighlightingItem">
      <summary>
             Interface of objects that can be highlighted. 
             <para>
              Allows user to highlight the object and define how the object should be highlighted. The objects also report to users when they are highlighted.
             </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IHighlightingItem.Highlight">
      <summary>
            Setter highlighting style. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.IHighlightingItem.HighlightedStateChanged">
      <summary>
            Event telling that highlighted state has changed. Contains information of the new state. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IHighlightingItem.IsHighlighted">
      <summary>
            returns true if the object is highlighted. 
            </summary>
      <returns>True if the object is highlighted. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IHighlightingItem.RemoveHighlight">
      <summary>
             Removes forced highlighting. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IHighlightingItem.SetHighlight">
      <summary>
             Highlights the object. 
             <para>
             This is a kind of "forced" highlight, and the object might be highlighted even if the highlighting type (defined by Highlight property) is set to None. 
             How the highlighting happens, if any, depends on object. Most objects use the defined type by default, and fall back to Simple highlighting if None is set. 
             </para></summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ImageType">
      <summary>
            Image type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ImageType.Raster">
      <summary>
            Raster image, composed from pixels, e.g. Windows bitmap.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ImageType.Vector">
      <summary>
            Vector image, elements composed from graphics instructions, e.g. Enhanced metafile. 
            Vector image can be scaled without quality loss, but may be yield to very big file/data size. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IntensityFillStyle">
      <summary>
            Intensity series fill style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityFillStyle.None">
      <summary>
            No fill.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityFillStyle.FromSurfacePoints">
      <summary>
            Coloring is made from surface data point array colors.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityFillStyle.Toned">
      <summary>
            Single color tone applied over base color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityFillStyle.Paletted">
      <summary>
            Paletted, various colors set by the palette, applied over base color.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder">
      <summary>
            IntensityGridSeries values data order in jagged array.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder.ColumnsRows">
      <summary>
            First dimension is columns, second rows.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder.RowsColumns">
      <summary>
            First dimension is rows, second columns.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IntensityPoint">
      <summary>
            Intensity series data point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IntensityPoint.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="value">Value.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IntensityPoint.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="value">Value.</param>
      <param name="color">Color of the point.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityPoint.Color">
      <summary>
            Color.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IntensityPoint.Equals(System.Object)">
      <summary>
            Check if referenced object is equal to this one. Due Color is not same, even if their components are same, one must check each component separately.
            </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.IntensityPoint.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.IntensityPoint.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.IntensityPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityPoint.Value">
      <summary>
            Intensity value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityPoint.X">
      <summary>
            X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensityPoint.Y">
      <summary>
            Y-coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData">
      <summary>
            IntensitySeries DataCursor ResultTable data visibility flags.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.None">
      <summary>
            Show nothing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.X">
      <summary>
            Show X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.Y">
      <summary>
            Show Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.Value">
      <summary>
            Show value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.Color">
      <summary>
            Show color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesCursorData.Default">
      <summary>
            Show X, Y, Value and Color.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IntensitySeriesOptimization">
      <summary>
            Intensity series optimization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesOptimization.DynamicData">
      <summary>
            Optimize series to give better performance with data changing frequently (node positions, colors and intensity values).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesOptimization.DynamicValuesData">
      <summary>
            Optimize series to give better performance with data changing frequently (intensity values only).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.IntensitySeriesOptimization.StaticData">
      <summary>
            Optimize series to give better performance with data that is not changed frequently. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IPointPolar">
      <summary>
            IPointPolar interface.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointPolar.Amplitude">
      <summary>
            Amplitude.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointPolar.Angle">
      <summary>
            Angle (degrees).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IPointRound">
      <summary>
            IPointRound interface.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IPointSmith">
      <summary>
             Interface of the Smith points.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointSmith.ImgValue">
      <summary>
            Imaginary component of the smith coordinate.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointSmith.RealValue">
      <summary>
            RealValue component of the smith coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IPointUnitCircle">
      <summary>
             Interface for UnitCircle coordinate points.
             X and Y coordinates have normed values in range [-1,1]. Point (0,0) 
             points is at the center of the circle.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointUnitCircle.X">
      <summary>
            X direction coordinate
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.IPointUnitCircle.Y">
      <summary>
            Y direction coordinate
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.IRoundSeriesPoint">
      <summary>
            Base for polar series points.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LatitudePostfix">
      <summary>
            Latitude degrees, arc minutes, arc seconds representation coordinate postfix. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LatitudePostfix.N">
      <summary>
            North.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LatitudePostfix.S">
      <summary>
            South.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LegendBox3DCategorization">
      <summary>
            3D legend box items categorization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBox3DCategorization.None">
      <summary>
            No categorization. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBox3DCategorization.SeriesType">
      <summary>
            Categorization by series type.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LegendBoxCategorization">
      <summary>
            Legend box items categorization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxCategorization.None">
      <summary>
            No categorization. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxCategorization.YAxes">
      <summary>
            Categorization by Y-axes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxCategorization.SeriesType">
      <summary>
            Categorization by series type.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LegendBoxLayout">
      <summary>
            Legend box layout.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxLayout.Horizontal">
      <summary>
            Horizontal.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxLayout.HorizontalRowSpan">
      <summary>
            Horizontal, allow row spanning. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxLayout.Vertical">
      <summary>
            Vertical.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxLayout.VerticalColumnSpan">
      <summary>
            Vertical, allow row spanning. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LegendBoxPosition">
      <summary>
            Legend box position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.TopLeft">
      <summary>
            Top-left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.TopCenter">
      <summary>
            Top center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.TopRight">
      <summary>
            Top-right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.LeftCenter">
      <summary>
            Left center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.RightCenter">
      <summary>
            Right center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.BottomLeft">
      <summary>
            Bottom-left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.BottomCenter">
      <summary>
            Bottom center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.BottomRight">
      <summary>
            Bottom-right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.Manual">
      <summary>
            Manual positioning.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphTopLeft">
      <summary>
            Graph top left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphTopCenter">
      <summary>
            Graph top center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphTopRight">
      <summary>
            Graph top right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphBottomLeft">
      <summary>
            Graph bottom left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphBottomCenter">
      <summary>
            Graph bottom center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphBottomRight">
      <summary>
            Graph bottom right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphLeftMarginCenter">
      <summary>
            Graph left margin center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPosition.GraphRightMarginCenter">
      <summary>
            Graph right margin center.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY">
      <summary>
            Legend box position for XY Views.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.TopLeft">
      <summary>
            Top-left
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.TopCenter">
      <summary>
            Top center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.TopRight">
      <summary>
            Top-right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.LeftCenter">
      <summary>
            Left center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.RightCenter">
      <summary>
            Right center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.BottomLeft">
      <summary>
            Bottom-left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.BottomCenter">
      <summary>
            Bottom center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.BottomRight">
      <summary>
            Bottom-right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.Manual">
      <summary>
            Manual positioning. Offset specifies the legend boxes top-left corner from the views top-left corner. 
            This differs from TopLeft in that the TopLeft position is calculated from the Graph areas top, not the views. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentTopLeft">
      <summary>
            Related segment top left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentTopCenter">
      <summary>
            Related segment top center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentTopRight">
      <summary>
            Related segment top right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentBottomLeft">
      <summary>
            Related segment bottom left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentBottomCenter">
      <summary>
            Related segment bottom center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentBottomRight">
      <summary>
            Related segment bottom right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentLeftMarginCenter">
      <summary>
            Related segment left margin center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LegendBoxPositionXY.SegmentRightMarginCenter">
      <summary>
            Related segment right margin center.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightedSide">
      <summary>
            Surface side which is being lit.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightedSide.Front">
      <summary>
            Top surface is lit.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightedSide.Back">
      <summary>
            Bottom surface is lit.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightedSurfaceSide">
      <summary>
            Surface side which is being lit.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightedSurfaceSide.Top">
      <summary>
            Top surface is lit.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightedSurfaceSide.Bottom">
      <summary>
            Bottom surface is lit.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightingScheme">
      <summary>
            Predefined lighting schemes for 3D view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightingScheme.Default">
      <summary>
            Default lighting scheme, with one point of light and one directional light from camera direction. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightingScheme.DarkPointOfLightAndDirectionalFromCamera">
      <summary>
            Default lighting scheme, with one point of light and one directional light from camera direction. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightingScheme.DirectionalFromCamera">
      <summary>
            Default lighting scheme, with one point of light and one directional light from camera direction. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightingScheme.DiscoRGB">
      <summary>
            3 point of lights, red, green, blue.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightingScheme.DiscoCMY">
      <summary>
            3 point of lights, cyan, magenta, yellow.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart">
      <summary>
            LightningChart is an ultimate data visualization chart control for high-speed 2D and 3D purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.#ctor">
      <summary>
            Default constructor. Creates new LightningChart object. 
            <para></para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.#ctor(Arction.Wpf.ChartingMVVM.RenderingSettings)">
      <summary>
            Creates new LightningChart object. 
            <para>
            Takes parameter that can be used in defining certain settings on creation time. Note that some of the settings are dangerous to use, 
            and the constructor itself is intended for advanced use. In normal situation it's better to use the default parameterless constructor. 
            </para></summary>
      <param name="renderingSettings">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>renderingSettings</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.#ctor(Arction.Wpf.ChartingMVVM.RenderingSettings)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ActiveView">
      <summary>
            Gets or sets the active view selection. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ActiveViewObject">
      <summary>
             Getter of the active view object as ViewBase.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ActiveViewProperty">
      <summary>
            Identifies the ActiveView dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.AfterRendering">
      <summary>
            Occurs right after the chart has been rendered.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Background">
      <summary>
            Gets or sets background brush. Set a brush that has alpha less than 255 to allow the chart to be seen through. 
            Also set colors with less alpha than 255 for other chart objects. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.BackgroundProperty">
      <summary>
            Identifies the Background dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.BeforeRendering">
      <summary>
            Occurs just before the chart is going to get rendered. This is the place where you can create custom graphics objects etc.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.BeginUpdate">
      <summary>
            Begin update. Disables control repaints when a property is changed. 
            Handy when updating status of many properties or updating series points. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CalculatePixelAlignmentOffset(System.Boolean)">
      <summary>
            Alignment offset in pixels (Not in DIP).
            </summary>
      <param name="ReparseParent">If true, forces redetermination of the parent (takes time). It's hard to know when the parent chain has changed.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.CalculatePixelAlignmentOffset(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.Captured">
      <summary>
            Occurs right after the chart has been captured. E.g. CopyToClipBoard or SaveToFile, when there is possibility that rendering may be delayed due e.g. image reading from web.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CaptureToBitmap(Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Get chart as bitmap.
            </summary>
      <param name="aaOptions">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aaOptions</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.CaptureToBitmap(Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.CaptureToBitmap(Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CaptureToByteArray(System.Int32@,System.Int32@,Arction.Wpf.ChartingMVVM.PixelFormat@)">
      <summary>
            Get the last frame rendered by the chart as byte array containing just pixel data four bytes per pixel. 
            <para>To get the image data with headers, like in bpm or png format, use SaveToStream method</para></summary>
      <param name="width">Chart width in pixels</param>
      <param name="height">Chart height in pixels</param>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.CaptureToByteArray(System.Int32@,System.Int32@,Arction.Wpf.ChartingMVVM.PixelFormat@)</parameter>
          </include>
        </markup>
      </param>
      <returns>chart's last rendered raw image as byte array. Each pixel is represented by 4 bytes in the order defined by the format parameter.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ChartBackground">
      <summary>
            Gets or sets background fill. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ChartBackgroundProperty">
      <summary>
            Identifies the ChartBackground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ChartManager">
      <summary>
            Gets or sets chart manager. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ChartManagerProperty">
      <summary>
            Identifies the ChartManager dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.ChartMessage">
      <summary>
            Event that notifies if some error has occurred that does not require exception to be thrown, or some other event has happened worth notifying 
            using system of. 
            <para>See ChartMessageInfo struct contained in the message for detailed information.</para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ChartName">
      <summary>
            Gets or sets name of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ChartNameProperty">
      <summary>
            Identifies the ChartName dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ChartRenderOptions">
      <summary>
            Gets or sets rendering options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ChartRenderOptionsProperty">
      <summary>
            Identifies the ChartRenderOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ColorTheme">
      <summary>
            Gets or sets the color theme of this chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ColorThemeProperty">
      <summary>
            Identifies the ColorTheme dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard">
      <summary>
            Copy the chart to clipboard bitmap image.
            </summary>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard(Arction.Wpf.ChartingMVVM.ClipboardImageFormat)">
      <summary>
            Copy the chart to clipboard image by given format.
            </summary>
      <param name="imageFormat">Clipboard image format.</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard(Arction.Wpf.ChartingMVVM.ClipboardImageFormat,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Copy the chart to clipboard image.
            </summary>
      <param name="format">Clipboard image format.</param>
      <param name="antialiasOptions">Antialias options.</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard(Arction.Wpf.ChartingMVVM.ClipboardImageFormat,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Copy the chart to clipboard image.
            </summary>
      <param name="format">Clipboard image format.</param>
      <param name="antialiasOptions">Antialias options.</param>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard(Arction.Wpf.ChartingMVVM.ClipboardImageFormat,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Copy the chart to clipboard image by given format.
            </summary>
      <param name="imageFormat">Clipboard image format.</param>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboard(System.Int32,System.Int32)">
      <summary>
            Copy the chart to clipboard bitmap image.
            </summary>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.CopyToClipboardAsEmf">
      <summary>
            Copy chart to clipboard as emf.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.CustomDynamicTheme">
      <summary>
            Sets or gets the Custom Dynamic Theme.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.Dispose">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.EffectAnimator">
      <summary>
            Gets or sets effect animation controller. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.EffectAnimatorProperty">
      <summary>
            Identifies the EffectAnimator dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.EndUpdate">
      <summary>
            End update. Enables control repainting, and refreshes the control.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.EngineInitResultsToString(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.EngineInitResult})">
      <summary>
            Used to convert GetLastEngineInitResults to string to help reporting of it's contents.
            </summary>
      <param name="results">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>results</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.EngineInitResultsToString(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.EngineInitResult})</parameter>
          </include>
        </markup>
      </param>
      <returns>EngineInitResults as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.FrameCount">
      <summary>
             Count of rendered frames with the current engine. 
            </summary>
      <returns>
            Number of so far rendered frames with the currently active rendering 
            engine. 
            0 if no engine is active.
            </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.FullRepaint">
      <summary>
            Destroy all buffered draw data and repaint the chart
            This is slower than Refresh(), but thorough.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetActiveUserInteractiveDeviceOverObject">
      <summary>
            Get the chart object that is activated by mouse. 
            Note that this information is not correct if we do not have proper device set. 
            </summary>
      <returns>Last active object. If unavailable, returns null</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetBeginUpdateCount">
      <summary>
            Get effectively used BeginUpdate/EndUpdate counter. Use for debugging, if seems that chart does not render.
            <para>The value must be 0 in order for the chart to render. If value is larger, some BeginUpdate call has not been closed by matching EndUpdate call.</para><para>This indicates total value. Use GetBeginUpdateCountPublic to see difference of public - user called - BeginUpdate / EndUpdate methods.</para></summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetBeginUpdateCount</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetBeginUpdateCountPublic">
      <summary>
            Get public BeginUpdate/EndUpdate counter. Use for debugging, if seems that chart does not render.
            Must be zero after EndUpdate(), if one wants chart to render.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetBeginUpdateCountPublic</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetLastEngineInitResults">
      <summary>
             returns a list of EngineInitResult objects of which each defines a tried engine, if its initialization was successful or not and the 
             reasons why its initialization failed. 
             
            <para>This method is intended for debugging purposes. </para><para>
             The information applies to the last time the engine was tried to be initialized. 
             The list is recreated each time engine initialization is tried and the old information is lost. 
            </para></summary>
      <returns>List describing lastly tried engines and result of the initialization</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetLastOutputStreamFormat">
      <summary>
            Getter of the pixel format of the last written data to the OutputStream. 
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetLastOutputStreamFormat</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetLastOutputStreamSize">
      <summary>
             Getter of the image size of the last image written to OutputStream as pixels (not DIP's). 
            </summary>
      <returns>Size of the last image written to OutputStream.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetParentWindow">
      <summary>
            Get parent window handle (HWND).
            Needed when using the control from other systems than .NET. 
            </summary>
      <returns>Parent window handle.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetRenderDeviceInfo">
      <summary>
            Get render device information. Gives information about your graphics adapter. 
            Tells if there is something that prevents the control to run at optimal performance.
            </summary>
      <returns>Information about your graphics adapter.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeAuroras">
      <summary>
            Get Predefined theme Auroras
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeAuroras</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeBrushedMetal">
      <summary>
            Get Predefined theme Brushed metal
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeBrushedMetal</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeMagma">
      <summary>
            Get predefined theme magma.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeMagma</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemePaper">
      <summary>
            Get Predefined theme Paper
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemePaper</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeRedCarbon">
      <summary>
            Get Predefined theme Red carbon
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeRedCarbon</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeTurquoiseHexagon">
      <summary>
            Get predefined theme TurgouiseHexagon.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeTurquoiseHexagon</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeWorldCyberSpace">
      <summary>
            Get Predefined theme Wolrd cyber space
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.GetThemeWorldCyberSpace</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetTotalChartCount">
      <summary>
            Gets total count of chart instances in application context. 
            </summary>
      <returns>Total chart count</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.GetVersion(System.String@,System.String@)">
      <summary>
            Version and revision.
            </summary>
      <param name="version">Gets the major and minor numbers of the assembly.</param>
      <param name="revision">Arction internal revision number of the library. Notation of this value can change.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.GpuUpdateType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.LightningChart.GpuUpdateType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Handle">
      <summary>
            Handle for WPF control.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.HighqualityFontConflictCheck">
      <summary>
            Checks if high quality font and transparency background is used with DX11
            and gives warning of this conflict combination.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.HorizontalScrollBars">
      <summary>
            Gets or sets scroll bars list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.HorizontalScrollBarsProperty">
      <summary>
            Identifies the HorizontalScrollBars dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.InitializeRenderingDevice(System.Boolean)">
      <summary>
             Tries to force the engine initialization in a synchronous fashion. Should have 
             no use in WinForms. 
            
             This method allows user to force the rendering device initialization. 
              
             Note! Do not force during chart events callbacks, except at AfterRendering event! Causes chart to malfunction, if engine is changed during event handler.
             </summary>
      <param name="force">Forces engine reinitialization, even if there should be no reason for it. </param>
      <returns>true if the call resulted in valid engine that is different from the previous one. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.Invert(System.Windows.Media.Color)">
      <summary>
            Opposite color
            </summary>
      <param name="color">Color to convert.</param>
      <returns>The opposite color.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.IsHardwareRenderingSupported">
      <summary>
            Check if hardware rendering is supported.
            </summary>
      <returns>True if supports hardware rendering.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.IsHardwareRenderingSupported(System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.DeviceTypeFlags@)">
      <summary>
            Check if hardware rendering is supported.
            </summary>
      <param name="isHardwareAvailableByAdapterInfo">Hardware available by querying adapters in the system</param>
      <param name="isHardwareEnabledByRegistryFlag">Hardware may have been disable by HKEY_CURRENT_USER\\Software\\Microsoft\\Avalon.Graphics\\DisableHWAcceleration flag. Outputs false if so.</param>
      <param name="isSufficientLevelHardwareAvailableByTierTest">RenderCapability.Tier level test passes</param>
      <returns>True if all is enabled, and thus supports hardware rendering</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.IsPixelAlignmentOK">
      <summary>
            Check pixel alignment. 
            This is quite costly operation. It's faster just to update the value. 
            </summary>
      <returns>True if the pixel alignment would not be changed if UpdatePixelAlignment would be called.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.IsPositionOver(System.Int32,System.Int32)">
      <summary>
            Finds out if the given coordinate is over the chart control with pixels.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <returns>True if is over</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.IsUsingHardwareRendering">
      <summary>
            Check if chart is using hardware rendering.
            </summary>
      <returns>True, if hardware rendering is used, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.MeasureText(System.String,Arction.Wpf.ChartingMVVM.WpfFont)">
      <summary>
            Measure text with given font in DIP units (with rounding).
            </summary>
      <param name="text">Text.</param>
      <param name="font">Font.</param>
      <returns>Dimensions in a point structure [in DIP units]. If unable to measure, returns (0,0).</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.MeasureTextPX(System.String,Arction.Wpf.ChartingMVVM.WpfFont)">
      <summary>
            Measure text with given font in PX units (without rounding).
            </summary>
      <param name="text">Text.</param>
      <param name="font">Font.</param>
      <returns>Dimensions in a point structure [in PX units]. If unable to measure, returns (0,0).</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.MouseClick">
      <summary>
            Occurs when mouse released.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.MouseDown">
      <summary>
            Occurs when any mouse button is pressed while the pointer is over this element.
            Overrided the UIElements MouseDown as we mark it handled as per Microsoft guidelines.
            This can be used instead to receive the information, or PreviewMouseDown event should be used instead. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.MouseDownEvent">
      <summary>
            Occurs when any mouse button is pressed while the pointer is over this element.
            Overrided the UIElements MouseDown as we mark it handled as per Microsoft guidelines.
            This can be used instead to receive the information, or PreviewMouseDown event should be used instead. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.MouseUp">
      <summary>
            Occurs when any mouse button is released while the pointer is over this element.
            Overrided the UIElements MouseUp as we mark it handled  as per Microsoft guidelines.
            This can be used instead to receive the information, or PreviewMouseUp event should be used instead. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.MouseUpEvent">
      <summary>
            Occurs when any mouse button is released while the pointer is over this element.
            Overrided the UIElements MouseUp as we mark it handled as per Microsoft guidelines.
            This can be used instead to receive the information, or PreviewMouseUp event should be used instead. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.OnDPIChanged">
      <summary>
            Event for DPI change.
            <para>Subscribe to this event to receive information of changes on 
            the DPI and to enable automatic LightningChart resizing / repositioning 
            application window on DPI changes. See <see cref="T:Arction.Wpf.ChartingMVVM.LightningChart.DPIChangedHandler" /> for more information. </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Options">
      <summary>
            Generic chart options.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.OptionsProperty">
      <summary>
            Identifies the Options dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.OutputStream">
      <summary>
            Stream to write the rendered frame bitmaps to. 
            <para>Defaults to null. Set the stream to this property and it will be 
            written with ran data of the images on every frame. See remarks for the format.</para><para>This property is intended as the fastest way to capture continuous frames from the chart, especially on 
            Headless mode.</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.OutputStreamProperty">
      <summary>
            Identifies the OutputStream dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.PixelAlignmentOffset">
      <summary>
             Getter of the currently used pixel alignment offset. 
             Call UpdatePixelAlignment to update / recalculate this value. 
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.PixelAlignmentOffset</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.Print">
      <summary>
            Print chart to default printer with default settings using raster output. No header nor footer.
            <seealso cref="M:Arction.Wpf.ChartingMVVM.LightningChart.Print(Arction.Wpf.ChartingMVVM.ImageType,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Windows.Thickness)" /></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.Print(Arction.Wpf.ChartingMVVM.ImageType,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Windows.Thickness)">
      <summary>
            Print chart to default printer with given settings.
            </summary>
      <param name="type">Image type: Raster or vector. Default is Raster.</param>
      <param name="backgroundFill">Enable background fill. Default is false.</param>
      <param name="graphFill">Enable graph fill. Default is false.</param>
      <param name="doubleRasterResolution">Enable double raster resolution. Default is false.</param>
      <param name="header">Header text.</param>
      <param name="footer">Footer text.</param>
      <param name="keepAspectRatio">Keep aspect ratio. Default is true.</param>
      <param name="margins">Margins.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.PrintPreview">
      <summary>
            Print preview of chart.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.PrintPreview(System.String,System.String,System.Boolean)">
      <summary>
            Print preview of chart.
            </summary>
      <param name="header">Header text.</param>
      <param name="footer">Footer text.</param>
      <param name="autoCloseAfterPrint">Close preview window after printed.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.PrintWithPageSetup(System.Boolean,System.Boolean)">
      <summary>
            Show page setup dialog and print if ok clicked and allowed.
            </summary>
      <param name="reset">Reset page setup to default values.</param>
      <param name="print">Print if pressed ok on dialog.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.PrintWithPrinterSelection">
      <summary>
            Show printer selection dialog and print if allowed.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.RenderingEngineChanged">
      <summary>
            RendererDevice has changed.
            <para>This event is called almost every time the engine changes. Please see remarks for the exceptions</para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.ResetBeginUpdateCount">
      <summary>
            Reset BeginUpdate/EndUpdate counter. Usually not required to call.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.ResetPageSettings">
      <summary>
            Reset page settings.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.RTK(System.String)">
      <summary>
            Read Trader Key
            </summary>
      <param name="sProvider">What Provider wanted to be use.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.RTK(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToFile(System.String)">
      <summary>
            Save the chart into a image file with no extra anti-aliasing applied. 
            </summary>
      <param name="fileName">Target file name. You must include file extension (png, bmp, jpg, tif, gif, emf, svg).</param>
      <returns>True if the image was successfully written to file. 
            Returns false on invalid file extension or on file write failure.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToFile(System.String,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Save the chart into a image file by using given anti-aliasing options. 
            </summary>
      <param name="fileName">Target file name. You must include file extension (png, bmp, jpg, tif, gif, wmf, emf, svg).</param>
      <param name="antialiasOptions">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>antialiasOptions</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToFile(System.String,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if the image was successfully written to file. 
            <param name="antialiasOptions">Anti-aliasing options</param>
            Returns false on invalid file extension, on file write failure and on other problems on image creation or saving.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToFile(System.String,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Save the chart into a image file by using given anti-aliasing options. 
            </summary>
      <param name="fileName">Target file name. You must include file extension (png, bmp, jpg, tif, gif, wmf, emf, svg).</param>
      <param name="antialiasOptions">Anti-aliasing options</param>
      <param name="width">Width of required output in pixels</param>
      <param name="height">Height of required output in pixels</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>True if the image was successfully written to file. 
            Returns false on invalid file extension, on file write failure and on other problems on image creation or saving. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToFile(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Save to file as given size.
            </summary>
      <param name="fileName">Target file name. You must include file extension (png, bmp, jpg, tif, gif, emf, svg).</param>
      <param name="width">Width of required output in pixels (Not in DIPs)</param>
      <param name="height">Height of required output in pixels (Not in DIPs)</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>True if the image was successfully written to file. 
            Returns false on invalid file extension or on file write failure.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream)">
      <summary>
            Save the chart into stream in bitmap format.
            </summary>
      <param name="stream">Stream to write to.</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream,Arction.Wpf.ChartingMVVM.TargetImageFormat)">
      <summary>
            Save the chart into stream in given format and anti-aliasing options.
            </summary>
      <param name="stream">Stream to write to.</param>
      <param name="format">Image format.</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream,Arction.Wpf.ChartingMVVM.TargetImageFormat,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Save the chart into stream in given format and anti-aliasing options.
            <para>Note that the stream's position is at the end. In order to read it to some other variable, 
            rewind it first using seek. 
            </para></summary>
      <param name="stream">Stream to write to.</param>
      <param name="format">Image format.</param>
      <param name="antialiasOptions">Anti-alias options.</param>
      <returns>True if succeeded, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream,Arction.Wpf.ChartingMVVM.TargetImageFormat,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Save the chart into stream in given format and anti-aliasing options.
            </summary>
      <param name="stream">Stream to write to.</param>
      <param name="format">Image format.</param>
      <param name="antialiasOptions">Antialias options.</param>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream,Arction.Wpf.ChartingMVVM.TargetImageFormat,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Save the chart into stream in given format and anti-aliasing options.
            </summary>
      <param name="stream">Stream to write to.</param>
      <param name="format">Image format.</param>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <param name="AllowScreenCoordinateChanges">
            Allows screen coordinates of certain elements to be 
            scaled by factor of defined size and original size to keep then in place in relation to other 
            chart elements in vector exports.
            If unsure, use value true. Should be set to false if annotation tables or such constructs are used. 
            Affects only vector output (emf and svg). 
            </param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SaveToStream(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Save the chart into stream in given size.
            </summary>
      <param name="stream">Stream to write to.</param>
      <param name="width">Width of required output</param>
      <param name="height">Height of required output</param>
      <returns>true if succeeded, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SetDeploymentKey(System.String)">
      <summary>
            Set Deployment Key 
            </summary>
      <param name="deploymentKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deploymentKey</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.SetDeploymentKey(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.SetParentWindow(System.IntPtr)">
      <summary>
            Set parent window handle (HWND). 
            Needed when using the control from other systems than .NET. 
            <param name="hwnd">Parent window handle.</param></summary>
      <param name="hwnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hwnd</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.SetParentWindow(System.IntPtr)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</parameter>
          </include>
        </markup>
      </summary>
      <param name="managerType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>managerType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LightningChart.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Title">
      <summary>
            Gets or sets title of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>string</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.LightningChart.TotalChartCountChanged">
      <summary>
            Occurs when the total chart instance count has changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.TweakDisablePresent">
      <summary>
            Disable DirectX present calls, but let the rendering routines run otherwise  
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.TweakEnablePresent">
      <summary>
            Enable DirectX present calls again
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.UpdateCustomTheme">
      <summary>
            Update custom themes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.UpdatePixelAlignment">
      <summary>
             Forces update of WPF pixel alignment.  
             Calling this should not be required normally.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Version">
      <summary>
            Version info.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.VerticalScrollBars">
      <summary>
            Gets or sets scroll bars list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.VerticalScrollBarsProperty">
      <summary>
            Identifies the VerticalScrollBars dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.View3D">
      <summary>
            Gets or sets 3D chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.View3DProperty">
      <summary>
            Identifies the View3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ViewPie3D">
      <summary>
            Gets or sets 3D pie chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ViewPie3DProperty">
      <summary>
            Identifies the ViewPie3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ViewPolar">
      <summary>
            Gets or sets polar chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ViewPolarProperty">
      <summary>
            Identifies the ViewPolar dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ViewSmith">
      <summary>
            Gets or sets polar chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ViewSmithProperty">
      <summary>
            Identifies the ViewPolar dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ViewXY">
      <summary>
            Gets or sets XY graph view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.ViewXYProperty">
      <summary>
            Identifies the ViewXY dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.AfterRenderingEventHandler">
      <summary>
            The delegate to use for handlers that receive the AfterRendering event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the AfterRendering event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.AlfErrorLevel">
      <summary>
            Alf Error Level
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.BeforeRenderingEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforeRendering event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the BeforeRendering event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.CaptureEventHandler">
      <summary>
            The delegate to use for handlers that receive the Capture event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the Capture event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.ChartMessageHandler">
      <summary>
            Delegate for ChartMessage event.
            </summary>
      <param name="info"></param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.DPIChangedHandler">
      <summary>
            Delegate for <see cref="E:Arction.Wpf.ChartingMVVM.LightningChart.OnDPIChanged" /> event.
            </summary>
      <param name="chart">Chart where the DPI change occurred.</param>
      <param name="dpix">New DPI X-value.</param>
      <param name="dpiy">New DPI Y-value.</param>
      <param name="allowWindowResize">Allow window to be resized after event handler is called.
            <para>You should set this to true, if you choose not to react the WM_DPICHANGED 
            event on application side. If set to true, LightningChart will 
            mark the event as handled, and touch window size / position.</para><para>The default value is false. </para></param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.RECT">
      <summary>
            Rectangle structure.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.RECT.bottom">
      <summary>
            Bottom
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.RECT.left">
      <summary>
            Left
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.RECT.right">
      <summary>
            Right
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightningChart.RECT.top">
      <summary>
            Top
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.RenderingEngineChangedHandler">
      <summary>
            Delegate for RenderEngineChanged event.
            </summary>
      <param name="rendererDevice">Renderer device type.</param>
      <param name="info">Render device info.</param>
      <param name="chart">Chart where the device was changed.</param>
      <param name="timeStamp">Time stamp.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics">
      <summary>
            Dynamic lighningchart basic theme
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.#ctor">
      <summary>
            Theme base class. all variables has some pre defined value
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AlphaLevel">
      <summary>
            Alpha level 0-255
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AnnotationBorderColor">
      <summary>
            Annotation border color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AnnotationTextColor">
      <summary>
            Annotation text color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AxisColor">
      <summary>
            Axis color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AxisLabelColor">
      <summary>
            Axis label color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.AxisTitleColor">
      <summary>
            Axis title color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.BackgroundColor">
      <summary>
            Background color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.BackgroundGradientColor">
      <summary>
            Background gradient color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.BorderColor">
      <summary>
            What color to gradient
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ChartTitleColor">
      <summary>
            Chart title color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ColorSaturation">
      <summary>
            HSVA color saturation
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ColorStrength">
      <summary>
            HSVA color strength
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ColorToGradient">
      <summary>
            Color where to gradient is shaded
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.CustomDynamicBackgroundImage">
      <summary>
            Custom dynamic image of dynamic theme background
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.CustomPalette">
      <summary>
            Custom palette color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.customPaletteSteps">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.customPaletteSteps</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.darkLightBlendColor">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.darkLightBlendColor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.DataCursorResultTableTextColor">
      <summary>
            DataCursor ResultTable text color.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.Dispose">
      <summary>
            Dispose unmanaged objects
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.DynamicBackgroundFillStyle">
      <summary>
            Background image fill style
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.DynamicBackgroundImage">
      <summary>
            Enum for dynamic background image for resources
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.DynamicBackgroundLayout">
      <summary>
            Enum for Dynamic background layout
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ForceLabelsWhite">
      <summary>
            Force labels to White
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.GradientStrength">
      <summary>
            Gradient strength
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.GraphBackgroundColor">
      <summary>
            Graph background color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.GraphBackgroundGradientColor">
      <summary>
            Graph background gradient color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.GridColor">
      <summary>
            Grid and Ticks color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.LegendFillColor">
      <summary>
            Legend Fill color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.LegendFillGradientColor">
      <summary>
            Legend fill gradient color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.LegendTextColor">
      <summary>
            Legend text color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.MarkerSingleColor">
      <summary>
            Marker single color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.masterColor">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.masterColor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.MasterHueDeg">
      <summary>
            Starting HSVA degree
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.MultiColorAxis">
      <summary>
            Axis multi color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.MultiColorSeries">
      <summary>
            Series in multicolor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ScrollBarBackgroundFillColor">
      <summary>
            Scrollbar background Fill color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ScrollBarFrontFillColor">
      <summary>
            Scrollbar front fill color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.SectorSingleColor">
      <summary>
            Sectors single color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.SliceHueStep">
      <summary>
            Step value for next color of HSVA table (masterhuedeg + stepvalue*n)
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.View3DWallsColoring">
      <summary>
            View3D walls coloring
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.ThemeBasics.ZoomRectcolor">
      <summary>
            Dark light blend color
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.TotalChartCountChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the TotalChartCountChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the TotalChartCountChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors">
      <summary>
            3D wallcolors
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.#ctor">
      <summary>
            3D wall colors
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.Ambient">
      <summary>
            Ambient color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.Diffuse">
      <summary>
            Diffuse color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.Emissive">
      <summary>
            Emissive color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.GridStrip1">
      <summary>
            Grid strip 1 color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.GridStrip2">
      <summary>
            Grid strip 2 color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.Specular">
      <summary>
            Specular color
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LightningChart.Wall3DColors.SpecularPower">
      <summary>
            Specular power color
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LightType">
      <summary>
            Light types.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightType.Directional">
      <summary>
            Directional with parallel light beams.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LightType.PointOfLight">
      <summary>
            Point of light, like sun.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LimitYToSegment">
      <summary>
            Limiting style for series rendering on y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LimitYToSegment.None">
      <summary>
            No limit, data will not be limited to y-axis range, if it happens to exceed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LimitYToSegment.Clip">
      <summary>
            Clip to y-axis range. E.g. line will be clipped, if over axis range.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LimitYToSegment.ClampToSegment">
      <summary>
            Clamp data to axis range. E.g. line will be rendered horizontally on y-axis edge, if it exceed.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineAntialias">
      <summary>
            Line anti-aliasing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineAntialias.None">
      <summary>
            No anti-aliasing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineAntialias.Normal">
      <summary>
            Normal, suitable for most cases. The smoothing quality is determined by chart's AntiAliasLevel.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineAntiAliasingType">
      <summary>
            Line anti-aliasing type. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineAntiAliasingType.QLAA">
      <summary>
             Quadrilateral Anti-Aliasing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineAntiAliasingType.ALAA">
      <summary>
             Alpha Blending Line Anti-Aliasing.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineOptimization">
      <summary>
            Line rendering optimization for 3D lines.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineOptimization.Hairline">
      <summary>
            Line rendering with one pixel wide line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineOptimization.Normal">
      <summary>
            Line rendering as flat with specified width (by world coordinates).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineOptimization.NormalWithShading">
      <summary>
            Line as shaded with specified width.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LinePattern">
      <summary>
            Line patterns.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LinePattern.Solid">
      <summary>
            Solid line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LinePattern.Dot">
      <summary>
            Dot line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LinePattern.Dash">
      <summary>
            Dash line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LinePattern.DashDot">
      <summary>
            Dash-dot line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LinePattern.SmallDot">
      <summary>
            Small dot line.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult">
      <summary>
            Line series coordinate solver result.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.CoordBottom">
      <summary>
            Bottom Y-coordinate at cursor position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.CoordTop">
      <summary>
            Top Y-coordinate at cursor position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.MinIndex">
      <summary>
            Minimum data point index.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.NearestX">
      <summary>
            Nearest X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.PointCount">
      <summary>
            Data point count for column.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.SolveStatus">
      <summary>
            Solve status. Use values only if SolveStatus is OK.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineSeriesSolveStatus">
      <summary>
            Line series value solver status.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesSolveStatus.OK">
      <summary>
            Point found. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesSolveStatus.NoPointsFound">
      <summary>
            Matching point not found. Empty series? 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineSeriesStat">
      <summary>
            Line series statistics.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.PointCount">
      <summary>
            Point count.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineSeriesStat.Reset">
      <summary>
            Reset parameters.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.StatDataValid">
      <summary>
            Is structure data valid or not.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineSeriesStat.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.VisiblePointCount">
      <summary>
            Visible point count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.VisibleXMax">
      <summary>
            Maximum visible X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.VisibleXMin">
      <summary>
            Minimum visible X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.VisibleYMax">
      <summary>
            Maximum visible Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.VisibleYMin">
      <summary>
            Minimum visible Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.XMax">
      <summary>
            Maximum X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesStat.XMin">
      <summary>
            Minimum X value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult">
      <summary>
            LineSeries value solve result.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.NearestDataPointIndex">
      <summary>
            Nearest data point index of the searched X value. Note that e.g. in real-time examples this is only valid when there is no data added to series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.NearestX">
      <summary>
            Nearest X value of the searched X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.SolveStatus">
      <summary>
            Solve status. Use result values only if SolveStatus is OK.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.YMax">
      <summary>
            Max Y value on the searched X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult.YMin">
      <summary>
            Min Y value on the searched X value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineStyle">
      <summary>
            Line drawing parameters
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle.AntiAliasing">
      <summary>
            Gets and sets anti-aliased line. This is a dependency property.
            Drawing anti-aliased draws the line with smooth edges, but will increase CPU/GPU overhead.
            In order to have an effect, <see cref="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.AntiAliasLevel" /> must be set to a value higher than 1.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle.AntiAliasingProperty">
      <summary>
            Identifies the Antialiasing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle.Color">
      <summary>
            Gets and sets line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(Arction.Wpf.ChartingMVVM.LineStyle)">
      <summary>
            Comparison method to check if given instance refers to this.
            </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(Arction.Wpf.ChartingMVVM.LineStyle)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(Arction.Wpf.ChartingMVVM.LineStyle)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(System.Object)">
      <summary>
            Comparison method to check if given instance refers to this.
            </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle.CompareTo(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle.Pattern">
      <summary>
            Gets and sets pattern of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle.PatternProperty">
      <summary>
            Identifies the Pattern dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle.PatternScale">
      <summary>
            Gets and sets pattern scale. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle.PatternScaleProperty">
      <summary>
            Identifies the Pattern Scale dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle.Width">
      <summary>
            Gets and sets width of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineStyle3D">
      <summary>
            Line drawing parameters
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.AntiAliasing">
      <summary>
            Gets and sets anti-aliased line. This is a dependency property.
            Drawing anti-aliased draws the line with smooth edges, but will increase CPU/GPU overhead.
            <para>
            Note that line width is defined in 3D world coordinates, not in pixels as with 2D line.
            With DX11, thicker (triangle) lines cannot be rendered without 
            anti-aliasing unless <see cref="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.AntiAliasLevel" /> is set to a value lower than 1.
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.AntiAliasingProperty">
      <summary>
            Identifies the Antialiasing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.Color">
      <summary>
            Gets and sets line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.LineOptimization">
      <summary>
            Gets and sets line rendering optimization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.LineOptimizationProperty">
      <summary>
            Identifies the line rendering optimization dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.op_Implicit(Arction.Wpf.ChartingMVVM.LineStyle3D)~Arction.Wpf.ChartingMVVM.LineStyle">
      <summary>
            3D LineStyle as ordinary LineStyle.
            </summary>
      <param name="s">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle3D.op_Implicit(Arction.Wpf.ChartingMVVM.LineStyle3D)~Arction.Wpf.ChartingMVVM.LineStyle</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.LineStyle3D.op_Implicit(Arction.Wpf.ChartingMVVM.LineStyle3D)~Arction.Wpf.ChartingMVVM.LineStyle</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.Pattern">
      <summary>
            Gets and sets pattern of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.PatternProperty">
      <summary>
            Identifies the Pattern dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.PatternScale">
      <summary>
            Gets and sets pattern scale. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.PatternScaleProperty">
      <summary>
            Identifies the Pattern Scale dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3D.Width">
      <summary>
            Gets and sets width of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3D.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox">
      <summary>
            Line drawing parameters
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.AntiAliasing">
      <summary>
            Gets and sets anti-aliased line. This is a dependency property.
            Drawing anti-aliased draws the line with smooth edges, but will increase CPU/GPU overhead.
            <para>
            Note that line width is defined in 3D world coordinates, not in pixels as with 2D line.
            With DX11 thicker (triangle) lines cannot be rendered without 
            anti-aliasing unless <see cref="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.AntiAliasLevel" /> is set to a value lower than 1.
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.AntiAliasingProperty">
      <summary>
            Identifies the Antialiasing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.Color">
      <summary>
            Gets and sets line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.Pattern">
      <summary>
            Gets and sets pattern of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.PatternProperty">
      <summary>
            Identifies the Pattern dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.PatternScale">
      <summary>
            Gets and sets pattern scale. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.PatternScaleProperty">
      <summary>
            Identifies the Pattern Scale dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.LineStyle3DZoomBox.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LogLabelsType">
      <summary>
            Logarithmic axis labels type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LogLabelsType.Regular">
      <summary>
            No special formatting. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LogLabelsType.Log10Exponential">
      <summary>
            When LogBase is 10, shows the labels like 1.0E-3, 1.0E-2 1.0E-1, 1.0E0, 1.0E1, 1.0E2 etc. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LogLabelsType.LogE_MultiplesOfNeper">
      <summary>
            When LogBase is Math.E (neper), shows the labels like 1e, 2e, 3e...
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.LongitudePostfix">
      <summary>
            Longitude degrees, arc minutes, arc seconds representation coordinate postfix. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LongitudePostfix.E">
      <summary>
            East.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.LongitudePostfix.W">
      <summary>
            West.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MapCoordinate">
      <summary>
            Map geo coordinate.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MapCoordinate.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="latitude">Latitude, as decimal degrees.</param>
      <param name="longitude">Longitude, as decimal degrees.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MapCoordinate.#ctor(System.UInt32,System.UInt32,System.Double,Arction.Wpf.ChartingMVVM.LatitudePostfix,System.UInt32,System.UInt32,System.Double,Arction.Wpf.ChartingMVVM.LongitudePostfix)">
      <summary>
            Constructor.
            </summary>
      <param name="latitudeDeg">Latitude, degrees.</param>
      <param name="latitudeMin">Latitude, arc minutes.</param>
      <param name="latitudeSec">Latitude, arc seconds, with decimals.</param>
      <param name="latitudePostfix">Heading letter, N or S.</param>
      <param name="longitudeDeg">Longitude, degrees.</param>
      <param name="longitudeMin">Longitude, arc minutes.</param>
      <param name="longitudeSec">Longitude, arc seconds, with decimals.</param>
      <param name="longitudePostfix">Heading letter, E or W.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MapCoordinate.Latitude">
      <summary>
            Latitude, in decimal degrees, with sign.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MapCoordinate.Longitude">
      <summary>
            Longitude, in decimal degrees, with sign.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MapCoordinate.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MathRoutines">
      <summary>
            Chart tools provides versatile static methods
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.MathRoutines</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleDegInFirstFullCircle(System.Double)">
      <summary>
             Retrieve the input angle value as positive angle of the first full rotation in degrees. 
             <para>Note that the range contains 0, but not the "full angle" of 360 degrees.</para></summary>
      <param name="value">Angle to find the equivalent angle in degrees.</param>
      <returns>Angle matching the input in first full positive round as degrees.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleDiffDeg(System.Double,System.Double)">
      <summary>
             Solve smallest absolute difference between two angles in degrees. 
             This takes in account the periodic nature of the values, meaning that full circles do not affect the difference.
             <para>Useful in comparing the difference of angles, e.g. on testing if angles are the same. </para><para>Note that the type of angle unit affects the result. Use <see cref="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleDiffRad(System.Double,System.Double)" /> for radians.</para></summary>
      <param name="angleDeg1">One of the angles to calculate the difference between in degrees. Order of parameter does not matter.</param>
      <param name="angleDeg2">One of the angles to calculate the difference between in degrees. Order of parameter does not matter.</param>
      <returns>Difference of provided angles in degrees. Always positive.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleDiffRad(System.Double,System.Double)">
      <summary>
             Solve smallest absolute difference between two angles in radians. 
             This takes in account the periodic nature of the values, meaning that full circles do not affect the difference.
             <para>Useful in comparing the difference of angles, e.g. on testing if angles are the same. </para><para>Note that the type of angle unit affects the result. Use <see cref="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleDiffDeg(System.Double,System.Double)" /> for degrees and examples.</para></summary>
      <param name="angleRad1">One of the angles to calculate the difference between in radians. Order of parameter does not matter.</param>
      <param name="angleRad2">One of the angles to calculate the difference between in radians. Order of parameter does not matter.</param>
      <returns>Difference of provided angles in radians. Always positive. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.AngleRadInFirstFullCircle(System.Double)">
      <summary>
             Retrieve the input angle value as positive angle of the first full rotation in radians.
             <para>Note that the range contains 0, but not the "full angle" of PI radians.</para></summary>
      <param name="value">Angle to find the equivalent angle in radians.</param>
      <returns>Angle matching the input in first full positive round as radians.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.CalcAngleOfLineVectorDouble(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculates angle of line going from pointFrom to pointTo
            </summary>
      <param name="pointFrom">From point</param>
      <param name="pointTo">To point</param>
      <returns>RotateAngle in radians, in range 0...2*Pi</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.CalcAngleOfLineVectorFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Calculates angle of line going from pointFrom to pointTo
            </summary>
      <param name="x1">Point 1 X</param>
      <param name="x2">Point 2 X</param>
      <param name="y1">Point 1 Y</param>
      <param name="y2">Point 2 Y</param>
      <returns>RotateAngle in radians, in range 0...2*Pi</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.CalcTwoCirclesIntersections(Arction.RenderingDefinitions.PointFloat,System.Single,Arction.RenderingDefinitions.PointFloat,System.Single,Arction.RenderingDefinitions.PointFloat@,Arction.RenderingDefinitions.PointFloat@)">
      <summary>
            Calculates intersection point(-s) of two circles.
            </summary>
      <param name="center0">Center of the first circle.</param>
      <param name="radius0">Radius of the first circle.</param>
      <param name="center1">Center of the second circle.</param>
      <param name="radius1">Radius of the second circle.</param>
      <param name="intersection1">Intersection point output.</param>
      <param name="intersection2">Intersection point output.</param>
      <returns>Success status returns 1 or 2. Returns 0 if could not solve the intersection.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.CalcTwoLinesIntersection(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D@)">
      <summary>
            Calculates intersection point of two lines. Line 1: goes through A1 and A2
            Line 2: goes through B1 and B2
            </summary>
      <param name="a1">Line A point 1</param>
      <param name="a2">Line A point 2</param>
      <param name="b1">Line B point 1</param>
      <param name="b2">Line B point 2</param>
      <param name="intersection">intersection point output</param>
      <returns>Success status. Returns false if could not solve the intersection</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.CalcTwoLinesIntersection(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat@)">
      <summary>
            Calculates intersection point of two lines. Line 1: goes through A1 and A2
            Line 2: goes through B1 and B2
            </summary>
      <param name="a1">Line A point 1</param>
      <param name="a2">Line A point 2</param>
      <param name="b1">Line B point 1</param>
      <param name="b2">Line B point 2</param>
      <param name="intersection">intersection point output</param>
      <returns>Success status. Returns false if could not solve the intersection</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.DegreesAsRadians(System.Double)">
      <summary>
            Convert degrees to radians.
            </summary>
      <param name="value">Degrees value.</param>
      <returns>Radians value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.DistanceOfPoints(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculates distance between two points.
            </summary>
      <param name="point1">Point 1.</param>
      <param name="point2">Point 2.</param>
      <returns>Distance between two points.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.Gaussian(System.Double,System.Double,System.Double)">
      <summary>
             Gaussian function
            </summary>
      <param name="input">argument of function</param>
      <param name="mean">mean</param>
      <param name="std">standard division</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Gaussian(System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.GradsAsRadians(System.Double)">
      <summary>
            Convert gradians to radians.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Gradians value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)">
      <summary>
            Hyptrochoid
            </summary>
      <param name="centerX"></param>
      <param name="centerY"></param>
      <param name="scaleX"></param>
      <param name="scaleY"></param>
      <param name="counter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>counter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="iStep">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iStep</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="points">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>points</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_xMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_xMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_yMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_yMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_yMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_yMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_xMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_xMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_iDeliveredPoints">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_iDeliveredPoints</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.Hypotrochoid(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.LinearFitSolveFactors(System.Double[],System.Double[],System.Double@,System.Double@)">
      <summary>
            Calculate linear fit from given points. Makes best fit with Least Square regression method. 
            A line equation is y = k*x + b, that is, y = gradient * x + coefficient 
            </summary>
      <param name="x">X values</param>
      <param name="y">Y values</param>
      <param name="gradient">Line gradient</param>
      <param name="coefficient">Coefficient, Y value of intersection where X = 0</param>
      <returns>True if success</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.LinearRegression(System.Double[],System.Double[],System.Double[])">
      <summary>
            Calculate linear line fit for given points
            </summary>
      <param name="xInFactorization">X values that are used to calculate the factors. This is the point set where the regression line is fitted to.</param>
      <param name="yInFactorization">Y values that are used to calculate the factors. Length must be equal to xInFactorization length.</param>
      <param name="xValuesToFit">X values whose Y values are to be solved, using the factors</param>
      <returns>Fitted Y values, the length equals to xValuesToFit length. Returns null if failed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.LineIntersection(Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D,Arction.Wpf.ChartingMVVM.PointDouble2D@)">
      <summary>
            Calculates intersection point of two lines. Line 1: goes through A1 and A2.
            Line 2: goes through B1 and B2.
            Algorithm copied from http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/
            </summary>
      <param name="a1">Line A point 1.</param>
      <param name="a2">Line A point 2.</param>
      <param name="b1">Line B point 1.</param>
      <param name="b2">Line B point 2.</param>
      <param name="intersection">Intersection point output</param>
      <returns>Success status. Returns false if could not solve the intersection.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.LineIntersection(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat@)">
      <summary>
            Calculates intersection point of two lines. Line 1: goes through A1 and A2.
            Line 2: goes through B1 and B2.
            Algorithm copied from http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/
            </summary>
      <param name="a1">Line A point 1.</param>
      <param name="a2">Line A point 2.</param>
      <param name="b1">Line B point 1.</param>
      <param name="b2">Line B point 2.</param>
      <param name="intersection">Intersection point output</param>
      <returns>Success status. Returns false if could not solve the intersection.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)">
      <summary>
            Mystery curve
            </summary>
      <param name="centerX"></param>
      <param name="centerY"></param>
      <param name="scaleX"></param>
      <param name="scaleY"></param>
      <param name="counter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>counter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="iStep">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iStep</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="points">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>points</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_xMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_xMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_yMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_yMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_yMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_yMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_xMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_xMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="_iDeliveredPoints">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_iDeliveredPoints</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.MathRoutines.MysteryCurve(System.Int32,System.Double,System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PointDistanceFromLine(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculates distance from line to point.
            </summary>
      <param name="p1">Line point 1.</param>
      <param name="p2">Line point 2.</param>
      <param name="p0">Point.</param>
      <returns>Distance from line to point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PointDistanceFromLine(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat@,System.Single@)">
      <summary>
            Calculates distance from line to point.
            </summary>
      <param name="p1">Line point 1.</param>
      <param name="p2">Line point 2.</param>
      <param name="p3">Point.</param>
      <param name="linePoint">Point at line, which is nearest to of reference point.</param>
      <param name="coeff">Normalized distance from p1 to linePoint.</param>
      <returns>Distance from line to point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PointDistanceFromLineSegment(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculates distance from line segment to point.
            </summary>
      <param name="p1">Line point 1.</param>
      <param name="p2">Line point 2.</param>
      <param name="p0">Point.</param>
      <returns>Distance from line segment to point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PointInsidePolygon(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat[])">
      <summary>
            Check whether point is inside polygon.
            Algorithm from: http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html
            Copyright (c) 1970-2003, Wm. Randolph Franklin.
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
            1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.
            2. Redistributions in binary form must reproduce the above copyright notice in the documentation and/or other materials provided with the distribution.
            3. The name of W. Randolph Franklin may not be used to endorse or promote products derived from this Software without specific prior written permission. 
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
            </summary>
      <param name="point">Point.</param>
      <param name="polygon">Polygon points.</param>
      <returns>True, if point is inside polygon, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PolynomialRegression(System.Double[],System.Double[],System.Double[],System.Int32)">
      <summary>
            Calculate polymial line fit. Calculates polynomial factors, and uses these factors to solve Y values based on given X value array.
            </summary>
      <param name="xInFactorization">X values that are used to calculate the factors. This is the point set where the regression line is fitted to.</param>
      <param name="yInFactorization">Y values that are used to calculate the factors. Length must be equal to xInFactorization length.</param>
      <param name="xValuesToFit">X values whose Y values are to be solved, using the factors</param>
      <param name="order">Order of polynomial. Usually more than 3 shouldn't be used</param>
      <returns>Fitted Y values, the length equals to xValuesToFit length. Returns null if failed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.PolynomialRegression(System.Double[],System.Double[],System.Double[],System.Int32,System.Double[]@)">
      <summary>
            Calculate polymial line fit. Calculates polynomial factors, and uses these factors to solve Y values based on given X value array.
            </summary>
      <param name="xInFactorization">X values that are used to calculate the factors. This is the point set where the regression line is fitted to.</param>
      <param name="yInFactorization">Y values that are used to calculate the factors. Length must be equal to xInFactorization length.</param>
      <param name="xValuesToFit">X values whose Y values are to be solved, using the factors</param>
      <param name="order">Order of polynomial. Usually more than 3 shouldn't be used</param>
      <param name="factors">Polynomial result factors, length = order+1. For example, when having order 2, you can plot line with equation: Y =  factors[0] + factors[1]*X + factors[2]*X^2</param>
      <returns>Fitted Y values, the length equals to xValuesToFit length. Returns null if failed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RadiansAsDegrees(System.Double)">
      <summary>
            Convert radians to degrees.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Degrees value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RadiansAsDegreesString(System.Double)">
      <summary>
            Make radians as degrees string.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Radians as degrees string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RadiansAsGrads(System.Double)">
      <summary>
            Convert radians to gradians.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Gradians value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RadiansAsGradsString(System.Double)">
      <summary>
            Make radians as gradians string.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Radians as gradians string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RadiansAsString(System.Double)">
      <summary>
            Make radians as string.
            </summary>
      <param name="value">Radians value.</param>
      <returns>Radians as string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RelativeDistanceOfPoints(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Calculates relative distance between two points.
            </summary>
      <param name="point1">Point 1.</param>
      <param name="point2">Point 2.</param>
      <returns>Relative distance between two points.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.ReplaceNaNs(System.Double[],System.Double)">
      <summary>
            Replace NaN numbers with given value
            </summary>
      <param name="array">Array to check and replace</param>
      <param name="value">Value to store when NaN is found</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.ReplaceNaNs(System.Single[],System.Single)">
      <summary>
            Replace NaN numbers with given value
            </summary>
      <param name="array">Array to check and replace</param>
      <param name="value">Value to store when NaN is found</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.Rotate(Arction.Wpf.ChartingMVVM.PointFloat,System.Double)">
      <summary>
            Rotate point.
            </summary>
      <param name="point">Point (in math coordinate system).</param>
      <param name="angleRad">Angle in radians.</param>
      <returns>Point in pixel coordinate system.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RoundToInt(System.Double)">
      <summary>
            Convert double value to nearest integer. The fast way. 
            </summary>
      <param name="x">Value to convert</param>
      <returns>Nearest integer</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.RoundToInt(System.Single)">
      <summary>
            Convert float value to nearest integer. The fast way. 
            </summary>
      <param name="x">Value to convert</param>
      <returns>Nearest integer</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MathRoutines.StandardDeviation(System.Double[])">
      <summary>
            Calculate standard deviation of values 
            </summary>
      <param name="values">values</param>
      <returns>Stardard deviation</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MeshModelRenderingOrder">
      <summary>
            MeshModel rendering order.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MeshModelRenderingOrder.BeforeSeries">
      <summary>
            Render before other series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MeshModelRenderingOrder.AfterSeries">
      <summary>
            Render after other series.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MessageSeverity">
      <summary>
            Tells the severity level of ChartMessage event.
            Used to determine which kind of actions should be taken on the message event.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.NoMinimumLevel">
      <summary>
            NoMinimumLevel is only used in setting ChartMessageMinimumLevel to allow all messages to be sent to the user.
            Should not be used in ChartMessage events as this will cause a warning.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.Debug">
      <summary>
            Debug message. The user is usually not interested in this.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.Information">
      <summary>
            Information, not an error. Should not require any actions from the user.
            Some incorrect usage of LightningChart has happened which shouldn't impact chart performance. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.Warning">
      <summary>
            Warning, not an error. User action might be required.
            Incorrect usage of LightningChart has happened, like setting an illegal property value
            or mismatching data point types which might cause minor problems with the application.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.RecoverableError">
      <summary>
            An error happened that should have been recovered. User action might be required.
            User must listen to ChartMessage events or the message will be thrown as an exception.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.UnrecoverableError">
      <summary>
            An error happened in the application that the chart couldn't recover from.
            User must listen to ChartMessage events or the message will be thrown as an exception.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageSeverity.Critical">
      <summary>
            Critical error, will result in an exception in all cases.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MessageType">
      <summary>
            Detailed information about the type of the ChartMessage event
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.Unknown">
      <summary>
            Unknown message type
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.MemoryAllocationError">
      <summary>
            Unable to allocate memory for operation. You should run the garbage collection GC.Collect(),
            and then try the operation again
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidPropertySetting">
      <summary>
            Invalid property value has been set 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidSeriesResolverDataWithSeriesEventMarker">
      <summary>
            Series data X coordinate to Y coordinate resolver data has become invalid, because points have been added. 
            Do not use markers as 'TrackSeries' with X axis monitoring monitoring scroll modes. Instead, you should 
            define them as 'AtYValue' and convert them 'TrackSeries' when opening data in review mode, and set the 
            scroll mode to 'None'. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.SeriesIsNotTrackable">
      <summary>
            You are requesting a tracking operation on a series, that is not trackable (does not implement ITrackable) 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.SampleFormatMismatch">
      <summary>
            Samples use different format than you try to use
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.DataPointTypeMismatch">
      <summary>
            Series has been configured to use different data point type than you are trying to use
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidLogAxisOperation">
      <summary>
            The selected feature can't be used with logarithmic axis 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ShaderModel3NotSupported">
      <summary>
            Shader model 3 is not supported by the GPU. Some parts of the chart cannot be drawn as intended. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.RenderDeviceCreateFailed">
      <summary>
            Render device create failed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.SaveToFileFailed">
      <summary>
            Saving to file failed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.CancelSVGRendering">
      <summary>
            Canceled svg rendering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.BeginUpdateEndUpdateCallCountMismatch">
      <summary>
            EndUpdate() is called more often than BeginUpdate().
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.CopyToClipboardFailed">
      <summary>
            Copying to clipboard failed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidSaveFileFormat">
      <summary>
            Invalid save file format. E.g. one can't save 3D graph as vector.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.AssemblyNotFound">
      <summary>
            Assembly not found.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.DataBindingCollectionMisuse">
      <summary>
            IsBindableDataUsed is 'true' but non-bindable data collection 
            (e.g. PointLineSeries.Points) is modified instead of bindable data 
            collection (e.g. PointLineSeries.PointsWpf).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidAxisIndexForSeries">
      <summary>
            Axis index for axis related item is invalid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidSegmentForYAxis">
      <summary>
            Segment or segment index for y-axis is invalid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.InvalidOwnerViewForItem">
      <summary>
            Item view differs from drawing view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.VolumeModelError">
      <summary>
            Volume Model is too big.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.VolumeModelNotFound">
      <summary>
            Volume model is not found.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.LicensingError">
      <summary>
            Problem with licensing. 
            Make sure the license is properly installed. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.EventSystemError">
      <summary>
             Problem delivering or calling client side event handlers. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.DrawingOfImageFailed">
      <summary>
            Some exception occurred when graphics object tried to draw image.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.MissingImplementation">
      <summary>
            Some method implementation is missing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.DisposedObjectAction">
      <summary>
            Illegal update action on a disposed object detected.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ParentSharingError">
      <summary>
            Chart objects parent changed. This could indicate sharing chart's object between multiple parents which is not supported.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ProblematicCameraOrientation">
      <summary>
             Requested camera orientation is problematic and might result in different 
             result than expected. 
             <para>
            This is similar to <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.CameraPositioningFailed" /> but more specific. 
            At this case the user defined camera orientation was somehow problematic on 
            current settings. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.CameraPositioningFailed">
      <summary>
             Some problem appeared with positioning 3D camera or some other viewpoint / 
             view area. 
             <para>This is similar to <see cref="F:Arction.Wpf.ChartingMVVM.MessageType.ProblematicCameraOrientation" /> but more general.  
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.EngineReinitialization">
      <summary>
            Something caused the rendering engine to reinitialize.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.NullReference">
      <summary>
            Catched a null reference exception.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.MissingRenderDevice">
      <summary>
            Missing rendering device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ShaderLoadingFailed">
      <summary>
            Shader loading failed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.RenderDeviceIsLost">
      <summary>
            Render device is not available anymore.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.RenderInvalidCall">
      <summary>
            Rendering caused invalid call exception. 
            Possibly caused by updating chart from a separate thread without synchronizing it with main program thread.
            You should use BeginInvoke or Invoke methods for synchronization. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.TextureCreateError">
      <summary>
            Unable to create texture.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.PerformanceWarning">
      <summary>
            Rendering performance warning.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.FrontBufferAvailable">
      <summary>
            Fast WPF presentation element has retrieved the front buffer, and normal presentation of the LC can continue. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.FrontBufferNotAvailable">
      <summary>
            Fast WPF presentation element has lost the front buffer, and LC cannot be presented using it. 
            This can happen for multiple different valid and normal
            reasons, like hiding of the window, changing to different tab, using through remote desktop, etc, and usually does not require attention. 
            After this the chart will try to use slower fallback presentation method. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.SharpDXBufferCreationError">
      <summary>
            Error on creation of SharpDX Buffer.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.RequirementsNotMet">
      <summary>
            Some of the requirements are not met. Details might present more information. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ResourceHandlingError">
      <summary>
            Some suspicios or alarming happened with resource management (memory, handles.. )
            This might result in rendering device being lost and hopefully reacquired.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.ImagePresentationTimeout">
      <summary>
             Presentation of image has encountered a timeout problem. 
             <para>This might be because of a large things to draw, slow system etc, but might indicate a real problem as well. </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.RenderingDeviceBlacklisted">
      <summary>
             Use of the detected GPU has been blacklisted for the given purpose. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.EngineMessage">
      <summary>
            Engine warning message.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.LoadingFromFileFailed">
      <summary>
            Load from a file operation failed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MessageType.CantCompleteOperation">
      <summary>
            Requested operation was not finished. 
            Zooming, drawing or some other operation did not finish as expected. Output might 
            differ from expected. 
            Details will elaborate the issue. . 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MouseCursors">
      <summary>
            LightningChart specific mouse cursors
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.MouseCursors.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.MouseCursors</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Cross">
      <summary>
            Cross
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Default">
      <summary>
            Default cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.DragDrop">
      <summary>
            Drag'n'drop cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.DragDropAdd">
      <summary>
            Drag'n'drop cursor with plus sign
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Hand">
      <summary>
            Hand.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.HSplit">
      <summary>
            HSplit cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.No">
      <summary>
            No
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.NoMoveHoriz">
      <summary>
            NoMoveHoriz
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Pan">
      <summary>
            Pan cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.PanX">
      <summary>
            Pan X cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.PanY">
      <summary>
            Pan Y cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Rotate">
      <summary>
            Rotation cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.Scroll3D">
      <summary>
            3D scrolling cursor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.ScrollNS">
      <summary>
            ScrollNS
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.SizeAll">
      <summary>
            SizeAll cursor. Used for round view angle dragging.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.SizeNESW">
      <summary>
            SizeNESW
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.SizeNS">
      <summary>
            SizeNS
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.SizeNWSE">
      <summary>
            SizeNWSE
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.SizeWE">
      <summary>
            SizeWE
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.VSplit">
      <summary>
            VSplit cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.ZoomX">
      <summary>
            Zoom in X dimension
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.ZoomXY">
      <summary>
            Zoom in both X and Y dimensions
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.MouseCursors.ZoomY">
      <summary>
            Zoom in Y dimension
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MovementDimension">
      <summary>
             Flags specifying point movement dimension.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MovementDimension.X">
      <summary>Move on X dimension.</summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MovementDimension.Y">
      <summary>Move on Y dimension.</summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MovementDimension.Z">
      <summary>Move on Z dimension.</summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.MultiTouchZoomDirection">
      <summary>
            Touch zoom direction options.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MultiTouchZoomDirection.Rails">
      <summary>
            Zoom on both directions, but direction is determined by touch points.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MultiTouchZoomDirection.XAxis">
      <summary>
            Zoom on X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MultiTouchZoomDirection.YAxis">
      <summary>
            Zoom on Y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.MultiTouchZoomDirection.Free">
      <summary>
            Zoom on both axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ObjectFileData">
      <summary>
            Obj file data container + color array for vertices.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ObjectFileData.#ctor(System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="count">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>count</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ObjectFileData.#ctor(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.OrderChangeAction">
      <summary>
            Order change action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OrderChangeAction.BringToFront">
      <summary>
            Bring object to front. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OrderChangeAction.SendToBack">
      <summary>
            Send to back. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OrderChangeAction.MoveBack">
      <summary>
            Move one step backwards.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OrderChangeAction.MoveFront">
      <summary>
            Move one step forward.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.OrientationModes">
      <summary>
        <para>
             Camera orientation / rotation interpretation types, giving meaning for 
             <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" />, <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> and
             <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" />  settings and their calculation 
             order, thus affecting camera position and 
             orientation. See remarks for generic information on camera placement and orientation. 
            See different enumeration values and <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode" /> property 
            for more information on available options, their usage and effects. 
            </para>
      </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OrientationModes.XYZ_Mixed">
      <summary>
        <para>
             XYZ Mixed mode orientation interpretation.
            </para>
        <para>
             Camera position is defined as X-Y extrinsic rotation and camera up direction by world Z-axis rotation. 
            </para>
        <para>
             This was the only available angle property interpretation used in LC up to version 8.3. 
            </para>
        <para>
             This interpretation has some problematic features and will be deprecated in the future. 
             It's highly suggested to move using <see cref="F:Arction.Wpf.ChartingMVVM.OrientationModes.ZXY_Extrinsic" /> interpretation. 
             See Remarks for more information
            </para>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign">
      <summary>
            Overlay elements horizontal alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign.Left">
      <summary>
            Align left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign.LeftMargin">
      <summary>
            Align to left margin.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign.Center">
      <summary>
            Centered align.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign.Right">
      <summary>
            Align right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.OverlayElementsHorizontalAlign.RightMargin">
      <summary>
            Align to right margin.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PaletteStep">
      <summary>
            Palette step.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.#ctor">
      <summary>
            Constructor for PaletteStep.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.#ctor(Arction.Wpf.ChartingMVVM.ValueRangePalette)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.#ctor(Arction.Wpf.ChartingMVVM.ValueRangePalette,System.Windows.Media.Color,System.Double)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="color">Color.</param>
      <param name="value">Value.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PaletteStep.Color">
      <summary>
            Gets or sets step color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PaletteStep.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PaletteStep.MaxValue">
      <summary>
            Gets or sets step maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PaletteStep.MaxValueProperty">
      <summary>
            Identifies the MaxValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PaletteStep.ShowLegendLabel">
      <summary>
            Show palette step labels.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PaletteStep.ShowLegendLabelProperty">
      <summary>
            Identifies the ShowLegendLabel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStep.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PaletteStepCollection">
      <summary>
            Represents a collection of PaletteStep objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PaletteStepCollection.#ctor">
      <summary>
            Constructor. Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PaletteType">
      <summary>
            Surface palette type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PaletteType.Uniform">
      <summary>
            Uniform colored palette, clear steps. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PaletteType.Gradient">
      <summary>
            Gradient palette, smooth steps.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PanDirection">
      <summary>
            Pan direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PanDirection.Horizontal">
      <summary>
            Horizontal pan only. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PanDirection.Vertical">
      <summary>
            Vertical pan only.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PanDirection.Both">
      <summary>
            Pan in horizontal and vertical direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PersistentRenderingResult">
      <summary>
            Result of persistent rendering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PersistentRenderingResult.Ok">
      <summary>
            Ok.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PersistentRenderingResult.InvalidXAxisScrollingModeInSeries">
      <summary>
            Invalid X-axis in scrolling mode.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PersistentRenderingResult.InvalidOwnerView">
      <summary>
            Invalid owner view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PersistentRenderingResult.InvalidXAxis">
      <summary>
            X-axis assigned to the layer must be same than X-axis of the series. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PieStyle3D">
      <summary>
            3D Pie style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PieStyle3D.Pie">
      <summary>
            Pie.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PieStyle3D.Donut">
      <summary>
            Donut.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PieTitleStyle">
      <summary>
            Pie titles style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PieTitleStyle.Titles">
      <summary>
            Titles are on shown on top of the pie slices.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PieTitleStyle.Values">
      <summary>
            Values are on shown on top of the pie slices.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PieTitleStyle.Percents">
      <summary>
            Percents are on shown on top of the pie slices.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PixelFormat">
      <summary>
             Describes a pixel format of an image or texture. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PixelFormat.None">
      <summary>
            No format defined
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PixelFormat.ARGB">
      <summary>
            Byte order is ARGB
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PixelFormat.BGRA">
      <summary>
            Byte order is BGRA
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Plane3D">
      <summary>
            Defines 3D plane orientation.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Plane3D.XY">
      <summary>
            Plane in X - Y direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Plane3D.XZ">
      <summary>
            Plane in X - Z direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Plane3D.YZ">
      <summary>
            Plane in Y - Z direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PlaneXAxis3D">
      <summary>
            3D plane orientation for X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneXAxis3D.XY">
      <summary>
            Plane in X - Y direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneXAxis3D.XZ">
      <summary>
            Plane in X - Z direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PlaneYAxis3D">
      <summary>
            3D plane orientation for Y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneYAxis3D.XY">
      <summary>
            Plane in X - Y direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneYAxis3D.YZ">
      <summary>
            Plane in Y - Z direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PlaneZAxis3D">
      <summary>
            3D plane orientation for Z-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneZAxis3D.XZ">
      <summary>
            Plane in X - Z direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PlaneZAxis3D.YZ">
      <summary>
            Plane in Y - Z direction.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointColoringTarget">
      <summary>
             Specifies a singular color destination of a point. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointColoringTarget.Off">
      <summary>
             None of the colors. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointColoringTarget.Color1">
      <summary>
             Target is point's Color1 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointColoringTarget.Color2">
      <summary>
             Target is point's Color2
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointColoringTarget.Color3">
      <summary>
             Target is point's Color3
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointColoringTarget.BorderColor">
      <summary>
             Target is Border color of the point.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointDouble">
      <summary>
            Point, double format.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.#ctor(Arction.Wpf.ChartingMVVM.PointDoubleXY)">
      <summary>
            Construct the point by using PointDoubleXY as source info. 
            </summary>
      <param name="point">Source point</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.Equals(System.Object)">
      <summary>
            Object equals to PointDouble.
            </summary>
      <param name="obj">Object.</param>
      <returns>True if object equals to PointDouble, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.op_Equality(Arction.Wpf.ChartingMVVM.PointDouble,Arction.Wpf.ChartingMVVM.PointDouble)">
      <summary>
            Identity of two points.
            </summary>
      <param name="a">PointDouble a.</param>
      <param name="b">PointDouble b.</param>
      <returns>True if points are identical, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.op_Inequality(Arction.Wpf.ChartingMVVM.PointDouble,Arction.Wpf.ChartingMVVM.PointDouble)">
      <summary>
            Difference of two points.
            </summary>
      <param name="a">PointDouble a.</param>
      <param name="b">PointDouble b.</param>
      <returns>True if points are different, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointDouble2D">
      <summary>
            Point, double format.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble2D.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X.</param>
      <param name="y">Y.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble2D.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble2D.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble2D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble2D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble2D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointDouble3D">
      <summary>
            Point 3D as double coordinates.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble3D.#ctor(System.Double,System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble3D.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDouble3D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble3D.X">
      <summary>
            X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble3D.Y">
      <summary>
            Y-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDouble3D.Z">
      <summary>
            Z-coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointDoubleXY">
      <summary>
            XY point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.#ctor">
      <summary>
            Constructor 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.#ctor(System.Double,System.Double)">
      <summary>
            Constructor 
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.SetValues(System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXY.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointDoubleXY.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDoubleXY.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointDoubleXY.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDoubleXY.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointDoubleXYZ">
      <summary>
            XYZ point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double,System.Double)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.SetValues(System.Double,System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.Z">
      <summary>
            Gets or sets Z value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointDoubleXYZ.ZProperty">
      <summary>
            Identifies the Z dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointFloat">
      <summary>
            Point, float format.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.#ctor(Arction.Wpf.ChartingMVVM.PointFloatXY)">
      <summary>
            Construct the point by using PointFloatXY as source info. 
            </summary>
      <param name="point">Source point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.#ctor(System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.Equals(System.Object)">
      <summary>
            Object equals to PointFloat.
            </summary>
      <param name="obj">Object.</param>
      <returns>True if object equals to PointFloat, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.GetHashCode">
      <summary>
            Get Hash Code.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloat.GetHashCode</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.IsZero(System.Single)">
      <summary>
             Test if the value is zero or close to it. 
            </summary>
      <param name="AllowedVariance">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AllowedVariance</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloat.IsZero(System.Single)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloat.IsZero(System.Single)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloat.NaNPoint">
      <summary>
            Create new NaN Point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Addition(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Summarize two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Addition(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)">
      <summary>
            Summarize two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Addition(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Summarize two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Addition(Arction.Wpf.ChartingMVVM.PointFloat,System.Single)">
      <summary>
            Increase point's coordinates by number.
            </summary>
      <param name="pf">PointFloat.</param>
      <param name="Scalar">Float value.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Addition(System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Increase point's coordinates by number.
            </summary>
      <param name="Scalar">Float value.</param>
      <param name="pf">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Division(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Divide two points.
            </summary>
      <param name="l">PointFloat.</param>
      <param name="r">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Division(Arction.Wpf.ChartingMVVM.PointFloat,System.Single)">
      <summary>
            Divide point's coordinates by number.
            </summary>
      <param name="pf">PointFloat.</param>
      <param name="Scalar">Float value.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Division(System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Divide point's coordinates by number.
            </summary>
      <param name="Scalar">Float value.</param>
      <param name="pf">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Equality(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Identity of two points.
            </summary>
      <param name="a">PointFloat a.</param>
      <param name="b">PointFloat b.</param>
      <returns>True if points are identical, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Inequality(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Difference of two points.
            </summary>
      <param name="a">PointFloat a.</param>
      <param name="b">PointFloat b.</param>
      <returns>True if points are different, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Multiply(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Multiply two points.
            </summary>
      <param name="l">PointFloat.</param>
      <param name="r">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Multiply(Arction.Wpf.ChartingMVVM.PointFloat,System.Single)">
      <summary>
            Multiply point's coordinates by number.
            </summary>
      <param name="pf">PointFloat.</param>
      <param name="Scalar">Float value.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Multiply(System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Multiply point's coordinates by number.
            </summary>
      <param name="Scalar">Float value.</param>
      <param name="pf">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Subtraction(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Subtraction of two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Subtraction(Arction.Wpf.ChartingMVVM.PointFloat,Arction.RenderingDefinitions.PointFloat)">
      <summary>
            Subtraction of two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Subtraction(Arction.Wpf.ChartingMVVM.PointFloat,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Subtraction of two points.
            </summary>
      <param name="pfL">PointFloat.</param>
      <param name="pfR">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Subtraction(Arction.Wpf.ChartingMVVM.PointFloat,System.Single)">
      <summary>
            Decrease point's coordinates by number.
            </summary>
      <param name="pf">PointFloat.</param>
      <param name="Scalar">Float value.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.op_Subtraction(System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Decrease point's coordinates by number.
            </summary>
      <param name="Scalar">Float value.</param>
      <param name="pf">PointFloat.</param>
      <returns>Point with new coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloat.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloat.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloat.Zero">
      <summary>
            Create new Zero Point.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointFloat3D">
      <summary>
            Point 3D, float format.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat3D.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
      <param name="z">Z</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat3D.op_Implicit(Arction.Wpf.ChartingMVVM.PointFloat3D)~SharpDX.Vector3">
      <summary>
            Convert to Vector3.
            </summary>
      <param name="point">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloat3D.op_Implicit(Arction.Wpf.ChartingMVVM.PointFloat3D)~SharpDX.Vector3</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloat3D.op_Implicit(Arction.Wpf.ChartingMVVM.PointFloat3D)~SharpDX.Vector3</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloat3D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloat3D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloat3D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloat3D.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointFloatXY">
      <summary>
            XY point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.#ctor">
      <summary>
            Constructor 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Single,System.Single)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.#ctor(System.Single,System.Single)">
      <summary>
            Constructor 
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.SetValues(System.Single,System.Single)">
      <summary>
            Set all values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXY.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloatXY.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloatXY.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloatXY.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloatXY.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointFloatXYZ">
      <summary>
            3D point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Single,System.Single,System.Single)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.SetValues(System.Single,System.Single,System.Single)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.SetValues(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
      </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointFloatXYZ.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloatXYZ.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloatXYZ.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloatXYZ.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloatXYZ.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointFloatXYZ.Z">
      <summary>
            Gets or sets Z value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointFloatXYZ.ZProperty">
      <summary>
            Identifies the Z dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointInt">
      <summary>
            Point, integer format. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointInt.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointInt.#ctor(System.Single,System.Single)">
      <summary>
            Constructor for floats. Converts float parameters to integers.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointInt.op_Explicit(Arction.Wpf.ChartingMVVM.PointFloat)~Arction.Wpf.ChartingMVVM.PointInt">
      <summary>
            Transform PointFloat to PointInt.
            </summary>
      <param name="src">PointFloat to convert into PointInt.</param>
      <returns>Point with integer coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointInt.op_Implicit(System.Drawing.Point)~Arction.Wpf.ChartingMVVM.PointInt">
      <summary>
             Implicit converter from System.Drawing.Point to PointInt.
            </summary>
      <param name="src">Point to convert into PointInt.</param>
      <returns>New PointInt object with same X and Y values as the input.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointInt.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointInt.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointInt.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointIntXY">
      <summary>
            XY point, integer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.#ctor">
      <summary>
            Constructor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Int32,System.Int32)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor. 
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.SetValues(System.Int32,System.Int32)">
      <summary>
            Set all values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointIntXY.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointIntXY.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointIntXY.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointIntXY.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointIntXY.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointPolar">
      <summary>
            Polar point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.#ctor">
      <summary>
            Constructor. Initializes Angle and Amplitude to zeroes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor for PointPolar.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointPolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.#ctor(System.Double,System.Double,Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="angle">Angle in radians.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="owner">Owner object. Defaults to null.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointPolar.Amplitude">
      <summary>
            Gets or sets amplitude value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointPolar.AmplitudeProperty">
      <summary>
            Identifies the Amplitude dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointPolar.Angle">
      <summary>
            Gets or sets angle value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointPolar.AngleProperty">
      <summary>
            Identifies the Angle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.SetValues(System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="angleUi">Angle.</param>
      <param name="amplitude">Amplitude.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.ToString">
      <summary> 
            Value to string converter. Uses default double.ToString() formatting 
            for both values. 
            </summary>
      <returns>Formatted string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointPolar.ToString(System.String)">
      <summary>
            Value to string converter. Uses given formatting 
            for both values. 
            </summary>
      <param name="format">Double.ToString() formatting string to use 
            with both values.</param>
      <returns>Formatted string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointRGB">
      <summary>
            RGB point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double,System.Double)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="r">R-component.</param>
      <param name="g">G-component.</param>
      <param name="b">B-component.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="r">R-coordinate.</param>
      <param name="g">G-coordinate.</param>
      <param name="b">B-coordinate.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointRGB.B">
      <summary>
            Gets or sets B value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointRGB.BProperty">
      <summary>
            Identifies the B dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointRGB.G">
      <summary>
            Gets or sets G value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointRGB.GProperty">
      <summary>
            Identifies the G dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointRGB.R">
      <summary>
            Gets or sets R value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointRGB.RProperty">
      <summary>
            Identifies the R dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.SetValues(System.Double,System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="r">R value.</param>
      <param name="g">G value.</param>
      <param name="b">B value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRGB.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointRound">
      <summary>
            Round chart point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRound.#ctor">
      <summary>
            Constructor for PointRound.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRound.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRound.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointRound.m_X">
      <summary>
            X-coordinate on PointRound.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointRound.m_Y">
      <summary>
            Y-coordinate on PointRound.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRound.SetValues(System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="X">X value.</param>
      <param name="Y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointRound.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointShape3D">
      <summary>
            Point shape 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Box">
      <summary>
            Box. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Sphere">
      <summary>
            Sphere.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Cylinder">
      <summary>
            Cylinder.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Cone">
      <summary>
            Cone.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Torus">
      <summary>
            Torus.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShape3D.Ellipsoid">
      <summary>
            Ellipsoid.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointShapeStyle">
      <summary>
            Shape style
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyle.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="parent">
            Parent / Owner of the item. 
            <para>The LightnignChart object this item will be placed at. 
            E.g, if this item is set to PointShape property of a 
            FreeFormPointLineSeries, the series is the parent of this item.</para></param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.Shape,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Double,System.Double,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.GradientFillPoint,Arction.Wpf.ChartingMVVM.Direction,System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="shape">Shape.</param>
      <param name="color1">Color 1.</param>
      <param name="color2">Color 2.</param>
      <param name="color3">Color 3 (not used in all shapes).</param>
      <param name="borderColor">Border color.</param>
      <param name="borderWidth">Border width.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="angle">Rotation angle in degrees.</param>
      <param name="bodyThickness">Thickness of the shape.</param>
      <param name="gradientFill">Gradient fill type.</param>
      <param name="bitmapImage">Bitmap image.</param>
      <param name="linearGradientDirection">Linear gradient direction.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1">
      <summary>
            Shape style.
            </summary>
      <typeparam name="SHAPE">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>SHAPE</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,`0,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Double,System.Double,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.GradientFillPoint,Arction.Wpf.ChartingMVVM.Direction,System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="shape">Shape.</param>
      <param name="color1">Color 1.</param>
      <param name="color2">Color 2.</param>
      <param name="color3">Color 3 (not used in all shapes).</param>
      <param name="borderColor">Border color.</param>
      <param name="borderWidth">Border width.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="angle">Rotation angle in degrees.</param>
      <param name="bodyThickness">Body thickness.</param>
      <param name="gradientFill">Gradient fill type.</param>
      <param name="bitmapImage">Bitmap image.</param>
      <param name="linearGradientDirection">Linear gradient direction.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Angle">
      <summary>
            Gets or sets point rotation angle in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.AngleProperty">
      <summary>
            Identifies the Angle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Antialiasing">
      <summary>
            Gets or sets if point is anti-aliased. This is a dependency property.
            Drawing anti-aliased draws the point with smooth edges, but will increase CPU/GPU overhead.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.AntialiasingProperty">
      <summary>
            Identifies the Antialiasing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapAlphaLevel">
      <summary>
            Gets or sets bitmap alpha level. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapAlphaLevelProperty">
      <summary>
            Identifies the BitmapAlphaLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapImage">
      <summary>
            Gets or sets bitmap image, which is used when Shape is set to 'Bitmap'. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapImageProperty">
      <summary>
            Identifies the BitmapImage dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapImageTintColor">
      <summary>
            Gets or sets bitmap image tint color. Keep it White to display it normally. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BitmapImageTintColorProperty">
      <summary>
            Identifies the BitmapImageTintColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BodyThickness">
      <summary>
            Gets or sets body thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BodyThicknessProperty">
      <summary>
            Identifies the BodyThickness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BorderColor">
      <summary>
            Gets or sets border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BorderColorProperty">
      <summary>
            Identifies the BorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BorderWidth">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.BorderWidthProperty">
      <summary>
            Identifies the BorderWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color1">
      <summary>
            Gets or sets color 1. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color1Property">
      <summary>
            Identifies the Color1 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color2">
      <summary>
            Gets or sets color 2. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color2Property">
      <summary>
            Identifies the Color2 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color3">
      <summary>
            Gets or sets color 3. Not used in all shapes. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Color3Property">
      <summary>
            Identifies the Color3 dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.GradientFill">
      <summary>
            Gets or sets gradient fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.GradientFillProperty">
      <summary>
            Identifies the GradientFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Height">
      <summary>
            Gets or sets height. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.LinearGradientDirection">
      <summary>
            Gets or sets gradient direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.LinearGradientDirectionProperty">
      <summary>
            Identifies the LinearGradientDirection dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Shape">
      <summary>
            Gets or sets shape. Some fill options are not used on every shape kind. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.ShapeProperty">
      <summary>
            Identifies the Shape dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.UseImageSize">
      <summary>
            Gets or sets if sets Width and Height properties from bitmap image dimensions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.UseImageSizeProperty">
      <summary>
            Identifies the UseImageSize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.Width">
      <summary>
            Gets or sets width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointShapeStyleBase`1.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointSmith">
      <summary>
            Smith point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.#ctor">
      <summary>
            PointSmith default constructor. 
            Object keeps state information of whether the object is at initial state, 
            and some properties use this information for special purposes. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
             PointSmith constructor.
            </summary>
      <param name="Owner">Owner"&gt;Owner element to notify of value changes.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.#ctor(Arction.Wpf.ChartingMVVM.IPointSmith)">
      <summary>
             PointSmith constructor.
            </summary>
      <param name="src">Source point to take all values from. Parent is null.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.#ctor(Arction.Wpf.ChartingMVVM.PointSmith)">
      <summary>
            PointSmith copy constructor.
            </summary>
      <param name="src">Source point to take all values from, including parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.#ctor(System.Double,System.Double,Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            PointSmith constructor.
            </summary>
      <param name="Real">RealValue part of the value.</param>
      <param name="Img">Imaginary part of the value.</param>
      <param name="Owner">Owner"&gt;Owner element to notify of value changes.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointSmith.ImgValue">
      <summary>
            Gets or sets imaginary compoent. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointSmith.ImgValueProperty">
      <summary>
            Identifies the Imaginary component dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointSmith.RealValue">
      <summary>
            Gets or sets RealValue component. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointSmith.RealValueProperty">
      <summary>
            Identifies the RealValue component dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.SetValues(System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="RealValue">Real Value.</param>
      <param name="ImgValue">Imaginary Value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.ToString">
      <summary> 
            Value to string converter. Uses default double.ToString() formatting 
            for both values. 
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointSmith.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointSmith.ToString(System.String)">
      <summary>
            Value to string converter. Uses given formatting 
            for both values. 
            </summary>
      <param name="Format">Double.ToString() formatting string to use 
            with both values.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointSmith.ToString(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointsRenderOptimization">
      <summary>
            Points rendering optimization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsRenderOptimization.None">
      <summary>
            No optimization, use point style. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsRenderOptimization.Pixels">
      <summary>
            Render points as pixels (1x1 points), to gain improvement in performance.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsRenderOptimization.LotsOfPixels">
      <summary>
            Render points as pixels, best performance gain for large data sets. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointsRenderOptimization3D">
      <summary>
            Points rendering optimization for 3D PointLineSeries.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsRenderOptimization3D.None">
      <summary>
            No optimization, use point style. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsRenderOptimization3D.Pixels">
      <summary>
            Render points as pixels (1x1 points), to gain improvement in performance.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointsType">
      <summary>
            Points type. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsType.Points">
      <summary>
            X-Y points.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsType.ErrorPoints">
      <summary>
            X-Y points with error tolerance indicator.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointsType3D">
      <summary>
            Points type, 3D.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsType3D.Points">
      <summary>
            Points.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsType3D.CompactPoints">
      <summary>
            Compact points, to save memory. This Type does not have Color field, therefore, IndividualPointColors property should be disabled. Not applicable with fully bindable chart.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointsType3D.CompactPointsColor">
      <summary>
            Colored compact points, to save memory. Not applicable with fully bindable chart.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PointUnitCircle">
      <summary>
             UnitCircle coordinate point.
             X and Y coordinates have normed values in range [-1,1]. Point (0,0) 
             points is at the center of the circle.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor for Form designer list editor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.PointUnitCircle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.#ctor(System.Double,System.Double,Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="X">X coordinate</param>
      <param name="Y">Y coordinate</param>
      <param name="owner">Owner object. Defaults to null.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.SetValues(Arction.Wpf.ChartingMVVM.PointUnitCircle)">
      <summary>
            Set all values, except owner. 
            </summary>
      <param name="src">Source point to take values from.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.SetValues(System.Double,System.Double)">
      <summary>
            Set all values.
            </summary>
      <param name="X">X coordinate</param>
      <param name="Y">Y coordinate</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.ToString">
      <summary> 
            Value to string converter. Uses default double.ToString() formatting 
            for both values. 
            </summary>
      <returns>Formatted string</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PointUnitCircle.ToString(System.String)">
      <summary>
            Value to string converter. Uses given formatting 
            for both values. 
            </summary>
      <param name="format">Double.ToString() formatting string to use 
            with both values.</param>
      <returns>Formatted string</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointUnitCircle.X">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointUnitCircle.XProperty">
      <summary>
            Identifies the X dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PointUnitCircle.Y">
      <summary>
            Gets or sets Y value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PointUnitCircle.YProperty">
      <summary>
            Identifies the Y dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolarAxisRotateAction">
      <summary>
            Wheel action on polar circumference.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarAxisRotateAction.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarAxisRotateAction.Rotate">
      <summary>
            Rotate single axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarAxisRotateAction.RotateAll">
      <summary>
            Rotate all axes.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolarColorStyle">
      <summary>
            Polar line coloring style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarColorStyle.LineStyle">
      <summary>
            Colored by color from line style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarColorStyle.PalettedByAngle">
      <summary>
            Paletted by Angle, various colors set by the palette, applied over base color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarColorStyle.PalettedByAmplitude">
      <summary>
            Paletted by Amplitude, various colors set by the palette, applied over base color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarColorStyle.PalettedByValue">
      <summary>
            Paletted by Value, various colors set by the palette, applied over base color.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolarLegendBoxCategorization">
      <summary>
            Polar legend box items categorization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarLegendBoxCategorization.None">
      <summary>
            No categorization. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarLegendBoxCategorization.Axes">
      <summary>
            Categorization by axes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarLegendBoxCategorization.SeriesType">
      <summary>
            Categorization by series type.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolarSeriesPoint">
      <summary>
            Polar series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="tag">Tag. Freely assignable object.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Single,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="value">Value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Single,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="value">Value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="value">Value.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.#ctor(System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Angle, in degrees.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.Amplitude">
      <summary>
            Amplitude.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.Angle">
      <summary>
            Angle (degrees).
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.PointColor">
      <summary>
             Color of the point. 
             This is used only if the series PointStyles IndividiualPointColor is not set to Off. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.PolarSeriesPoint.Value">
      <summary>
            Value (float).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Polygon3DPoint">
      <summary>
            Point, Polygon3D format (x,z).
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Polygon3DPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Polygon3DPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="z">Z value.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Polygon3DPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Polygon3DPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Polygon3DPoint.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Polygon3DPoint.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentHorizontal">
      <summary>
            Polygon title horizontal alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentHorizontal.Left">
      <summary>
            Align left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentHorizontal.Center">
      <summary>
            Align center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentHorizontal.CenterOfGravity">
      <summary>
            Align to center of gravity.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentHorizontal.Right">
      <summary>
            Align right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentVertical">
      <summary>
            Polygon title vertical alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentVertical.Top">
      <summary>
            Align top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentVertical.Center">
      <summary>
            Align center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentVertical.CenterOfGravity">
      <summary>
            Align to center of gravity.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PolygonTitleAlignmentVertical.Bottom">
      <summary>
            Align bottom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.PredefinedCamera">
      <summary>
            Predefined camera for 3D view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.Default">
      <summary>
            Default perspective camera, located in front of the model, and having some sideways offset. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.TopOrthographicXZ">
      <summary>
            Orthographic camera, located in positive Y space and targeting down in the center of the 3D model. 
            X dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.TopOrthographicZX">
      <summary>
            Orthographic camera, located in positive Y space and targeting down in the center of the 3D model. Z dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.UnderOrthographicXZ">
      <summary>
            Orthographic camera, located in negative Y space and targeting down in the center of the 3D model. 
            X dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.UnderOrthographicZX">
      <summary>
            Orthographic camera, located in negative Y space and targeting down in the center of the 3D model. Z dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.FrontOrthographic">
      <summary>
            Orthographic camera, located in negative Z space and targeting towards the center of the 3D model. Y dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.BackOrthographic">
      <summary>
            Orthographic camera, located in positive Z space and targeting towards the center of the 3D model. Y dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.LeftOrthographic">
      <summary>
            Orthographic camera, located in negative X space and targeting towards the center of the 3D model. Y dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.RightOrthographic">
      <summary>
            Orthographic camera, located in positive X space and targeting towards the center of the 3D model. Y dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.TopPerspectiveXZ">
      <summary>
            Perspective camera, located in positive Y space and targeting down in the center of the 3D model. 
            X dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.TopPerspectiveZX">
      <summary>
            Perspective camera, located in positive Y space and targeting down in the center of the 3D model. Z dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.UnderPerspectiveXZ">
      <summary>
            Perspective camera, located in negative Y space and targeting down in the center of the 3D model. 
            X dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.UnderPerspectiveZX">
      <summary>
            Perspective camera, located in negative Y space and targeting down in the center of the 3D model. Z dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.FrontPerspective">
      <summary>
            Perspective camera, located in negative Z space and targeting towards the center of the 3D model. Y dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.BackPerspective">
      <summary>
            Perspective camera, located in positive Z space and targeting towards the center of the 3D model. Y dimension vertically, X dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.LeftPerspective">
      <summary>
            Perspective camera, located in negative X space and targeting towards the center of the 3D model. Y dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.RightPerspective">
      <summary>
            Perspective camera, located in positive X space and targeting towards the center of the 3D model. Y dimension vertically, Z dimension horizontally.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.PiePerspective">
      <summary>
            Perspective camera for 3D pie. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.PredefinedCamera.PieTop">
      <summary>
            Orthographic top camera.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ProjectionType">
      <summary>
            Projection types for 3D camera.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ProjectionType.Orthographic">
      <summary>
            Orthographic projection.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ProjectionType.OrthographicLegacy">
      <summary>
            Orthographic projection with dimensions scaling.
            Works the same way as OrthographicCamera property worked in LightningChart v8.3 and previous versions.
            Slower zooming than Orthographic ProjectionType.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ProjectionType.Perspective">
      <summary>
            Perspective projection.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Range`1">
      <summary>
            Range for Generic Types.
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.Range`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,`0,`0)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="min">Minimum-coordinate.</param>
      <param name="max">Maximum-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.#ctor(`0,`0)">
      <summary>
            Constructor.
            <param name="min">Minimum-coordinate.</param><param name="max">Maximum-coordinate.</param></summary>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Range`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Range`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Range`1.Max">
      <summary>
            Max value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Range`1.MaxProperty">
      <summary>
            Max value of the range
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Range`1.Min">
      <summary>
            Min value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Range`1.MinProperty">
      <summary>
            Min value of the range
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.SetValues(`0,`0)">
      <summary>
            Set all values.
            </summary>
      <param name="min">Minimum-coordinate.</param>
      <param name="max">Maximum-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Range`1.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RangeChangeInfo">
      <summary>
            Axis range at Zoomed event.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeChangeInfo.Axis">
      <summary>
            Axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeChangeInfo.NewMax">
      <summary>
            New maximum value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeChangeInfo.NewMin">
      <summary>
            New minimum value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeChangeInfo.OldMax">
      <summary>
            Old maximum value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeChangeInfo.OldMin">
      <summary>
            Old minimum value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RangeInfo">
      <summary>
            Axis range information.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeInfo.Axis">
      <summary>
            Axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeInfo.CurrentMax">
      <summary>
            Current maximum value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeInfo.CurrentMin">
      <summary>
            Current minimum value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RangeInt">
      <summary>
            Range for PointInt.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor">
      <summary>
            Range of PointRGB
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Int32,System.Int32)">
      <summary>
            Range of PointRGB
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(System.Int32,System.Int32)">
      <summary>
            Range of PointRGB
            </summary>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeInt.#ctor(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeInt.Max">
      <summary>
            Max value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeInt.MaxProperty">
      <summary>
            Max value of the range
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeInt.Min">
      <summary>
            Min value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeInt.MinProperty">
      <summary>
            Min value of the range
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RangeRGB">
      <summary>
            Range for PointRGB.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor">
      <summary>
            Range of PointRGB
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)">
      <summary>
            Range of PointRGB
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)</parameter>
          </include>
        </markup>
      </param>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)">
      <summary>
            Range of PointRGB
            </summary>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeRGB.#ctor(Arction.Wpf.ChartingMVVM.PointRGB,Arction.Wpf.ChartingMVVM.PointRGB)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeRGB.Max">
      <summary>
            Max value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeRGB.MaxProperty">
      <summary>
            Max value of the range
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeRGB.Min">
      <summary>
            Min value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeRGB.MinProperty">
      <summary>
            Min value of the range
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RangeXYZ">
      <summary>
            Range for PointDoubleXYZ.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor">
      <summary>
            Range of PointFloatXYZ
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)">
      <summary>
            Range of PointDoubleXYZ
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)</parameter>
          </include>
        </markup>
      </param>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)">
      <summary>
            Range of PointDoubleXYZ
            </summary>
      <param name="min">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)</parameter>
          </include>
        </markup>
      </param>
      <param name="max">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.RangeXYZ.#ctor(Arction.Wpf.ChartingMVVM.PointDoubleXYZ,Arction.Wpf.ChartingMVVM.PointDoubleXYZ)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeXYZ.Max">
      <summary>
            Max value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeXYZ.MaxProperty">
      <summary>
            Max value of the range
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RangeXYZ.Min">
      <summary>
            Min value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RangeXYZ.MinProperty">
      <summary>
            Min value of the range
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RayFunction">
      <summary>
            Ray Function specifier
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RayFunction.Accumulation">
      <summary>
            Accumulation function combines the data from entire dataset and
            provides an opportunity to control the opacity of the model.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RayFunction.Isosurface">
      <summary>
            Isosurface rendering extracts normals from the dataset according to
            threshold settings and visualize the surface of desirable tissue.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RayFunction.MaximalIntensity">
      <summary>
            MaximalIntensity rendering shows the most bright structures inside the dataset.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RectangleXY">
      <summary>
            Rectangle in XY coordinate system.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RectangleXY.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor
            </summary>
      <param name="x">Location x coordinate</param>
      <param name="y">Location y coordinate</param>
      <param name="width">Width</param>
      <param name="height">Height</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXY.Height">
      <summary>
            Height.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RectangleXY.IsEmpty">
      <summary>
            Tells if the rectangle is empty.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXY.Width">
      <summary>
            Width.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXY.X">
      <summary>
            Top left X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXY.Y">
      <summary>
            Top left Y-coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RectangleXYF">
      <summary>
            Rectangle in XY coordinate system for floats.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RectangleXYF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Constructor
            </summary>
      <param name="x">Location x coordinate</param>
      <param name="y">Location y coordinate</param>
      <param name="width">Width</param>
      <param name="height">Height</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXYF.Height">
      <summary>
            Height.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.RectangleXYF.IsEmpty">
      <summary>
            Tells if the rectangle is empty.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXYF.Width">
      <summary>
            Width.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXYF.X">
      <summary>
            Top left x-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleXYF.Y">
      <summary>
            Top left y-coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RectangleZoomMode">
      <summary>
            Rectangle zooming mode, which tells how axis ranges (Minimum and Maximum on X and Y axes) are updated by rectangle zooming operation.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.Horizontal">
      <summary>
            Zooms on X-axis range. Y-axis range remain as is.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.Vertical">
      <summary>
            Zooms on Y-axis range. X-axis range remain as is.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.HorizontalAndVertical">
      <summary>
            Zooms on X and Y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.AboutXAxisZoomOrigin">
      <summary>
            Zooms on X-axis, around X-axis ZoomOrigin value. Y-axis range will be set by mouse start and end coordinates.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.AboutYAxisZoomOrigin">
      <summary>
            Zooms on Y-axis, around Y-axis ZoomOrigin value. X-axis range will be set by mouse start and end coordinates.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectangleZoomMode.AboutXYZoomOrigin">
      <summary>
            Zooms on both X and Y-axis about axes ZoomOrigin values.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RectFillStyle">
      <summary>
            Rectangle fill style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectFillStyle.None">
      <summary>
            No fill. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectFillStyle.ColorOnly">
      <summary>
            Color, gradient or solid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectFillStyle.Bitmap">
      <summary>
            Bitmap is drawn op top of the gradient color. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RectFillStyle.ColorOverBitmap">
      <summary>
            Gradient color is drawn on top of the Bitmap.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Regression">
      <summary>
            Regression type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Regression.None">
      <summary>
            No regression.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Regression.LineFit">
      <summary>
            Line fit.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Regression.PolynomialFit">
      <summary>
            Polynomial fit.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RenderDeviceInfo">
      <summary>
            Render device info structure.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.ActiveObjects">
      <summary>
            Active objects.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.AllGPUs">
      <summary>
            All GPUs installed in the system.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.AntiAliasingSupported">
      <summary>
            True if anti-aliasing is supported.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.Created">
      <summary>
            Is the device created. If false, the other fields of this structure are not valid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.D2Dv11Supported">
      <summary>
            True if D2D v1.1 is supported, false if not. 
            The v1.1 is required for HW text rendering on DX11. 
            On DX9 this is always false.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.D3DImageUsed">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.D3DImageUsed</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.Description">
      <summary>
            Adapter Description.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.DpiAware">
      <summary>
            True if software is DPI aware.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.DpiX">
      <summary>
            DPI in X direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.DpiXFactor">
      <summary>
            DPI Factor in X direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.DpiY">
      <summary>
            DPI in Y direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.DpiYFactor">
      <summary>
            DPI Factor in Y direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.EngineName">
      <summary>
            Rendering engine name.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.EngineNameShort">
      <summary>
            Rendering engine name (short).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.FastVertexFormat">
      <summary>
            True if your graphics adapter supports fast vertex format.
            Fast vertices are not available for old graphics adapters. 
            If false, the rendering performance is not optimal, since 
            slower vertex formats must be used. 
            Getting a new graphics adapter is strongly recommended,
            ensure it is at least DirectX 10 level, for best performance.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.HardwareVertexProcessing">
      <summary>
            True if your graphics adapter supports vertex processing in hardware (GPU).
            If false, the vertex calculation has to be done in software (computer CPU),
            and the performance is not optimal. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.IndexBufferMaxSize">
      <summary>
            Maximum index buffer size.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.IndexBuffers32Bit">
      <summary>
            True if 32-bit index buffers are supported. 
            If only 16-index buffers are supported, returns false. In this case the 3D surfaces may be limited into smaller sizes. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.MaxAntiAliasLevel">
      <summary>
            Anti Alias Level.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.Memory">
      <summary>
            Memory on the graphics card (if information is available).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.PureDevice">
      <summary>
            True if optimal pure device mode is supported.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.RenderDeviceFeatureLevel">
      <summary>
            Current renderer device type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.RendererDeviceType">
      <summary>
            Current renderer device type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.ShaderModel3">
      <summary>
            True if shader model 3 is supported. Both vertex and pixel shaders are format 3 or greater.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.TextureMaxHeight">
      <summary>
            Maximum texture height. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.TextureMaxWidth">
      <summary>
            Maximum texture width. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.TexturesSizesNonPowerOf2">
      <summary>
            Limited support for textures which size is not power of two. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.ToString">
      <summary>
            Convert structure contents into string.
            </summary>
      <returns>Structure contents as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderDeviceInfo.VendorID">
      <summary>
            GPU chip manufacturer ID. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RendererDeviceType">
      <summary>
            Rendering device type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.Auto">
      <summary>
            Automatic order suggested by LightningChart, which, in general, should produce the 
            best results. Value can change based on current status of different engines. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.AutoPreferD9">
      <summary>
             Automatic order, preferring DX9 over DX11.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.AutoPreferD11">
      <summary>
             Automatic order, preferring DX11 over DX9.
             DX11 looks better and is faster than DX9 on many occasions. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.HardwareOnlyD9">
      <summary>
            Force hardware rendering for D9 device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.SoftwareOnlyD9">
      <summary>
            Force software rendering for D9 device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.HardwareOnlyD11">
      <summary>
            Force hardware rendering for D11 device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.SoftwareOnlyD11">
      <summary>
            Force software rendering for D11 device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RendererDeviceType.None">
      <summary>
            Defines that no engine is used or not to be used. 
            This can be used to fully disable rendering on LightningChart, and thus save (free) resources required by the rendering system. 
            After setting this as DeviceType, it might be useful to call GC.Collect() on some occasions. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RenderingSettings">
      <summary>
            Rendering settings, that can be given as chart constructor parameter to set the creation time parameters. 
            Speeds up creating of the chart, if non-default values are given, preventing the chart rendering engine to be re-created several times. 
            <para>Note that the values are only read once after the chart is created, and changing them later has no effect. 
            To change values after chart has been created, use Charts ChartRenderOptions property on WPF, or RenderOptions property on WinForms, both of type <see cref="T:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon" /></para><para>This object can be shared between multiple charts. </para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.RenderingSettings.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.AntiAliasLevel">
      <summary>
            Anti-aliasing factor. 1 = no anti-aliasing.
            The larger the value, the smoother the image will be, but at steep cost of performance on some display adapters.
            Only objects having AntiAlias property will be anti-aliased, if it's set to 'Normal'.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.ChartMessageDelegate">
      <summary>
            Delegate to register to the ChartMessage event. Initialized this way the chart error event is launched even before the object has been fully constructed. 
            <para>Intended primarily as debug measure for cases when LC crashes on constructor and we need more information on why it happens.</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.D2DEnabled">
      <summary>
             Temporary debug setting for disabling D2D system and text rendering on DX11. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.DeviceType">
      <summary>
             Default rendering device engine to use. Defaults to Auto.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.HeadlessMode">
      <summary>
            Identifies that we do not actually have a graphical interface. This is true for instance for services or 
            console applications. This can also be used if the chart is intended to run on background without an actual interface. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RenderingSettings.WaitforVSync">
      <summary>
            Wait for next refresh, V-Sync. 
            If the computer is fast enough, disabling this can give higher refresh rate than the screen refresh rate is. 
            By disabling this, rendering does not wait next screen refresh turn. 
            Enabling this may improve performance especially in slow computers. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RightToLeftZoomAction3D">
      <summary>
            Right-to-left zoom action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomAction3D.Off">
      <summary>
            Disabled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomAction3D.RectangleZoomIn">
      <summary>
            Rectangle zoom in, like from zooming left to right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomAction3D.ZoomOut">
      <summary>
            Zoom out, by given factor.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound">
      <summary>
            Right-to-left zoom action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.Off">
      <summary>
            Disabled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.ZoomToData">
      <summary>
            Zoom to show all data, does not take graph or labels into account.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.DefaultSettings">
      <summary>
            Zooming based on the default zoom and centering settings. 
            Resets ZoomScale and ZoomCenter properties to default values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.ZoomToLabelsArea">
      <summary>
            Zooming based on LabelsArea, showing the graph and the labels, ignores data outside the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.RectangleZoomIn">
      <summary>
            Rectangle zoom in, like from zooming left to right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.ZoomOut">
      <summary>
            Zoom out, by given factor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.PopFromZoomStack">
      <summary>
            Zoom to previous level.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY">
      <summary>
            Right-to-left zoom action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.Off">
      <summary>
            Disabled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.ZoomToFit">
      <summary>
            FitView. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.RectangleZoomIn">
      <summary>
            Rectangle zoom in, like from zooming left to right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.ZoomOut">
      <summary>
            Zoom out, by given factor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.RevertAxisRanges">
      <summary>
            Reverts to specified axis Revert range values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionXY.PopFromZoomStack">
      <summary>
            Zoom to previous level.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.RoundGridTickmarkLocation">
      <summary>
            Round grid mark location in relation to circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RoundGridTickmarkLocation.Outside">
      <summary>
            Tick mark is outside circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.RoundGridTickmarkLocation.Inside">
      <summary>
            Tick mark is inside circle.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SampleFormat">
      <summary>
            Sample data line series sample storage format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SampleFormat.SingleFloat">
      <summary>
            Single floating point number. Use this to save memory.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SampleFormat.DoubleFloat">
      <summary>
            Double floating point number. Use this for better accuracy.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SamplingRateOptions">
      <summary>
            Settings for Volume Model Sampling Rate Manager.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SamplingRateOptions.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SamplingRateOptions.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SamplingRateOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SamplingRateOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SamplingRateOptions.Enabled">
      <summary>
            Enable sampling rate
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SamplingRateOptions.EnabledProperty">
      <summary>
            Enable manual sampling rate option
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SamplingRateOptions.Inerthness">
      <summary>
            Inerthness rate for the sampling rate 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SamplingRateOptions.InerthnessProperty">
      <summary>
            Sampling Rate Range option for volume rendering
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SamplingRateOptions.ManualSamplingRate">
      <summary>
            Enable sampling rate
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SamplingRateOptions.ManualSamplingRateProperty">
      <summary>
            Manual sampling rate option
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SamplingRateOptions.SamplingRateRange">
      <summary>
            Settings for minimal and maximal sampling rate of the volume model
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SamplingRateOptions.SamplingRateRangeProperty">
      <summary>
            Sampling Rate Range option for volume rendering
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SamplingRateOptions.TargetFPS">
      <summary>
            Target FPS of the Volume rendering visualisation
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SamplingRateOptions.TargetFPSProperty">
      <summary>
            Target FPS option for volume rendering
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SamplingRateOptions.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScaleMultipleFlags">
      <summary>
            Scale multiple flags.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScaleMultipleFlags.Allow2">
      <summary>
            Allow values that are 2-based, like 2, 0.2, 0.02...
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScaleMultipleFlags.Allow5">
      <summary>
            Allow values that are 5-based, like 5, 0.5, 0.05...
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScaleType">
      <summary>
            Axis scale type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScaleType.Linear">
      <summary>
            Linear scale.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScaleType.Logarithmic">
      <summary>
            Logarithmic scale.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollBarBase">
      <summary>
            Vertical scroll bar.
            Values use unsigned 64-bit integer value range.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollBarBase.#ctor">
      <summary>
            Constructor for form editor list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollBarBase.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.BackgroundFill">
      <summary>
            Gets or sets background fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.BackgroundFillProperty">
      <summary>
            Identifies the BackgroundFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Border">
      <summary>
            Gets or sets border around the bar. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.ButtonOptions">
      <summary>
            Gets or sets button options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.ButtonOptionsProperty">
      <summary>
            Identifies the ButtonOptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollBarBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollBarBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Enabled">
      <summary>
            Gets or sets if scrollbar is enabled or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollBarBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is mouse over item.
            </summary>
      <param name="x">mouse x-coordinate</param>
      <param name="y">mouse y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if mouse is over item, false otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.KeyControlEnabled">
      <summary>
            Gets or sets if scrollbar is listening to key presses or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.KeyControlEnabledProperty">
      <summary>
            Identifies the KeyControlEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.KeyControlFocus">
      <summary>
            Gets or sets key control focus rectangle line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.KeyControlFocusProperty">
      <summary>
            Identifies the KeyControlFocus dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.LargeChange">
      <summary>
            Gets or sets large change. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.LargeChangeProperty">
      <summary>
            Identifies the LargeChange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Maximum">
      <summary>
            Gets or sets maximum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.MaximumProperty">
      <summary>
            Identifies the Maximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Minimum">
      <summary>
            Gets or sets minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.MinimumProperty">
      <summary>
            Identifies the Minimum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Offset">
      <summary>
            Gets or sets offset from position set by Alignment property. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.RepeatIntervalMs">
      <summary>
            Gets or sets repeat interval when user interactive device primary button is kept down, in milliseconds. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.RepeatIntervalMsProperty">
      <summary>
            Identifies the RepeatIntervalMs dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ScrollBarBase.Scroll">
      <summary>
            Occurs when the scroll bar thumb has been moved.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.ScrollThumbOptions">
      <summary>
            Gets or sets scroll box options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.ScrollThumbOptionsProperty">
      <summary>
            Identifies the ScrollBoxOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Size">
      <summary>
            Gets or sets size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.SmallChange">
      <summary>
            Gets or sets small change. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.SmallChangeProperty">
      <summary>
            Identifies the SmallChange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Value">
      <summary>
            Gets or sets value. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ScrollBarBase.ValueChanged">
      <summary>
            Occurs when the Value property has been changed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.WheelChange">
      <summary>
            Gets or sets user interactive device wheel change. Increment or decrement when wheel has scrolled over the scroll bar. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.WheelChangeProperty">
      <summary>
            Identifies the WheelChange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollBarBase.Visible">
      <summary>
            Gets or sets if scrollbar is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollBarBase.ScrollEventHandler">
      <summary>
            The delegate to use for handlers that receive the Scroll event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the Scroll event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollBarScrollType">
      <summary>
            Scroll bar scrolling type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.SmallDecrement">
      <summary>
            Small decrement.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.SmallIncrement">
      <summary>
            Small increment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.LargeDecrement">
      <summary>
            Large decrement.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.LargeIncrement">
      <summary>
            Large increment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.ScrollDrag">
      <summary>
            Scroll box is dragged.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.WheelDecrement">
      <summary>
            Device wheel has been scrolled down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollBarScrollType.WheelIncrement">
      <summary>
            Device wheel has been scrolled up.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollButtonOptions">
      <summary>
            Scroll button options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.#ctor(Arction.Wpf.ChartingMVVM.ScrollBarBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.#ctor(Arction.Wpf.ChartingMVVM.ScrollBarBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.Icon">
      <summary>
            Arrow icons inside button. 
            The definition applies to Right button. Left button icon is drawn rotated by 180 degrees. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.IconProperty">
      <summary>
            Identifies the Icon dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.Width">
      <summary>
            Width of button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollButtonOptions.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollButtonStyle">
      <summary>
            Scroll bar button style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollButtonStyle.Rectangle">
      <summary>
            Rectangular shape.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollButtonStyle.Oval">
      <summary>
            Oval shape
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollEventArgs">
      <summary>
            Represents a class that provides arguments for the Scroll event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of ScrollEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollEventArgs.NewValue">
      <summary>
            The new value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollEventArgs.OldValue">
      <summary>
            The old value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollEventArgs.Type">
      <summary>
            Identifies what kind of scrolling occurred.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ScrollThumbOptions">
      <summary>
            Represents a scroll bar thumb.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.#ctor(Arction.Wpf.ChartingMVVM.ScrollBarBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.#ctor(Arction.Wpf.ChartingMVVM.ScrollBarBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.AutoSize">
      <summary>
            Gets or sets if automatically size the scroll buttons. Height is set to match bar height. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.AutoSizeProperty">
      <summary>
            Identifies the AutoSize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.BorderColor">
      <summary>
            Gets or sets border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.BorderColorProperty">
      <summary>
            Identifies the BorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.BorderWidth">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.BorderWidthProperty">
      <summary>
            Identifies the BorderWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Color1">
      <summary>
            Gets or sets color 1. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Color1Property">
      <summary>
            Identifies the Color1 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Color2">
      <summary>
            Gets or sets color 2. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Color2Property">
      <summary>
            Identifies the Color2 dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.GradientFill">
      <summary>
            Gets or sets gradient fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.GradientFillProperty">
      <summary>
            Identifies the GradientFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Height">
      <summary>
            Gets or sets height. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.LinearGradientDirection">
      <summary>
            Gets or sets gradient direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.LinearGradientDirectionProperty">
      <summary>
            Identifies the LinearGradientDirection dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.Style">
      <summary>
            Gets or sets button style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ScrollThumbOptions.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SegmentLine">
      <summary>
            Line segment from A to B.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SegmentLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="ax">Point A, X value.</param>
      <param name="ay">Point A, Y value.</param>
      <param name="bx">Point B, X value.</param>
      <param name="by">Point B, Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SegmentLine.#ctor(System.Double,System.Double,System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="ax">Point A, X value.</param>
      <param name="ay">Point A, Y value.</param>
      <param name="bx">Point B, X value.</param>
      <param name="by">Point B, Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SegmentLine.AX">
      <summary>
            Point A, X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SegmentLine.AY">
      <summary>
            Point A, Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SegmentLine.BX">
      <summary>
            Point B, X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SegmentLine.BY">
      <summary>
            Point B, Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SegmentLine.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SegmentLine.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeparatorCSV">
      <summary>
            CSV file export separator.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeparatorCSV.Comma">
      <summary>
            Use comma as value separator, and point as decimal separator.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeparatorCSV.Semicolon">
      <summary>
            Use semicolon as value separator, and comma as decimal separator.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeparatorCSV.Auto">
      <summary>
            Decimal separator is detected from system settings.
            If it's comma, a semicolon is used as value separator. Else a comma is used as value separator.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesErrorPoint">
      <summary>
            Series point with error tolerance.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor, with error bar values set to 0.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="errorXMinus">Error bar X, to negative direction.</param>
      <param name="errorXPlus">Error bar X, to positive direction.</param>
      <param name="errorYMinus">Error bar Y, to negative direction.</param>
      <param name="errorYPlus">Error bar Y, to positive direction.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="errorXMinus">Error bar X, to negative direction.</param>
      <param name="errorXPlus">Error bar X, to positive direction.</param>
      <param name="errorYMinus">Error bar Y, to negative direction.</param>
      <param name="errorYPlus">Error bar Y, to positive direction.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="errorXMinus">Error bar X, to negative direction.</param>
      <param name="errorXPlus">Error bar X, to positive direction.</param>
      <param name="errorYMinus">Error bar Y, to negative direction.</param>
      <param name="errorYPlus">Error bar Y, to positive direction.</param>
      <param name="tag">Tag, freely assignable object.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value</param>
      <param name="errorXMinus">Error bar X, to negative direction.</param>
      <param name="errorXPlus">Error bar X, to positive direction.</param>
      <param name="errorYMinus">Error bar Y, to negative direction.</param>
      <param name="errorYPlus">Error bar Y, to positive direction.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor, with error bar values set to 0.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor, with error bar values set to 0.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.#ctor(System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor, with error bar values set to 0.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.ErrorXMinus">
      <summary>
            X amount to X-axis reverse direction
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.ErrorXPlus">
      <summary>
            X amount to X-axis positive direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.ErrorYMinus">
      <summary>
            Y amount to Y-axis reverse direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.ErrorYPlus">
      <summary>
            Y amount to Y-axis positive direction.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.PointColor">
      <summary>
             Color of the point. 
             This is used only if the series PointStyles IndividiualPointColor is not set to Off. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesErrorPoint.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesEventMarkerHorizontalPosition">
      <summary>
            Series event marker horizontal position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerHorizontalPosition.SnapToPoints">
      <summary>
            Snap to nearest data point.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerHorizontalPosition.AtXValue">
      <summary>
            Position at given X value (series value, not coordinate).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition">
      <summary>
            Series event marker vertical position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.TrackSeries">
      <summary>
            Track the series. The Y value is solved from X value. You can use this only for series implementing ITrackable interface or with FreeformPointLineSeries.
            <remarks>Not applicable in X-axis scrolling modes Scrolling, Stepping, Sweeping (monitoring modes).  
            The resolver data is not valid for performance reasons. You should insert a marker 
            as AtYValue in monitoring mode and convert it as TrackSeries when entering data review mode. 
            Works only on series implementing ITrackable or with FreeformPointLineSeries.</remarks></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.AtYValue">
      <summary>
            Position at given Y value (series value, not coordinate).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.ZeroLevel">
      <summary>
            Position at zero level. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.YAxisTop">
      <summary>
            Position at Y-axis top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.YAxisCenter">
      <summary>
            Position at Y-axis center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition.YAxisBottom">
      <summary>
            Position at Y-axis bottom. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape">
      <summary>
            Point shape for XY series event markers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowBasicActive">
      <summary>
            Hollow Basic Active.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowBasic">
      <summary>
            Hollow Basic.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowHarmonic">
      <summary>
            Hollow Harmonic.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowActiveSideband">
      <summary>
            Active Sideband Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowSideband">
      <summary>
            Sideband Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowTailedActive">
      <summary>
            Hollow Tailed Active.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowTailed">
      <summary>
            Hollow Tailed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Rectangle">
      <summary>
            Rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Triangle">
      <summary>
            Triangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Circle">
      <summary>
            Circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Flag">
      <summary>
            Flag.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.FlagLightning">
      <summary>
            Flag with lightning bolt.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Cross">
      <summary>
            Cross.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.CrossAim">
      <summary>
            Aiming cross.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.Bitmap">
      <summary>
            Bitmap graphics.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowYAxis">
      <summary>
            Hollow Y-axis shape with Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape.HollowYAxisActive">
      <summary>
            Hollow active Y-axis shape with Cursor.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShapeStyle">
      <summary>
            Shape style for SeriesEventMarkers.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShapeStyle.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShapeStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesMarkerPointShapeStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.SeriesMarkerPointShape,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Single,System.Single,System.Single,System.Single,System.Single,Arction.Wpf.ChartingMVVM.GradientFillPoint,Arction.Wpf.ChartingMVVM.Direction,System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="shape">Shape.</param>
      <param name="color1">Color 1.</param>
      <param name="color2">Color 2.</param>
      <param name="color3">Color 3 (not used in all shapes).</param>
      <param name="borderColor">Border color.</param>
      <param name="borderWidth">Border width.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="angle">Rotation angle in degrees.</param>
      <param name="bodyThickness">Thickness of the shape.</param>
      <param name="gradientFill">Gradient fill type.</param>
      <param name="bitmapImage">Bitmap image.</param>
      <param name="linearGradientDirection">Linear gradient direction.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPoint">
      <summary>
            Series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint.#ctor(System.Double,System.Double,System.Object,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="tag">Tag, freely assignable object.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint.#ctor(System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="color">Color of the point. For more information see Color property.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPoint.PointColor">
      <summary>
             Color of the point. 
             This is used only if the series PointStyles IndividiualPointColor is not set to Off. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPoint3D">
      <summary>
            PointLineSeries3D series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint3D.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint3D.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="color">Color of the point.</param>
      <param name="sizeFactor">Point size factor.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPoint3D.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color,System.Single,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="color">Color of the point.</param>
      <param name="sizeFactor">Point size factor.</param>
      <param name="tag">Object assigned to point.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.Color">
      <summary>
            Color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.SizeFactor">
      <summary>
            Size factor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPoint3D.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPointCompact3D">
      <summary>
            PointLineSeries3D series point, compact format to save memory.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPointCompact3D.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompact3D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompact3D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompact3D.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D">
      <summary>
            PointLineSeries3D series point with color, compact format to save memory.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D.#ctor(System.Single,System.Single,System.Single,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D.Color">
      <summary>
            Color as integer.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D.Z">
      <summary>
            Z value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ShadeMode">
      <summary>
            Shade mode.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ShadeMode.Flat">
      <summary>
            Flat shading, lighting does not affect coloring.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ShadeMode.Gouraud">
      <summary>
            Gouraud shading, lighting does affect coloring.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Shadow">
      <summary>
            Shadow class shows a shadow behind it's master object
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Shadow.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shadow.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Shadow.Offset">
      <summary>
            Gets or sets shadow offset from the object. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shadow.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Shadow.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Shadow.Visible">
      <summary>
            Gets or sets if shadow is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shadow.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Shape">
      <summary>
            Point shape.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowBasicActive">
      <summary>
            Hollow Basic Active.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowBasic">
      <summary>
            Hollow Basic.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowHarmonic">
      <summary>
            Hollow Harmonic.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowActiveSideband">
      <summary>
            Active Sideband Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowSideband">
      <summary>
            Sideband Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowTailedActive">
      <summary>
            Hollow Tailed Active.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.HollowTailed">
      <summary>
            Hollow Tailed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Rectangle">
      <summary>
            Rectangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Triangle">
      <summary>
            Triangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Circle">
      <summary>
            Circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Flag">
      <summary>
            Flag.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.FlagLightning">
      <summary>
            Flag with lightning bolt.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Cross">
      <summary>
            Cross.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.CrossAim">
      <summary>
            Aiming cross.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Shape.Bitmap">
      <summary>
            Bitmap graphics.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ShapeType">
      <summary>
            Shape type. Used with 3D PointLineSeries.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ShapeType.Shape2D">
      <summary>
            Use 2D shapes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ShapeType.Shape3D">
      <summary>
            Use 3D shapes.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SharedExtensions">
      <summary>
             Extensions methods. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SharedExtensions.ToString``1(``0)">
      <summary>
            Converts an enum type value to string reading its description attribute.
            </summary>
      <param name="e">Value to be converted to string</param>
      <typeparam name="T">Generic type</typeparam>
      <returns>Description attribute of the enum value</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SharedFontStyle">
      <summary>
            Shared FontStyle enumeration.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontStyle.Normal">
      <summary>
            Normal.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontStyle.Oblique">
      <summary>
            Oblique, which is like Italic.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontStyle.Italic">
      <summary>
            Italic.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SharedFontWeight">
      <summary>
            Shared FontWeight enumeration.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Thin">
      <summary>
            Weight is 100.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.ExtraLight">
      <summary>
            Weight is 200.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.UltraLight">
      <summary>
            Weight is 200.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Light">
      <summary>
            Weight is 300.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.SemiLight">
      <summary>
            Weight is 350.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Normal">
      <summary>
            Weight is 400.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Regular">
      <summary>
            Weight is 400.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Medium">
      <summary>
            Weight is 500.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.DemiBold">
      <summary>
            Weight is 600.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.SemiBold">
      <summary>
            Weight is 600.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Bold">
      <summary>
            Weight is 700.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.ExtraBold">
      <summary>
            Weight is 800.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.UltraBold">
      <summary>
            Weight is 800.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Black">
      <summary>
            Weight is 900.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.Heavy">
      <summary>
            Weight is 900.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.ExtraBlack">
      <summary>
            Weight is 950.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SharedFontWeight.UltraBlack">
      <summary>
            Weight is 950.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeDoubleXY">
      <summary>
            2D size.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeDoubleXY.Height">
      <summary>
            Gets or sets Height value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeDoubleXY.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.SetValues(System.Double,System.Double)">
      <summary>
            Set width and height values.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXY.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeDoubleXY.Width">
      <summary>
            Gets or sets Width value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeDoubleXY.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ">
      <summary>
            3D size.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.Depth">
      <summary>
            Gets or sets Depth value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.DepthProperty">
      <summary>
            Identifies the Depth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.Height">
      <summary>
            Gets or sets Height value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.SetValues(System.Double,System.Double,System.Double)">
      <summary>
            Set width and height values.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.Width">
      <summary>
            Gets or sets Width value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeDoubleXYZ.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeFloat">
      <summary>
            Size, float format. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloat.#ctor(Arction.Wpf.ChartingMVVM.SizeFloatXY)">
      <summary>
            Construct from SizeFloatXY type. 
            </summary>
      <param name="size">Size.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloat.#ctor(System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloat.Height">
      <summary>
            Height.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloat.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloat.Width">
      <summary>
            Width.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeFloatXY">
      <summary>
            2D size.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.#ctor(System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeFloatXY.Height">
      <summary>
            Gets or sets Height value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloatXY.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.SetValues(System.Single,System.Single)">
      <summary>
            Set width and height values.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXY.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeFloatXY.Width">
      <summary>
            Gets or sets Width value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloatXY.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeFloatXYZ">
      <summary>
            3D size.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.Depth">
      <summary>
            Gets or sets depth value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.DepthProperty">
      <summary>
            Identifies the Depth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.Height">
      <summary>
            Gets or sets Height value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.SetValues(System.Single,System.Single,System.Single)">
      <summary>
            Set width, height and depth values.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="depth">Depth.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.Width">
      <summary>
            Gets or sets Width value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeFloatXYZ.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SizeInt">
      <summary>
            Size, int format. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeInt.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeInt.Height">
      <summary>
            Height.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SizeInt.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SizeInt.Width">
      <summary>
            Width.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SmithSeriesPoint">
      <summary>
            Smith series point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.#ctor(System.Double,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="real">Real component.</param>
      <param name="imgValue">Imaginary component.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.#ctor(System.Double,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="real">Real component.</param>
      <param name="imgValue">Imaginary component.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.ImgValue">
      <summary>
            Imaginary component of the smith coordinate.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.RealValue">
      <summary>
            Real component of the smith coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SmithSeriesPoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.StaticXGrid">
      <summary>
            Static X Grid
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StaticXGrid.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StaticXGrid.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.StaticXGrid.Behind">
      <summary>
            Gets or sets if the grid is behind or in front. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StaticXGrid.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StaticXGrid.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.StaticXGrid.DivCount">
      <summary>
            Gets or sets division count (grid line count - 1). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StaticXGrid.DivCountProperty">
      <summary>
            Identifies the DivCount dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StaticXGrid.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.StockSeriesData">
      <summary>
            Stock series data for one day.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.#ctor(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.UInt64,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="open">Open.</param>
      <param name="close">Close.</param>
      <param name="high">High.</param>
      <param name="low">Low.</param>
      <param name="transaction">Transaction.</param>
      <param name="volume">Volume.</param>
      <param name="date">X axis value, date.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.#ctor(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.UInt64,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="open">Open.</param>
      <param name="close">Close.</param>
      <param name="high">High.</param>
      <param name="low">Low.</param>
      <param name="transaction">Transaction.</param>
      <param name="volume">Volume.</param>
      <param name="date">X axis value, date.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.#ctor(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.UInt64,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="dateYear">Year.</param>
      <param name="dateMonth">Month.</param>
      <param name="dateDay">Day.</param>
      <param name="open">Open.</param>
      <param name="close">Close.</param>
      <param name="high">High.</param>
      <param name="low">Low.</param>
      <param name="volume">Volume.</param>
      <param name="transaction">Transaction.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.#ctor(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.UInt64,System.Double,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="dateYear">Year.</param>
      <param name="dateMonth">Month.</param>
      <param name="dateDay">Day.</param>
      <param name="open">Open.</param>
      <param name="close">Close.</param>
      <param name="high">High.</param>
      <param name="low">Low.</param>
      <param name="volume">Volume.</param>
      <param name="transaction">Transaction.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Close">
      <summary>
            Close.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Date">
      <summary>
            X value, date. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.Equals(System.Object)">
      <summary>
            Check if referenced object is equal to this one.
            </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.StockSeriesData.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.StockSeriesData.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.High">
      <summary>
            High.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Low">
      <summary>
            Low.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Open">
      <summary>
            Open.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.StockSeriesData.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Transaction">
      <summary>
            Transaction, sum of share prices paid. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesData.Volume">
      <summary>
            Volume, count of shares traded.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.StockSeriesPacking">
      <summary>
            StockSeries packing state.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesPacking.On">
      <summary>
            Packing is enabled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockSeriesPacking.Off">
      <summary>
            Packing is disabled.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.StockStyle">
      <summary>
            Stock style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockStyle.CandleStick">
      <summary>
            CandleStick.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockStyle.OptimizedCandleStick">
      <summary>
            Optimized CandleStick, only solid or left-to-right linear fill available.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.StockStyle.Bars">
      <summary>
            Bars.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceFillStyle">
      <summary>
            Surface series fill style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.None">
      <summary>
            No fill.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.FromSurfacePoints">
      <summary>
            Coloring is made from surface data point array colors.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.Toned">
      <summary>
            Single color tone applied over base color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.PalettedByY">
      <summary>
            Paletted by Y (height), various colors set by the palette, applied over base color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.PalettedByValue">
      <summary>
            Paletted by Value field, various colors set by the palette.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceFillStyle.Bitmap">
      <summary>
            Fill with bitmap.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceLegendBoxTitlePosition">
      <summary>
            3D surface legend box title position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceLegendBoxTitlePosition.Left">
      <summary>
            Left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceLegendBoxTitlePosition.Top">
      <summary>
            Top.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceOptimization">
      <summary>
            3D Surface performance optimization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceOptimization.DynamicData">
      <summary>
            Optimize surface to give better performance with data changing frequently. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceOptimization.StaticData">
      <summary>
            Optimize surface to give better performance with data that is not changed frequently. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfacePoint">
      <summary>
            3D Surface series data point. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SurfacePoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="value">Value.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SurfacePoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Color,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="value">Value.</param>
      <param name="color">Color of the point.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SurfacePoint.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="color">Color of the point.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SurfacePoint.#ctor(System.Double,System.Double,System.Double,System.Windows.Media.Color,System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <param name="color">Color of the point.</param>
      <param name="tag">Tag. Freely assignable object.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.Color">
      <summary>
            Color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SurfacePoint.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.Value">
      <summary>
            Value field.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.X">
      <summary>
            X-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.Y">
      <summary>
            Y-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfacePoint.Z">
      <summary>
            Z-coordinate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceRenderingOrder">
      <summary>
            Surface series rendering order.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceRenderingOrder.BeforePointLineSeries">
      <summary>
            Render before PointLineSeries.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceRenderingOrder.AfterPointLineSeries">
      <summary>
            Render after PointLineSeries.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceWireframeType">
      <summary>
            Surface series wireframe type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.None">
      <summary>
            No wireframe.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.Wireframe">
      <summary>
            Wireframe mesh, solid color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.WireframePalettedByValue">
      <summary>
            Wireframe mesh, paletted color by Value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.WireframeSourcePointColored">
      <summary>
            Source data point colored. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.Dots">
      <summary>
            Dots.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.DotsPaletted">
      <summary>
            Dots, paletted.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType.DotsSourcePointColored">
      <summary>
            Dots, source data point colored.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D">
      <summary>
            Surface series 3D wireframe type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.None">
      <summary>
            No wireframe.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.Wireframe">
      <summary>
            Wireframe mesh, solid color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.WireframePalettedByY">
      <summary>
            Wireframe mesh, paletted color by Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.WireframeSourcePointColored">
      <summary>
            Source data point colored. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.WireframePalettedByValue">
      <summary>
            Wireframe mesh, paletted color by Value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.Dots">
      <summary>
            Dots.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.DotsPalettedByY">
      <summary>
            Dots, paletted by Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.DotsSourcePointColored">
      <summary>
            Dots, source data point colored.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SurfaceWireframeType3D.DotsPalettedByValue">
      <summary>
            Dots, paletted by Value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SystemInfo">
      <summary>
            Contains information about the users system.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.AvailableRam">
      <summary>
            Available ram in the system.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.CultureInfo">
      <summary>
            System local culture information.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.FinalizationSurvivors">
      <summary>
            GC Finalization Survivors.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SystemInfo.GatherGCStats">
      <summary>
            Gathers gargabe collector statistics.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SystemInfo.GatherSystemInfo(System.Boolean)">
      <summary>
            Gathers system information.
            </summary>
      <param name="gatherGCStats">Sets whether GC information is collected. 
            Collection is really slow, can take even seconds, so shouldn't be collected on exceptions!</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.Gen0HeapSize">
      <summary>
            GC Gen 0 Heap Size.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.Gen1HeapSize">
      <summary>
            GC Gen 1 Heap Size.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.Gen2HeapSize">
      <summary>
            GC Gen 2 Heap Size.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.Is64bit">
      <summary>
            Is current system 64 bit.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.NetFrameworkVersion">
      <summary>
            .NET Framework version of the application
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.OS">
      <summary>
            Current operating system.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SystemInfo.ToString">
      <summary>
            Returns struct values as a string.
            </summary>
      <returns>Struct values as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SystemInfo.UsedRam">
      <summary>
            Amount of ram used by the process.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TargetCrossHair">
      <summary>
            3D annotation target crosshair style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetCrossHair.Auto">
      <summary>
            Show/hide automatically.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetCrossHair.On">
      <summary>
            Show always.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetCrossHair.Off">
      <summary>
            Don't show.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TargetImageFormat">
      <summary>
            Target image format. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Bmp">
      <summary>
            Windows bitmap, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Png">
      <summary>
            Portable network graphics, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Jpg">
      <summary>
            JPG, JPEG, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Tif">
      <summary>
            Tagged image format file, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Gif">
      <summary>
            Graphic interchange format, raster format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Emf">
      <summary>
            Enhanced metafile, vector format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Svg">
      <summary>
            Scalable vector grapics, vector format.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TargetImageFormat.Wmf">
      <summary>
            Windows metafile, vector format.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TextShadow">
      <summary>
            TextShadow class shows a shadow behind it's master text.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.TextShadow.ContrastColor">
      <summary>
            Gets or sets high-contrast shadow color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadow.ContrastColorProperty">
      <summary>
            Identifies the ContrastColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.TextShadow.DropColor">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadow.DropColorProperty">
      <summary>
            Identifies the DropColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.TextShadow.DropOffset">
      <summary>
            Gets or sets drop-shadow offset from the object. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadow.DropOffsetProperty">
      <summary>
            Identifies the DropOffset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.TextShadow.Style">
      <summary>
            Gets or sets text shadow style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadow.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TextShadow.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TextShadowStyle">
      <summary>
            Text shadow style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadowStyle.Off">
      <summary>
            No shadow.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadowStyle.DropShadow">
      <summary>
            Drop shadow with offset control.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextShadowStyle.HighContrast">
      <summary>
            High-contrast shading all around the text.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TextureWrapMode">
      <summary>
            Texture wrapping. Descriptions copied from MSDN: https://msdn.microsoft.com/en-us/library/windows/desktop/bb322814(v=vs.85).aspx
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextureWrapMode.Wrap">
      <summary>
            Tiles the texture at every integer junction. For example, for u values between 0 and 3, the texture is repeated three times. No mirroring is performed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextureWrapMode.Mirror">
      <summary>
            Similar to Wrap, except that the texture is flipped at every integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again, and so on.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextureWrapMode.Clamp">
      <summary>
            Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextureWrapMode.Border">
      <summary>
            Texture coordinates outside the range [0.0, 1.0] are set to the border color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TextureWrapMode.MirrorOnce">
      <summary>
            Similar to Mirror and Clamp. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value. The most common usage is for volume textures, where support for the full MirrorOnce texture-addressing mode is not necessary, but the data is symmetrical around the one axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TotalChartCountChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the TotalChartCountChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TotalChartCountChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TotalChartCountChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TotalChartCountChangedEventArgs.Count">
      <summary>
            The new total count of chart instances.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TransparencyRenderMode">
      <summary>
            Render mode for transpararent objects.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TransparencyRenderMode.Unordered">
      <summary>
            Render transparent object faces in the order they are created.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TransparencyRenderMode.ShaderApproximation">
      <summary>
            Use shader for transparency.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TransparencyRenderMode.OrderingTriangles">
      <summary>
            Order object face triangles in proper z-order. This would be slow on items with large count of faces.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Triggering">
      <summary>
            Triggered oscilloscope view options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Constructor
            </summary>
      <param name="axisX">X axis</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.Edge">
      <summary>
            Triggering edge
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.EdgeProperty">
      <summary>
            Identifies the Edge dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.SeekToTrigger(System.Double@)">
      <summary>
            Seek the trig position
            </summary>
      <param name="triggeredXPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>triggeredXPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Triggering.SeekToTrigger(System.Double@)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if seek position was found and X axis was shifted</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.StaticMajorXGridOptions">
      <summary>
            Major grid options for static X major grid
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.StaticMajorXGridOptionsProperty">
      <summary>
            Identifies the StaticMajorXGridOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.StaticMinorXGridOptions">
      <summary>
            Major grid options for static X minor grid
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.StaticMinorXGridOptionsProperty">
      <summary>
            Identifies the StaticMinorXGridOptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Triggering.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.TriggeringActive">
      <summary>
            Is triggering active
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.TriggeringActiveProperty">
      <summary>
            Identifies the TriggeringActive dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Triggering.TriggeringPositionChanged">
      <summary>
            The triggering position has been changed. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.TriggeringXPosition">
      <summary>
            Percents of graph width where the triggered position is drawn
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.TriggeringXPositionProperty">
      <summary>
            Identifies the TriggeringXPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.TriggerLevel">
      <summary>
            Trigger level in units of Y axis of triggering line series
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.TriggerLevelProperty">
      <summary>
            Identifies the TriggerLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.TriggerLineSeriesIndex">
      <summary>
            Index of series used for triggering. Give -1 when you don't want to assign it.
            </summary>
      <exception cref="T:System.Exception">Thrown if series index is invalid.</exception>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.TriggerLineSeriesIndexProperty">
      <summary>
            Identifies the TriggerLineSeriesIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Triggering.TriggerSeriesType">
      <summary>
            Triggering series type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Triggering.TriggerSeriesTypeProperty">
      <summary>
            Identifies the TriggerSeriesType dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Triggering.TrigPositionChangedHandler">
      <summary>
            Delegate for event OnTrigPosChanged
            </summary>
      <param name="trigPosFound">True if trigged, else false.</param>
      <param name="triggeredXPosition">Triggered x position</param>
      <param name="trigLevel">Triggering level that was used.</param>
      <param name="chart">Chart who raised the event</param>
      <param name="triggerSeries">Triggering series</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TriggeringEdge">
      <summary>
            Triggering edge direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringEdge.Raising">
      <summary>
            Raising edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringEdge.Falling">
      <summary>
            Falling edge.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TriggeringSeriesType">
      <summary>
            Triggering series type. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringSeriesType.PointLineSeries">
      <summary>
            A PointLineSeries is used for triggering. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringSeriesType.SampleDataSeries">
      <summary>
            A SampleDataSeries is used for triggering. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringSeriesType.SampleDataBlockSeries">
      <summary>
            A SampleDataBlockSeries is used for triggering. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringSeriesType.LiteLineSeries">
      <summary>
            A LiteLineSeries is used for triggering. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.TriggeringSeriesType.DigitalLineSeries">
      <summary>
            A DigitalLineSeries is used for triggering. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UiSettings">
      <summary>
            Base class for UI Settings. LC users see these objects as the usable objects handled in the LC. 
            In effect these only store the settings for the actually drawed objects, that inherit IBGListener interface and cache the drawing information. 
            This is part of a test to remove object sharing limitations from LC. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UiSettings.#ctor">
      <summary>
             constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UiSettings.CreateInstanceCore">
      <summary>
            Create instance.
            Dummy implementations, that always returns null. 
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UiSettings.Dispose">
      <summary>
            Disposes object. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UiSettings.Dispose(System.Boolean)">
      <summary>
             Internal dispose. Override this if you have anything to dispose or settings to reset. 
             Remember to call the base classes implementation. 
            </summary>
      <param name="disposing">true if called from Dispose, False if called from Finalizer. If false, do NOT touch any managed objects.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserFriendlyScaleCalcCondition">
      <summary>
            Friendly scale calculation conditions.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserFriendlyScaleCalcCondition.NearestBigger">
      <summary>
            Find nearest bigger
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserFriendlyScaleCalcCondition.Nearest">
      <summary>
            Find nearest
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserFriendlyScaleCalcCondition.NearestSmaller">
      <summary>
            Find nearest smaller
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton">
      <summary>
            Button related to user action. E.g. with mouse. Pen could have many buttons, touch not, which would be using None or Primary. Event would describe the action in touch case.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.None">
      <summary>
            No button related to event.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Primary">
      <summary>
            Primary button. Usually left with mouse.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Secondary">
      <summary>
            Secondary button. Usually right with mouse.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Tertiary">
      <summary>
            Tertiary button, not handled in chart so far, but could be given out.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Other1">
      <summary>
            Some other button, not handled in chart so far, but could be given out.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Other2">
      <summary>
            Some other button, not handled in chart so far, but could be given out.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.Barrel">
      <summary>
            Barrel button (from pen/stylys).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton.NotRecognized">
      <summary>
            Button was not recognized. Should not happen.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction">
      <summary>
            UserInteractiveObject action related to device button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction.Pan">
      <summary>
            Pan.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction.Zoom">
      <summary>
            Zoom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D">
      <summary>
            UserInteractiveObject action related to device button, for 3D view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.Pan">
      <summary>
            Pan.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.Rotate">
      <summary>
            Rotate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.PanPrimaryXZ">
      <summary>
            Pans the PrimaryX and PrimaryZ axis ranges.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.PanPrimaryXY">
      <summary>
            Pans the PrimaryX and PrimaryY axis ranges.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.PanPrimaryYZ">
      <summary>
            Pans the PrimaryY and PrimaryZ axis ranges.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomXY">
      <summary>
            Zoom on XY plane.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomXZ">
      <summary>
            Zoom on XZ plane.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomYZ">
      <summary>
            Zoom on YZ plane.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomX">
      <summary>
            Zoom on X-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomY">
      <summary>
            Zoom on Y-axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3D.ZoomZ">
      <summary>
            Zoom on Z-axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3DPie">
      <summary>
            UserInteractiveObject action related to device button, for 3D Pie.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3DPie.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3DPie.Pan">
      <summary>
            Pan.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonAction3DPie.Rotate">
      <summary>
            Rotate.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState">
      <summary>
            State related to user interactive device button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState.Pressed">
      <summary>
            Button was/is pressed down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState.Released">
      <summary>
            Button was/is released.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs">
      <summary>
            Mouse/Pointer/Touch/Pen/input device related event arguments. Position is pixels.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="buttonsState">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buttonsState</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="position">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>position</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="delta">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delta</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="pointerId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pointerId</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="handled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.ButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Double,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.UInt32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)">
      <summary>
            Constructor.
            </summary>
      <param name="button">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>button</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)</parameter>
          </include>
        </markup>
      </param>
      <param name="state">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>state</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)</parameter>
          </include>
        </markup>
      </param>
      <param name="point">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)</parameter>
          </include>
        </markup>
      </param>
      <param name="delta">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delta</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.#ctor(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButtonState,Arction.Wpf.ChartingMVVM.CoordXY,System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.ButtonsState">
      <summary>
            Buttons with states. Buttons are enumerated as flagged.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.Delta">
      <summary>
            Wheel related value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.EventType">
      <summary>
            Event type.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.Handled">
      <summary>
            Event handled status.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.IsButtonPressed(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton)">
      <summary>
            Check if given button is pressed.
            </summary>
      <param name="button">Button to check.</param>
      <returns>True, if is pressed, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.IsButtonReleased(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceButton)">
      <summary>
            Check if given button is released.
            </summary>
      <param name="button">Button to check.</param>
      <returns>True, if is released, false otherwise.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.PointerId">
      <summary>
            Pointer Id. Mainly used with UWP.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.Position">
      <summary>
            Position in pixel coordinates.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.ToString">
      <summary>
            Return button state and event type as string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType">
      <summary>
            User interactive device event types.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.ButtonDown">
      <summary>
            Button has been pressed down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.Moved">
      <summary>
            Device has been moved.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.ButtonUp">
      <summary>
            Button has been released.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.ButtonClicked">
      <summary>
            Button has been pressed down and released.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.ButtonDoubleClicked">
      <summary>
            Button has been clicked twice.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType.WheelScrolled">
      <summary>
            Wheel was scrolled.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveObject">
      <summary>
            User interaction base class, handles basic user interactions on some chart object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.UserInteractiveObject.AllowUserInteraction">
      <summary>
            Gets or sets if user interaction is allowed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.AllowUserInteractionProperty">
      <summary>
            Identifies the AllowUserInteraction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.HandleNotOver">
      <summary>
            Handle event when not over.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.HandleOver">
      <summary>
            Handle when over.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonClickEvent">
      <summary>
            Invoke ButtonClick event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonClickEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonDoubleClickEvent">
      <summary>
            Invoke ButtonDoubleClick event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonDoubleClickEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonDownEvent">
      <summary>
            Invoke ButtonDown event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonDownEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonUpEvent">
      <summary>
            Invoke ButtonUp event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeButtonUpEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeOverOffEvent">
      <summary>
            Invoke OverOff event.
            </summary>
      <returns>true if event was delivered. See LightningChart.RaiseEvent method for more information. Return value of that is used.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InvokeOverOnEvent">
      <summary>
            Invoke OverOn event.
            </summary>
      <returns>true if event was delivered. See LightningChart.RaiseEvent method for more information. Return value of that is used.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Defines if position is over an item.
            </summary>
      <param name="x">x-coordinate.</param>
      <param name="y">y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.m_iLastMouseX">
      <summary>
            Last mouse x-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.m_iLastMouseY">
      <summary>
            Last mouse y-coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.m_iMouseX">
      <summary>
            Current mouse x-coordinate as PX.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.m_iMouseY">
      <summary>
            Current mouse y-coordinate as PX.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.m_userInteractiveDeviceEventType">
      <summary>
            User interactive device event type.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseClick">
      <summary>
            Mouse button has been clicked.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseDoubleClick">
      <summary>
            Mouse button has been doubleclicked.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseDown">
      <summary>
            Mouse button has been pressed down.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseOverOff">
      <summary>
            Mouse has been moved outside of object.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseOverOn">
      <summary>
            Mouse has been moved over object.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.UserInteractiveObject.MouseUp">
      <summary>
            Mouse button has been released.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.SetChartCursor(System.Windows.Input.Cursor)">
      <summary>
            Set chart cursor.
            </summary>
      <param name="cursor">Cursor</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.SetProperCursor">
      <summary>
            Set proper drag cursor. Default is hand.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObject.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState">
      <summary>
            Interaction state.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Idle">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.IdleOver">
      <summary>
            No action, user interactive device is over.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Selecting">
      <summary>
            Primary user interactive device button down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Selected">
      <summary>
            Clicked once with primary user interactive device button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Open">
      <summary>
            Clicked twice with primary user interactive device button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Drag">
      <summary>
            Selecting (primary user interactive device button down) and then moving enough.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.ContextMenuSelecting">
      <summary>
            Secondary user interactive device button down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.ContextMenuSelected">
      <summary>
            Secondary user interactive device button clicked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.ContextMenuOpen">
      <summary>
            Secondary user interactive device button double clicked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.ContextMenuRelease">
      <summary>
            Secondary user interactive device button up.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Resize">
      <summary>
            Clicked on border or like.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Release">
      <summary>
            Released primary interactive device button.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.Rotate">
      <summary>
            Rotate item.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.OtherUserInteractiveDeviceButtonSelecting">
      <summary>
            Other user interactive device button down.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.OtherUserInteractiveDeviceButtonSelected">
      <summary>
            Other user interactive device button clicked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.OtherUserInteractiveDeviceButtonOpen">
      <summary>
            Other user interactive device button double clicked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObject.InteractionState.OtherUserInteractiveDeviceButtonRelease">
      <summary>
            Other user interactive device button up.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt">
      <summary>
            UserInteractiveObjectInt contains interactive item. Internal use only.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceFreezable</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt.ClonePrivates(System.Windows.Freezable)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.UserInteractiveObjectInt.Tag">
      <summary>
            Tag. Freely assignable object.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WallGridStripXY">
      <summary>
            Grid bands in between major grid lines.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXY.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXY.X">
      <summary>
            X.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXY.Y">
      <summary>
            Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXY.Both">
      <summary>
            Both.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WallGridStripXZ">
      <summary>
            Grid bands in between major grid lines.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXZ.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXZ.X">
      <summary>
            X.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXZ.Z">
      <summary>
            Z.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripXZ.Both">
      <summary>
            Both.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WallGridStripYZ">
      <summary>
            Grid bands in between major grid lines.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripYZ.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripYZ.Y">
      <summary>
            Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripYZ.Z">
      <summary>
            Z.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallGridStripYZ.Both">
      <summary>
            Both.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WallType">
      <summary>
            Wall type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Left">
      <summary>
            Left wall.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Right">
      <summary>
            Right wall.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Back">
      <summary>
            Back wall.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Front">
      <summary>
            Front wall.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Top">
      <summary>
            Top wall.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WallType.Bottom">
      <summary>
            Bottom wall.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ValueRangePalette">
      <summary>
            Value range palette. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="ownerSeries">Owner series</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.CreateDefaultSteps">
      <summary>
            Create steps
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueRangePalette.CreateDefaultSteps</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ValueRangePalette.FormatStepValueText">
      <summary>
            Format PaletteStep Value text event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.GetColorByValue(System.Double,System.Windows.Media.Color@)">
      <summary>
            Calculate color corresponding the given value, with the value-range palette defined. 
            </summary>
      <param name="value">Value.</param>
      <param name="color">Color.</param>
      <returns>Color by value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.ItemListChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Render chart if item list changed.
            </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueRangePalette.ItemListChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueRangePalette.ItemListChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueRangePalette.MinValue">
      <summary>
            Gets or sets step minimum value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ValueRangePalette.MinValueProperty">
      <summary>
            Identifies the MinValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueRangePalette.ShowMinValueLegendLabel">
      <summary>
            Show minimum palette step labels.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ValueRangePalette.ShowMinValueLegendLabelProperty">
      <summary>
            Identifies the ShowMinValueLegendLabel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueRangePalette.Steps">
      <summary>
            Gets or sets palette steps. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ValueRangePalette.StepsProperty">
      <summary>
            Identifies the Steps dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueRangePalette.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueRangePalette.Type">
      <summary>
            Gets or sets palette coloring type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ValueRangePalette.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ValueRangePalette.FormatStepValueTextHandler">
      <summary>
            Delegate for FormatStepValueText event.
            </summary>
      <param name="sender">Event sender.</param>
      <param name="step">Step value.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1">
      <summary>
            Represents a collection of ValueType objects.
            See https://www.codeproject.com/Articles/1004644/ObservableCollection-Simply-Explained
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="collection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>collection</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="list">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.#ctor(System.Collections.Generic.List{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.AddRange(System.Collections.Generic.IList{`0})">
      <summary>
            Add range
            </summary>
      <param name="points">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>points</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.AddRange(System.Collections.Generic.IList{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.Item(System.Int32)">
      <summary>
            Type Int32
            </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.Item(System.Int64)">
      <summary>
            Type Int64
            </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.RemoveAllBefore(System.Int32)">
      <summary>
            Remove all before index
            </summary>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.RemoveAllBefore(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.RemoveRange(System.Int32,System.Int32)">
      <summary>
            Remove Range
            </summary>
      <param name="startIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startIndex</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.RemoveRange(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="count">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>count</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.ValueTypeCollection`1.RemoveRange(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WaterfallContourLineType">
      <summary>
            Waterfall series contour line type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallContourLineType.None">
      <summary>
            No contour line.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallContourLineType.FastColorZones">
      <summary>
            Performance optimized thin zone at palette step edge. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallContourLineType.FastPalettedZones">
      <summary>
            Performance optimized thin zone at palette step edge, various colors set by the palette. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WaterfallWireframeType">
      <summary>
            Waterfall series wireframe type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallWireframeType.None">
      <summary>
            No wireframe.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallWireframeType.Wireframe">
      <summary>
            Wireframe mesh, solid color.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallWireframeType.WireframeSourcePointColored">
      <summary>
            Wireframe, source data point colored.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallWireframeType.WireframePalettedByY">
      <summary>
            Wireframe mesh, paletted color by Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WaterfallWireframeType.WireframePalettedByValue">
      <summary>
            Wireframe mesh, paletted color by Value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.VerticalDirection">
      <summary>
            Vertical direction.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalDirection.Up">
      <summary>
            Up.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalDirection.Center">
      <summary>
            Center (no direction).  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalDirection.Down">
      <summary>
            Down.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.VerticalScrollBar">
      <summary>
            Represents a vertical scroll bar control. Values use unsigned 64-bit integer value range.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.#ctor">
      <summary>
            Creates and initializes a new instance of VerticalScrollBar class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Creates and initializes a new instance of VerticalScrollBar class.
            </summary>
      <param name="owner">The chart that owns this scroll bar.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.VerticalScrollBar.Alignment">
      <summary>
            Alignment. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when alignment is changed
            </summary>
      <param name="d">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>d</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.AlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalScrollBar.AlignmentProperty">
      <summary>
            Alignment property
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.VerticalScrollBar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.VerticalScrollBarAlignment">
      <summary>
            Vertical scroll bar alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalScrollBarAlignment.None">
      <summary>
            No alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalScrollBarAlignment.RightToGraph">
      <summary>
            Scrollbar is vertically aligned to the right of the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalScrollBarAlignment.GraphCenter">
      <summary>
            Scrollbar is vertically aligned to the center of the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.VerticalScrollBarAlignment.LeftToGraph">
      <summary>
            Scrollbar is vertically aligned to the left of the graph area.
            Left edge is positioned to graph left edge, and right edge is positioned to graph right edge
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.VerticalScrollBarCollection">
      <summary>
            Represents a collection of VerticalScrollBar objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.VerticalScrollBarCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WheelZooming">
      <summary>
            Wheel zooming.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WheelZooming.Off">
      <summary>
            Wheel zoom is disabled 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WheelZooming.Horizontal">
      <summary>
            Horizontal zoom only, applies X-axes. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WheelZooming.Vertical">
      <summary>
            Vertical zoom only, applies Y-axes
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WheelZooming.HorizontalAndVertical">
      <summary>
            Zoom in horizontal and vertical direction, applies X and Y-axes
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ViewAspectRatio">
      <summary>
            Aspect ratio.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ViewAspectRatio.Off">
      <summary>
            Adjust axis range manually.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ViewAspectRatio.Manual">
      <summary>
            Set aspect ratio manually.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ViewAspectRatio.AutoLatitude">
      <summary>
            Calculate aspect ratio based on view center latitude. Applicable only, when map is used.
            Y-axis center point defines the latitude, proper XY aspect ratio is calculated based in it and X-axis width is modified accordingly. 
            This simulates the projection so that width of objects in the center of the screen are approximately of correct aspect ratio. 
            The estimation can produce bad output on large scale and large center latitude values. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WorkAroundWarpException">
      <summary>
            Work around warp class
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Work Around Warp Exception
            </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.String)">
      <summary>
            Work Around Warp Exception
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.String,System.Exception)">
      <summary>
            Work Around Warp Exception
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WorkAroundWarpException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WpfFont">
      <summary>
            WPF font. Converts WPF font to WinForms font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="size">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.Font)">
      <summary>
            Constructor.
            </summary>
      <param name="font">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>font</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.Font)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.FontFamily,System.Double,System.Drawing.FontStyle)">
      <summary>
            Constructor.
            </summary>
      <param name="family">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>family</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.FontFamily,System.Double,System.Drawing.FontStyle)</parameter>
          </include>
        </markup>
      </param>
      <param name="emSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emSize</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.FontFamily,System.Double,System.Drawing.FontStyle)</parameter>
          </include>
        </markup>
      </param>
      <param name="fontStyle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fontStyle</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.Drawing.FontFamily,System.Double,System.Drawing.FontStyle)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="fontFamily">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fontFamily</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.String,System.Double)">
      <summary>
            Constructor.
            </summary>
      <param name="family">Font family</param>
      <param name="size">Size as wpf units</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.String,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="family">Font family</param>
      <param name="size">Size as wpf units</param>
      <param name="bold">Bold</param>
      <param name="italics">Italics</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.#ctor(System.String,System.Double,System.String,System.Boolean,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="family">Font family</param>
      <param name="size">Size as wpf units</param>
      <param name="strSize">Size string to be saved in serialization</param>
      <param name="bold">Bold</param>
      <param name="italics">Italics</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.WpfFont.Bold">
      <summary>
            Gets or sets bold. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.BoldProperty">
      <summary>
            Identifies the Bold dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.WpfFont.Family">
      <summary>
            Gets or sets font family. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.FamilyProperty">
      <summary>
            Identifies the Family dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.WpfFont.Italic">
      <summary>
            Gets or sets italic. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.ItalicProperty">
      <summary>
            Identifies the Italic dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.WpfFont.Size">
      <summary>
            Gets or sets font size in inch/96 units (DIP). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.WpfFont.ToString">
      <summary>
            Convert to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.WpfFont.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap">
      <summary>
            Capslock device enumerators
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.DRIVERVERSION">
      <summary>
            Device driver version
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.TECHNOLOGY">
      <summary>
            Device classification
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.HORZSIZE">
      <summary>
            Horizontal size in millimeters
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.VERTSIZE">
      <summary>
            Vertical size in millimeters
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.HORZRES">
      <summary>
            Horizontal width in pixels
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.VERTRES">
      <summary>
            Vertical height in pixels
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.BITSPIXEL">
      <summary>
            Number of bits per pixel
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PLANES">
      <summary>
            Number of planes
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMBRUSHES">
      <summary>
            Number of brushes the device has
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMPENS">
      <summary>
            Number of pens the device has
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMMARKERS">
      <summary>
            Number of markers the device has
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMFONTS">
      <summary>
            Number of fonts the device has
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMCOLORS">
      <summary>
            Number of colors the device supports
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PDEVICESIZE">
      <summary>
            Size required for device descriptor
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.CURVECAPS">
      <summary>
            Curve capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.LINECAPS">
      <summary>
            Line capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.POLYGONALCAPS">
      <summary>
            Polygonal capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.TEXTCAPS">
      <summary>
            Text capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.CLIPCAPS">
      <summary>
            Clipping capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.RASTERCAPS">
      <summary>
            Bitblt capabilities
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.ASPECTX">
      <summary>
            Length of the X leg
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.ASPECTY">
      <summary>
            Length of the Y leg
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.ASPECTXY">
      <summary>
            Length of the hypotenuse
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.SHADEBLENDCAPS">
      <summary>
            Shading and Blending caps
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.LOGPIXELSX">
      <summary>
            Logical pixels inch in X
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.LOGPIXELSY">
      <summary>
            Logical pixels inch in Y
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.SIZEPALETTE">
      <summary>
            Number of entries in physical palette
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.NUMRESERVED">
      <summary>
            Number of reserved entries in palette
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.COLORRES">
      <summary>
            Actual color resolution
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PHYSICALWIDTH">
      <summary>
            Physical Width in device units
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PHYSICALHEIGHT">
      <summary>
            Physical Height in device units
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PHYSICALOFFSETX">
      <summary>
            Physical Printable Area x margin
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.PHYSICALOFFSETY">
      <summary>
            Physical Printable Area y margin
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.SCALINGFACTORX">
      <summary>
            Scaling factor x
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.SCALINGFACTORY">
      <summary>
            Scaling factor y
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.VREFRESH">
      <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.DESKTOPVERTRES">
      <summary>
            Vertical height of entire desktop in pixels
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.DESKTOPHORZRES">
      <summary>
            Horizontal width of entire desktop in pixels
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.WpfFont.DeviceCap.BLTALIGNMENT">
      <summary>
            Preferred blt alignment
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement">
      <summary>
            X-axis auto placement locations related to chart draw area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.Off">
      <summary>
            Use default location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.AllBottom">
      <summary>
            All axis to bottom.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.AllTop">
      <summary>
            All axis to top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.BottomThenTop">
      <summary>
            First axis to bottom, next top, etc.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.TopThenBottom">
      <summary>
            First axis to top, next bottom, etc.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisAutoPlacement.Explicit">
      <summary>
            Axis is put on top or bottom depending on axis ExplicitAutoPlacementSide value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XAxisExplicitAutoPlacementSide">
      <summary>
            X-axis explicit automatic location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisExplicitAutoPlacementSide.Top">
      <summary>
            Draw axis on the top of graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisExplicitAutoPlacementSide.Bottom">
      <summary>
            Draw axis on the bottom of graph.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XAxisScrollMode">
      <summary>
            Scrolling types.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisScrollMode.None">
      <summary>
            X-axis is not automatically scrolled. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisScrollMode.Scrolling">
      <summary>
            X-axis will be scrolled when scroll position approaches end of the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisScrollMode.Stepping">
      <summary>
            Steps the view with Step when scroll position reaches end of the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisScrollMode.Sweeping">
      <summary>
            Previous trace will be left in the background and new trace will be swept over it. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisScrollMode.Triggering">
      <summary>
            The X-axis minimum and maximum are set by detected level trigging position.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentHorizontal">
      <summary>
            Horizontal alignment of X-axis title.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentHorizontal.Left">
      <summary>
            Align left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentHorizontal.Center">
      <summary>
            Align center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentHorizontal.Right">
      <summary>
            Align right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentHorizontal.ToValue">
      <summary>
            Center to axis value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentVertical">
      <summary>
            Vertical alignment of X-axis title.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentVertical.Top">
      <summary>
            Align top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentVertical.Center">
      <summary>
            Align center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XAxisTitleAlignmentVertical.Bottom">
      <summary>
            Align bottom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.XYAxisGridStrips">
      <summary>
            Grid bands in between major grid lines
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XYAxisGridStrips.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XYAxisGridStrips.X">
      <summary>
            X.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XYAxisGridStrips.Y">
      <summary>
            Y.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.XYAxisGridStrips.Both">
      <summary>
            Both.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxesLayout">
      <summary>
            Y-axis arrangement mode, when there's several Y-axes defined.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxesLayout.Stacked">
      <summary>
            Stack Y-axes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxesLayout.Layered">
      <summary>
            Layered Y axes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxesLayout.Segmented">
      <summary>
            Segmented Y axes.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement">
      <summary>
            Y-axis auto placement locations related to chart draw area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.Off">
      <summary>
            Use default location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.AllLeft">
      <summary>
            All axis to left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.AllRight">
      <summary>
            All axis to right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.LeftThenRight">
      <summary>
            First axis to left, next right, etc.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.RightThenLeft">
      <summary>
            First axis to right next left, etc.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisAutoPlacement.Explicit">
      <summary>
            Axis is put on left or right depending on axis ExplicitAutoPlacementSide value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxisExplicitAutoPlacementSide">
      <summary>
            Y-axis explicit automatic location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisExplicitAutoPlacementSide.Left">
      <summary>
            Draw axis on the left side of graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisExplicitAutoPlacementSide.Right">
      <summary>
            Draw axis on the right side of graph.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxisPosition">
      <summary>
            Y-axis position.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisPosition.Left">
      <summary>
            Left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisPosition.Right">
      <summary>
            Right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentHorizontal">
      <summary>
            Horizontal alignment of Y-axis title.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentHorizontal.Left">
      <summary>
            Align left. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentHorizontal.Center">
      <summary>
            Align center. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentHorizontal.Right">
      <summary>
            Align right.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentVertical">
      <summary>
            Vertical alignment of Y-axis title.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentVertical.Top">
      <summary>
            Align top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentVertical.Center">
      <summary>
            Align center.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentVertical.Bottom">
      <summary>
            Align bottom.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.YAxisTitleAlignmentVertical.ToValue">
      <summary>
            Center to axis value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ZoomArea3D">
      <summary>
            Zoom area options for View3D and ViewPie3D
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ZoomArea3D.DataAndLabelsArea">
      <summary>
            Zoom to fit all data and LabelsArea (the graph) to area limited by margins and <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPadding" />. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ZoomAreaRound">
      <summary>
            Zoom area options for polar and smith charts.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ZoomAreaRound.Data">
      <summary>
            Zoom to show all data, does not take graph or labels into account.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ZoomAreaRound.LabelsArea">
      <summary>
            Zooming based on LabelsArea, showing the graph and the labels, ignores data outside the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.ZoomAreaRound.DefaultSettings">
      <summary>
            Zooming based on the default zoom and centering settings, returns the initial zoom level.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the AnchorAdjustedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AnchorAdjustedByUserEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs.Annotation">
      <summary>
            The annotation whose anchor was adjusted by user interactive device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs.NewAnchor">
      <summary>
            New anchor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnchorAdjustedByUserEventArgs.OldAnchor">
      <summary>
            Old anchor.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D">
      <summary>
            Annotation for 3D views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis binding.</param>
      <param name="yAxis">Y-axis binding.</param>
      <param name="zAxis">Z-axis binding.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.AdjustLocationAxisValueByUser(System.Int32)">
      <summary>
            Adjust location axis value when user moved.
            </summary>
      <param name="sweepPageIndex">sweep page index</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.ApplyWheelChangeOnTarget">
      <summary>
            Apply wheel change on target point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.Dispose(System.Boolean)">
      <summary>
            Dispose Annotation3D.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.Annotations.Annotation3D</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.HandleUserOverResizeNib">
      <summary>
            Handle over resize nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.HandleWheelStateChanged(System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)">
      <summary>
            User interactive device wheel state changed. Update Z of target.
            </summary>
      <param name="change">wheel change</param>
      <param name="eventType">event type</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.LocationAxisValues">
      <summary>
            Gets and sets location as axis values. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.LocationAxisValuesChangedByUser">
      <summary>
            Location axis value coordinates have been changed by user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.LocationAxisValuesProperty">
      <summary>
            Identifies the LocationAxisValues dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user.
            </summary>
      <param name="x">User device X coordinate</param>
      <param name="y">User device Y coordinate</param>
      <param name="vDownLocationFromTargetRenderCenter">Rendering location on device button down. Not used in 3D.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.OwnerView">
      <summary>
            Owner view. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.ResetWheelState">
      <summary>
            Reset wheel value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.UpdateAxesFromOwner">
      <summary>
            Updated axes from owner view.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.XAxisBinding">
      <summary>
            Gets and sets X-axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.YAxisBinding">
      <summary>
            Gets and sets Y-axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.ZAxisBinding">
      <summary>
            Gets and sets Z-axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3D.LocationAxisValuesChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationAxisValuesChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the LocationAxisValuesChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase">
      <summary>
            Annotation base class for 3D views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.AdjustSelectedAnnotationTargetZ(System.Int32)">
      <summary>
            Adjust target Z-value.
            </summary>
      <param name="change">Change value in world coordinates.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.ApplyWheelChangeOnTarget">
      <summary>
            Apply wheel change on target point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.HandleUserOverResizeNib">
      <summary>
            Handle over resize nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.HandleUserOverTargetNib">
      <summary>
            Handle over target nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.MoveValueLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move value location by user.
            </summary>
      <param name="x">User interactive device x coordinate</param>
      <param name="y">User interactive device y coordinate</param>
      <param name="pnRenderLocationCoordOnMouseDown">render location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.ResizedByUser">
      <summary>
            Annotation has been resized by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.ShowTargetCrosshair">
      <summary>
            Gets and sets target location crosshair. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.ShowTargetCrosshairProperty">
      <summary>
            Identifies the ShowTargetCrosshair dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.Sizing">
      <summary>
            Gets and sets annotation sizing type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.SizingProperty">
      <summary>
            Identifies the Sizing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetAxisValues">
      <summary>
            Gets and sets target axis values. Target is the point that the arrow or callout tip points to. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetAxisValuesProperty">
      <summary>
            Identifies the TargetAxisValues dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetChangedByUser">
      <summary>
            Target has been changed by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetCrosshairLineStyle">
      <summary>
            Gets and sets target location crosshair. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetCrosshairLineStyleProperty">
      <summary>
            Identifies the TargetCrosshairLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.WheelChangeStep">
      <summary>
            Gets and sets wheel change step. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.WheelChangeStepProperty">
      <summary>
            Identifies the WheelChangeStep dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.ResizedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the ResizedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the ResizedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DBase.TargetChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the TargetChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the TargetChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie">
      <summary>
            Annotation for 3DPie view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.ApplyWheelChangeOnTarget">
      <summary>
            Apply wheel change on target point.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.HandleWheelStateChanged(System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)">
      <summary>
            Mouse wheel state changed. Update Z of target.
            </summary>
      <param name="change">wheel change value</param>
      <param name="eventType">mouse event type</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.LocationCoordinateSystem">
      <summary>
            Gets or sets location coordinate system. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.LocationCoordinateSystemProperty">
      <summary>
            Identifies the LocationCoordinateSystem dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user interactive device.
            </summary>
      <param name="x">x coordinate</param>
      <param name="y">y coordinate</param>
      <param name="vButtonDownFromTargetRenderCenter">render location on button down</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.Annotation3DPie.OwnerView">
      <summary>
            Gets owner view.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase">
      <summary>
            Annotations base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AdjustLocationAxisValueByUser(System.Int32)">
      <summary>
            Adjust location axis value when user interactive device moved.
            </summary>
      <param name="sweepPageIndex">sweep page index</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowAnchorAdjustProperty">
      <summary>
            Identifies the AllowAnchorAdjust dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowResize">
      <summary>
            Gets or sets if allows resizing by user. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowRotate">
      <summary>
            Gets or sets if rotation is allowed by user. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowRotateProperty">
      <summary>
            Identifies the AllowRotate dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowTargetMove">
      <summary>
            Gets or sets if allows target move by user. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AllowTargetMoveProperty">
      <summary>
            Identifies the AllowTargetMove dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Anchor">
      <summary>
            Gets or sets anchor. This is a dependency property. Rotation uses this point as a center point. Tells 
            where to place the anchored point within the control area. 
            For X-dimension, value 0 represents left coordinate of the object and 1 right coordinate.
            For Y-dimension, value 0 represents top coordinate of the object and 1 bottom coordinate.
            To define anchor point outside the object area, define values outside range 0...1.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AnchorAdjustByUser">
      <summary>
            Gets or sets if allows anchor move by user. Anchor is centerpoint of rotation and start point of arrow. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AnchorAdjustedByUser">
      <summary>
            Anchor has been adjusted by user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AnchorProperty">
      <summary>
            Identifies the Anchor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowEndAspectRatio">
      <summary>
            Gets or sets arrow end aspect ratio (width / height). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowEndAspectRatioProperty">
      <summary>
            Identifies the ArrowEndAspectRatio dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowLineStyle">
      <summary>
            Gets or sets arrow line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowLineStyleProperty">
      <summary>
            Identifies the ArrowLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowStyleBegin">
      <summary>
            Gets or sets lead arrow style, in the beginning of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowStyleBeginProperty">
      <summary>
            Identifies the ArrowStyleBegin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowStyleEnd">
      <summary>
            Gets or sets lead arrow style, in Target location. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ArrowStyleEndProperty">
      <summary>
            Identifies the ArrowStyleEnd dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AutoSizePadding">
      <summary>
            Gets or sets padding between text and borders when automatic size is used. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AutoSizePaddingProperty">
      <summary>
            Identifies the AutoSizePadding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.BorderLineStyle">
      <summary>
            Gets or sets border line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.BorderLineStyleProperty">
      <summary>
            Identifies the BorderLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.BorderVisible">
      <summary>
            Gets or sets if border is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.BorderVisibleProperty">
      <summary>
            Identifies the BorderVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ChangeOrder(Arction.Wpf.ChartingMVVM.OrderChangeAction)">
      <summary>
            Change object position in list of annotations. 
            </summary>
      <param name="action">Order change action.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.CornerRoundRadius">
      <summary>
            Gets or sets corner rounding radius, in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.CornerRoundRadiusProperty">
      <summary>
            Identifies the CornerRoundRadius dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.DetectPositionOverSweepPageIndex(System.Int32)">
      <summary>
            Detect sweep page at position.
            </summary>
      <param name="x">x coordinate</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.DetectPositionOverSweepPageIndex(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.HandleUserOverResizeNib">
      <summary>
            Handle user over resize nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.HandleUserOverTargetNib">
      <summary>
            Handle user over target nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.HandleWheelStateChanged(System.Int32,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType)">
      <summary>
            Wheel state changed.
            </summary>
      <param name="change">wheel change value</param>
      <param name="eventType">event type</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over Annotation.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LayerGrouping">
      <summary>
            Gets or sets if text is rendered on layers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LayerGroupingProperty">
      <summary>
            Identifies the LayerGrouping dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationCoordinateSystem">
      <summary>
            Gets or sets location coordinate system. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationCoordinateSystemProperty">
      <summary>
            Identifies the LocationCoordinateSystem dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationRelativeOffset">
      <summary>
            Gets or sets location offset in pixels, relative to location. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationRelativeOffsetChangedByUser">
      <summary>
            Location relative screen coordinate offset has been changed by user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationRelativeOffsetProperty">
      <summary>
            Identifies the LocationRelativeOffset dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationScreenCoordinatesChangedByUser">
      <summary>
            Location screen coordinates have been changed by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationScreenCoords">
      <summary>
            Gets or sets location as screen coordinates in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationScreenCoordsProperty">
      <summary>
            Identifies the LocationScreenCoords dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.m_pnRenderBoxCenter0">
      <summary>
            Render box center for 1st sweep page.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.m_pnRenderBoxCenter1">
      <summary>
            Render box center for 2nd sweep page.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user.
            </summary>
      <param name="x">x coordinate</param>
      <param name="y">y coordinate</param>
      <param name="buttonDownFromTargetRenderCenter">render location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.MoveValueLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move value location by user.
            </summary>
      <param name="x">x coordinate</param>
      <param name="y">y coordinate</param>
      <param name="pnRenderLocationCoordOnButtonDown">render location on button down</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.NibStyle">
      <summary>
            Gets and sets nib style. Appearance of the user-interactive nibs. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.NibStyleProperty">
      <summary>
            Identifies the NibStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ResetWheelState">
      <summary>
            Reset wheel value.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.RotateAngle">
      <summary>
            Gets or sets rotation angle, in degrees. The rotation is done around the element's center of rotation. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.RotateAngleProperty">
      <summary>
            Identifies the RotateAngle dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.RotatedByUser">
      <summary>
            Annotation has been rotated by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Selected">
      <summary>
            Gets or sets if annotation is in 'Selected' state, allowing resizing, rotating and anchor adjustment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.SelectedProperty">
      <summary>
            Identifies the Selected dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.SetProperCursor">
      <summary>
            Set proper cursor. Default for dragging is hand and for resize SizeAll.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Shadow">
      <summary>
            Gets or sets shadow beneath the object. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ShadowProperty">
      <summary>
            Identifies the Shadow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.SizeScreenCoords">
      <summary>
            Gets or sets size as screen coordinates. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.SizeScreenCoordsProperty">
      <summary>
            Identifies the SizeScreenCoords dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Style">
      <summary>
            Gets and sets style of the main layout of annotation. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TargetCoordinateSystem">
      <summary>
            Gets or sets target coordinate system. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TargetCoordinateSystemProperty">
      <summary>
            Identifies the TargetCoordinateSystem dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TargetScreenCoords">
      <summary>
            Gets or sets screen coordinates. Target is the point that the arrow or callout tip points to. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TargetScreenCoordsProperty">
      <summary>
            Identifies the TargetCoordinateSystem dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Text">
      <summary>
            Gets or sets annotation text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TextProperty">
      <summary>
            Identifies the Text dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TextStyle">
      <summary>
            Gets or sets text style. Appearance of the text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.TextStyleProperty">
      <summary>
            Identifies the TextStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.ToString">
      <summary>
            Description of class.
            </summary>
      <returns>Description.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.Visible">
      <summary>
            Gets and sets annotation visible state. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.AnchorAdjustedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the AnchorAdjustedByUser event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the AnchorAdjustedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationRelativeOffsetChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationRelativeOffsetChangedByUser event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the LocationRelativeOffsetChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.LocationScreenCoordinatesChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationScreenCoordinatesChangedByUser event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the LocationScreenCoordinatesChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase.RotatedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the RotatedByUser event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the RotatedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle">
      <summary>
            Annotation nib style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.Alpha">
      <summary>
            Gets or sets nib color alpha. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.AlphaProperty">
      <summary>
            Identifies the Alpha dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.Color">
      <summary>
            Gets or sets nib color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.SizeFactor">
      <summary>
            Gets or sets size factor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.SizeFactorProperty">
      <summary>
            Identifies the SizeFactor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationNibStyle.ToString">
      <summary>
            Converts class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar">
      <summary>
            Annotation for ViewPolar.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.#ctor">
      <summary>
            Constructor for property grid editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axis">Polar axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.AdjustLocationAxisValueByUser(System.Int32)">
      <summary>
            Adjust location axis value when user interactive device moved.
            </summary>
      <param name="sweepPageIndex">sweep page index</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.AssignPolarAxisIndex">
      <summary>
            Gets or sets index of Polar axis assigned to this Annotation. Give -1 when you don't want to assign it yet to any Polar axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.AssignPolarAxisIndexProperty">
      <summary>
            Identifies the AssignPolarAxisIndex dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.HandleUserOverResizeNib">
      <summary>
            Handle mouse over resize nib.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.LocationAxisValues">
      <summary>
            Gets or sets location axis values. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.LocationAxisValuesChangedByUser">
      <summary>
            Location axis values coordinates have been changed by user
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.LocationAxisValuesProperty">
      <summary>
            Identifies the LocationAxisValues dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">X coordinate</param>
      <param name="vButtonDownFromTargetRenderCenter">Rendering location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.MoveValueLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move value location.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">X coordinate</param>
      <param name="pnRenderLocationCoordOnButtonDown">Rendering location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
             Sets the annotation location to axis values that match the given 
             screen coordinates.
            </summary>
      <param name="Coords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Coords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.TargetAxisValues">
      <summary>
            Gets or sets target axis values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.TargetAxisValuesProperty">
      <summary>
            Identifies the TargetAxisValues dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.TargetChangedByUser">
      <summary>
            Target has been changed by user
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.LocationAxisValuesChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationAxisValuesChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the LocationAxisValuesChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar.TargetChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the TargetChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the TargetChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUser3DBaseEventArgs">
      <summary>
            Represents a class that provides arguments for the AnnotationResizedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUser3DBaseEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AnnotationResizedByUser3DBaseEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUser3DBaseEventArgs.Annotation">
      <summary>
            The annotation that was resized by user.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the AnnotationResizedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AnnotationResizedByUserEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.AngleValueMax">
      <summary>
            The angle of the left edge. Applies when the rotation angle is 0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.AngleValueMin">
      <summary>
            The angle of the right edge. Applies when the rotation angle is 0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.NewSize">
      <summary>
            The new size in screen coordinates.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.OldSize">
      <summary>
            The old size in screen coordinates.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.RadiusValueMax">
      <summary>
            The radius of the bottom edge. Applies when the rotation angle is 0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserEventArgs.RadiusValueMin">
      <summary>
            The radius of the top edge. Applies when the rotation angle is 0.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserRoundEventArgs">
      <summary>
            Represents a class that provides arguments for the AnnotationResizedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserRoundEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AnnotationResizedByUserRoundEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserRoundEventArgs.Annotation">
      <summary>
            The annotation that was resized by user.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserXYEventArgs">
      <summary>
            Represents a class that provides arguments for the AnnotationResizedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of AnnotationResizedByUserXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationResizedByUserXYEventArgs.Annotation">
      <summary>
            The annotation that was resized by user.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound">
      <summary>
            Annotation for round views (ViewPolar and ViewSmith).
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.#ctor">
      <summary>
            Constructor for property grid editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.ResizedByUser">
      <summary>
            Annotation has been resized by user.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
             Sets the annotation location to axis values that match the given 
             screen coordinates.
            </summary>
      <param name="Coords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Coords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.Sizing">
      <summary>
            Gets or sets annotation sizing. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.SizingProperty">
      <summary>
            Identifies the Sizing dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationRound.ResizedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the ResizedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the ResizedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith">
      <summary>
            Annotation for ViewSmith.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.#ctor">
      <summary>
            Constructor for property grid editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axis">Smith axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.AdjustLocationAxisValueByUser(System.Int32)">
      <summary>
            Adjust location axis value when user interactive device moved.
            </summary>
      <param name="sweepPageIndex">sweep page index</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.HandleUserOverResizeNib">
      <summary>
            Handle mouse over resize nib.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.LocationAxisValues">
      <summary>
            Gets or sets location axis values. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.LocationAxisValuesChangedByUser">
      <summary>
            Location axis values coordinates have been changed by user
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.LocationAxisValuesProperty">
      <summary>
            Identifies the LocationAxisValues dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user.
            </summary>
      <param name="x">mouse X coordinate</param>
      <param name="y">mouse X coordinate</param>
      <param name="vButtonDownFromTargetRenderCenter">Rendering location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.MoveValueLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move value location by user.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">X coordinate</param>
      <param name="pnRenderLocationCoordOnButtonDown">Rendering location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
             Sets the annotation location to axis values that match the given 
             screen coordinates.
            </summary>
      <param name="Coords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Coords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.SetLocationFromAxisValues(Arction.Wpf.ChartingMVVM.PointFloat)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.TargetAxisValues">
      <summary>
            Gets or sets target axis values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.TargetAxisValuesProperty">
      <summary>
            Identifies the TargetAxisValues dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.TargetChangedByUser">
      <summary>
            Target has been changed by user
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.LocationAxisValuesChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationAxisValuesChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the LocationAxisValuesChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith.TargetChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the TargetChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the TargetChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle">
      <summary>
            Annotation text style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.#ctor(Arction.Wpf.ChartingMVVM.Annotations.AnnotationBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.Font">
      <summary>
            Gets or sets title font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.FontProperty">
      <summary>
            Identifies the Font dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.HorizAlign">
      <summary>
            Gets or sets horizontal alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.HorizAlignProperty">
      <summary>
            Identifies the HorizAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.MultiLineTextHorizontalAlign">
      <summary>
            Multi-line text horizontal alignment.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.MultiLineTextHorizontalAlignProperty">
      <summary>
            Identifies the MultiLineTextHorizontalAlign dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.Shadow">
      <summary>
            Gets or sets shadow below the text.  This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.ShadowProperty">
      <summary>
            Identifies the Shadow dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.ToString">
      <summary>
            Converts class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.Visible">
      <summary>
            Gets or sets text visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationTextStyle.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY">
      <summary>
            Annotation for ViewXY.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AdjustLocationAxisValueByUser(System.Int32)">
      <summary>
            Adjust location axis value when user interactive device moved.
            </summary>
      <param name="sweepPageIndex">sweep page index</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AssignXAxisIndex">
      <summary>
            Gets and sets index of X-axis assigned to this series. Give -1 when you don't want to assign it yet to any X-axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AssignXAxisIndexProperty">
      <summary>
            Identifies the AssignXAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AssignYAxisIndex">
      <summary>
            Gets and sets index of Y-axis assigned to this series. Give -1 when you don't want to assign it yet to any Y-axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AssignYAxisIndexProperty">
      <summary>
            Identifies the AssignYAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AxisValuesBoundaries">
      <summary>
            Gets and sets main box boundaries in axis values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.AxisValuesBoundariesProperty">
      <summary>
            Identifies the AxisValuesBoundaries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.Behind">
      <summary>
            Gets and sets if annotation is drawn behind series or marker. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipInsideGraph">
      <summary>
            Gets and sets if annotation is clipped inside graph. If set, limits the annotation in graph area. 
            <para>Note that ClipOnScaleBreak affects the clipping as well.</para><para>This is a dependency property.</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipInsideGraphProperty">
      <summary>
            Identifies the ClipInsideGraph dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipOnScaleBreak">
      <summary>
            Defines if annotation is to be clipped at X-axis breaks. 
            <para>Note that when true, the annotation is clipped at the start/end X-axis even if there are not breaks defined.</para><para>This is a dependency property.</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipOnScaleBreakProperty">
      <summary>
            Identifies the ClipOnScaleBreak dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipWhenSweeping">
      <summary>
            Gets and sets if annotation doesn't show up in the sweeping gap area. Applies only when X-axis ScrollMode is Sweeping. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ClipWhenSweepingProperty">
      <summary>
            Identifies the ClipWhenSweeping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.DetectPositionOverSweepPageIndex(System.Int32)">
      <summary>
            Detect sweep page at position.
            </summary>
      <param name="x">x coordinate</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.DetectPositionOverSweepPageIndex(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.HandleUserOverResizeNib">
      <summary>
            Handle mouse over resize nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.HandleUserOverTargetNib">
      <summary>
            Handle mouse over target nib.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.KeepVisible">
      <summary>
            Gets and sets if keep annotation always visible, inside graph area. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.KeepVisibleProperty">
      <summary>
            Identifies the KeepVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.LocationAxisValues">
      <summary>
            Gets and sets location as axis values. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.LocationAxisValuesChangedByUser">
      <summary>
            Location axis values coordinates have been changed by user
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.LocationAxisValuesProperty">
      <summary>
            Identifies the LocationAxisValues dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.MoveTargetLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move target by user.
            </summary>
      <param name="x">x coordinate</param>
      <param name="y">y coordinate</param>
      <param name="vButtonDownFromTargetRenderCenter">render location on button down</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.MoveValueLocationByUser(System.Single,System.Single,Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
            Move value location by user.
            </summary>
      <param name="x">x coordinate</param>
      <param name="y">y coordinate</param>
      <param name="pnRenderLocationCoordOnButtonDown">render location on user interactive device button down</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.RenderBehindAxes">
      <summary>
            Render annotation behind X-axes. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.RenderBehindAxesProperty">
      <summary>
            Identifies the RenderBehindAxes dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ResizedByUser">
      <summary>
            Annotation has been resized by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.Sizing">
      <summary>
            Gets and sets annotation sizing type. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.SizingProperty">
      <summary>
            Identifies the Sizing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.TargetAxisValues">
      <summary>
            Gets and sets target axis values. Target is the point that the arrow or callout tip points to. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.TargetAxisValuesProperty">
      <summary>
            Identifies the TargetAxisValues dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.TargetChangedByUser">
      <summary>
            Target has been changed by user
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ToString">
      <summary>
            Converts class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.LocationAxisValuesChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the LocationAxisValuesChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the LocationAxisValuesChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.ResizedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the ResizedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the AnnotationResizedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.AnnotationXY.TargetChangedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the TargetChangedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the TargetChangedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUser3DEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationAxisValuesChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUser3DEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationAxisValuesChangedByUser3DEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserPolarEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationAxisValuesChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserPolarEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationAxisValuesChangedByUserPolarEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserSmithEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationAxisValuesChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserSmithEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationAxisValuesChangedByUserSmithEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserXYEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationAxisValuesChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationAxisValuesChangedByUserXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationAxisValuesChangedByUserXYEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationRelativeOffsetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationRelativeOffsetChangedByUserEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs.Annotation">
      <summary>
            The annotation whose location relative offset was changed by user interactive device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs.X">
      <summary>
            X-value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.LocationRelativeOffsetChangedByUserEventArgs.Y">
      <summary>
            Y-value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.LocationScreenCoordinatesChangedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the LocationScreenCoordinatesChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.LocationScreenCoordinatesChangedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LocationScreenCoordinatesChangedByUserEventArgs class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.RotatedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the RotatedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.RotatedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of RotatedByUserEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.RotatedByUserEventArgs.Annotation">
      <summary>
            The annotation that was rotated by user interactive device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.RotatedByUserEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.RotatedByUserEventArgs.NewAngle">
      <summary>
            New angle of the annotation.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs">
      <summary>
            Represents a class that provides arguments for the TargetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TargetChangedByUser3DEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs.Annotation">
      <summary>
            The annotation whose target was changed by user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs.XValue">
      <summary>
            X-value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs.YValue">
      <summary>
            Y-value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUser3DEventArgs.ZValue">
      <summary>
            Z-value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the TargetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserPolarEventArgs">
      <summary>
            Represents a class that provides arguments for the TargetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserPolarEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TargetChangedByUserPolarEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserPolarEventArgs.Angle">
      <summary>
            Angle value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserPolarEventArgs.Annotation">
      <summary>
            The annotation whose target was changed by user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserPolarEventArgs.Radius">
      <summary>
            Radius value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserSmithEventArgs">
      <summary>
            Represents a class that provides arguments for the TargetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserSmithEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TargetChangedByUserPolarEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserSmithEventArgs.Annotation">
      <summary>
            The annotation whose target was changed by user interactive device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserSmithEventArgs.ImgValue">
      <summary>
            Imaginary value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserSmithEventArgs.RealValue">
      <summary>
            RealValue value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserXYEventArgs">
      <summary>
            Represents a class that provides arguments for the TargetChangedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TargetChangedByUserXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserXYEventArgs.Annotation">
      <summary>
            The annotation whose target was changed by user interactive device.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserXYEventArgs.XValue">
      <summary>
            X-value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Annotations.TargetChangedByUserXYEventArgs.YValue">
      <summary>
            Y-value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AngleChangedEventArgs">
      <summary>
             Delivers information of rendered angle.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AngleChangedEventArgs.#ctor">
      <summary>
            Angle Changed EventArgs.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AngleChangedEventArgs.Angle">
      <summary>
            Rendered Angle value in degrees. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AngleChangedEventArgs.Axis">
      <summary>
            Axis, sender of the event.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase">
      <summary>
            3D axis base class.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.AllowScaling">
      <summary>
            Gets or sets if axis min and max values can be adjusted by user. Draws scale nibs in the ends of the axis. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.AllowScalingProperty">
      <summary>
            Identifies the AllowScaling dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.AllowScrolling">
      <summary>
            Gets or sets if axis scrolling is allowed by user. Drag from axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.AllowScrollingProperty">
      <summary>
            Identifies the AllowScrolling dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Construct">
      <summary>
            Initialize members.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CornerAlignment">
      <summary>
            Gets or sets alignment in the corner of 3D chart space. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CornerAlignmentProperty">
      <summary>
            Identifies the CornerAlignment dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CreateDragNib">
      <summary>
            Create drag nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CreateMajorGrid">
      <summary>
            Create major grid.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CreateMajorTickStyle">
      <summary>
            Create major grid style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CreateMinorGrid">
      <summary>
            Create minor grid.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.CreateMinorTickStyle">
      <summary>
            Create minor tick style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.DragSnapToDiv">
      <summary>
            Gets or sets if axis scrolling or scaling snaps to divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.DragSnapToDivProperty">
      <summary>
            Identifies the DragSnapToDiv dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.GetGridWalls">
      <summary>
            Get list of walls where grid is drawn using this axis.
            </summary>
      <returns>List of walls.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.GetMajorTicks">
      <summary>
            Get major tick values.
            </summary>
      <returns>Array of major tick values.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is mouse over a series.
            </summary>
      <param name="x">Mouse X-coordinate.</param>
      <param name="y">Mouse Y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if mouse is over a series. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.LabelTicksGap">
      <summary>
            Gets or sets gap between labels and ticks. Value is in world coordinate values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.LabelTicksGapProperty">
      <summary>
            Identifies the LabelTicksGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Material">
      <summary>
            Gets or sets axis material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.OwnerView">
      <summary>
            Gets owner view.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Reversed">
      <summary>
            Gets or sets axis reversed. Set true if you want to have low values higher
            and the high values lower on the graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.ReversedProperty">
      <summary>
            Identifies the Reversed dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.ScaleNibs">
      <summary>
            Gets or sets scale nib appearance. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.ScaleNibsProperty">
      <summary>
            Identifies the ScaleNibs dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.SetProperCursor">
      <summary>
            Set proper drag cursor. Default is hand.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Title">
      <summary>
            Gets or sets axis title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.Units">
      <summary>
            Gets or sets axis units. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.UnitsProperty">
      <summary>
            Identifies the Units dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.ValueTo3DWorldCoord(System.Double)">
      <summary>
            Convert axis value into respective coordinate in 3D world space. 
            Takes View.Dimensions into account.
            </summary>
      <param name="value">Value to convert.</param>
      <returns>3D world coordinate. If view or dimensions can't be solved, returns NaN.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.Axis3DBase.World3DCoordToValue(System.Single)">
      <summary>
            Convert 3D world coordinate into respective axis value. 
            Takes View.Dimensions into account.
            </summary>
      <param name="coord">3D world coordinate.</param>
      <returns>Axis values. If view or dimensions can't be solved, returns NaN.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisBase">
      <summary>
            Base class for X- and Y-axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoDivSeparationPercent">
      <summary>
            Gets or sets labels gap in percents of their height when AutoDivSpacing is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoDivSeparationPercentProperty">
      <summary>
            Identifies the AutoDivSeparationPercent dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoDivSpacing">
      <summary>
            Gets or sets automatic division spacing. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoDivSpacingProperty">
      <summary>
            Identifies the AutoDivSpacing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoFormatLabels">
      <summary>
            Gets or sets if automatically determines number of decimals or time format. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AutoFormatLabelsProperty">
      <summary>
            Identifies the AutoFormatLabels dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AxisColor">
      <summary>
            Gets or sets axis line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AxisColorProperty">
      <summary>
            Identifies the AxisColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AxisThickness">
      <summary>
            Gets or sets thickness of the axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AxisThicknessProperty">
      <summary>
            Identifies the AxisThickness dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.AxisValueToDateTime(System.Double)">
      <summary>
            Converts axis value to DateTime.
            The returned value uses value origin set by DateOrigin properties.
            </summary>
      <param name="axisValue">Axis value in seconds.</param>
      <returns>DateTime object.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CalculateUserFriendlyScaleRange(System.Double,System.String@,Arction.Wpf.ChartingMVVM.UserFriendlyScaleCalcCondition,Arction.Wpf.ChartingMVVM.ScaleMultipleFlags)">
      <summary>
            Calculates user friendly scale range. Fits the decimals so that they got values of 1, 2 and 5. 
            </summary>
      <param name="range">Range.</param>
      <param name="valueFormat">Value format.</param>
      <param name="condition">Condition.</param>
      <param name="flags">Flags.</param>
      <returns>User friendly scale range.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.cdMinRange">
      <summary>
            Minimum value range (maximum - minimum). 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.Construct">
      <summary>
            Initialize members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CreateLabelsFont">
      <summary>
            Create labels font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CreateMajorGrid">
      <summary>
            Create major grid.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CreateMajorTickStyle">
      <summary>
            Create major grid style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CreateMinorGrid">
      <summary>
            Create minor grid.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CreateMinorTickStyle">
      <summary>
            Create minor grid style.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CustomTicks">
      <summary>
            Gets or sets custom axis ticks. Allows uneven major division spacing and label text setting. 
            Note that to see the ticks you must set CustomAxisTicksEnabled property to true. 
            This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CustomTicksEnabled">
      <summary>
            Gets or sets custom ticks on/off. Uses the ticks defined in CustomTicks property. This is a dependency property.
            If this is enabled, only major ticks are drawn, not minor. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CustomTicksEnabledProperty">
      <summary>
            Identifies the CustomTicksEnabled dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.CustomTicksProperty">
      <summary>
            Identifies the CustomTicks dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginDay">
      <summary>
            Gets or sets date origin day. Keep this as close as possible to your actual first date. This is a dependency property.
            Applies when using DateTime formatted axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginDayProperty">
      <summary>
            Identifies the DateOriginDay dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginMonth">
      <summary>
            Gets or sets date origin month. Keep this as close as possible to your actual first date. This is a dependency property.
            Applies when using DateTime formatted axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginMonthProperty">
      <summary>
            Identifies the DateOriginMonth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginYear">
      <summary>
            Gets or sets date origin year. Keep this as close as possible to your actual first date. This is a dependency property.
            Applies when using DateTime formatted axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateOriginYearProperty">
      <summary>
            Identifies the DateOriginYear dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateTimeRange">
      <summary>
            Gets or sets the string presentation of axis range. This property is affects when ValueType is DateTime. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateTimeRangeProperty">
      <summary>
            Identifies the DateTimeRange dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DateTimeToAxisValue(System.DateTime)">
      <summary>
            Converts a DateTime object to value on this axis. 
            The returned value uses value origin set by DateOrigin properties.
            </summary>
      <param name="dateTime">DateTime object to convert.</param>
      <returns>Value in seconds.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DivisionReduction">
      <summary>
            Gets or sets if divisions are reduced, when Automatic division spacing is not set, and divisions get too close to each other. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.DivisionReductionProperty">
      <summary>
            Identifies the DivisionReduction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.FormatAxisValue(System.Double,System.String,System.String,System.Boolean)">
      <summary>
            Format axis value to string.
            </summary>
      <param name="valueAtAxis">Value.</param>
      <param name="formatStringTime">Format string, applied when axis type is time.</param>
      <param name="formatStringValue">Format string, applied when axis type is number or map coordinates.</param>
      <param name="enableLog10TypeFormatting">When axis is typed as Log10Exponential or LogE_MultiplesOfNeper and base is accordingly, this flag will allow value to be formatted with "E" style.</param>
      <returns>Formatted axis value as string.</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisBase.FormatValueLabel">
      <summary>
            Event to format axis tick value to custom string.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.GetLabelsFormat">
      <summary>
            Get last used label format string.
            "E" is for 10 base log.
            "e" is for Neper base log.
            "" is for custom label format (unknown for chart).
            Consider using String.Format(returned format string) to format values.
            </summary>
      <returns>Format string for labels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.InvalidateCustomTicks">
      <summary>
            Sets new custom ticks to take effect instantly. 
            Call this after you have added the ticks in code.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.KeepDivCountOnRangeChange">
      <summary>
            Gets or sets if division count prefer magnitude. This is a dependency property.
            When true, keeps division count instead of division magnitude, when axis min or max is changed.
            When false, keeps division magnitude instead instead of count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.KeepDivCountOnRangeChangeProperty">
      <summary>
            Identifies the KeepDivCountOnRangeChange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsAngle">
      <summary>
            Gets or sets labels rotation angle, in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsAngleProperty">
      <summary>
            Identifies the LabelsAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsColor">
      <summary>
            Gets or sets labels color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsColorProperty">
      <summary>
            Identifies the LabelsColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsFont">
      <summary>
            Gets or sets labels font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsFontProperty">
      <summary>
            Identifies the LabelsFont dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsNumberFormat">
      <summary>
            Gets or sets labels number format, used when ValueType is 'Number'. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsNumberFormatProperty">
      <summary>
            Identifies the LabelsNumberFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsTimeFormat">
      <summary>
            Gets or sets labels number format, used when ValueType is 'Time'. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsTimeFormatProperty">
      <summary>
            Identifies the LabelsTimeFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsVisible">
      <summary>
            Gets or sets labels visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LabelsVisibleProperty">
      <summary>
            Identifies the LabelsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogBase">
      <summary>
            Gets or sets logarithmic base. Applies only when ScaleType is set to Logarithmic. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogBaseProperty">
      <summary>
            Identifies the LogBase dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogLabelsType">
      <summary>
            Gets or sets logarithmic axis labels special formatting type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogLabelsTypeProperty">
      <summary>
            Identifies the LogLabelsType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogZeroClamp">
      <summary>
            Gets or sets zero clamp value. Values below this limit will get this limit value when logarithmic presentation is used. 
            This is needed to handle 0 and values below that. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.LogZeroClampProperty">
      <summary>
            Identifies the LogZeroClamp dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.m_cdDIT">
      <summary>
            Double variable inaccuracy tolerance.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDiv">
      <summary>
            Gets or sets major tick interval (units / division). This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDivCount">
      <summary>
            Gets or sets major division count. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDivCountProperty">
      <summary>
            Identifies the MajorDivCount dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDivProperty">
      <summary>
            Identifies the MajorDiv dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDivTickStyle">
      <summary>
            Gets or sets major division ticks style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorDivTickStyleProperty">
      <summary>
            Identifies the MajorDivTickStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorGrid">
      <summary>
            Gets or sets grid at major divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MajorGridProperty">
      <summary>
            Identifies the MajorGrid dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.Maximum">
      <summary>
            Gets or sets maximum axis value. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MaximumDateTime">
      <summary>
            Gets or sets maximum axis value. Use this property when axis' ValueType is DateTime. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MaximumDateTimeProperty">
      <summary>
            Identifies the MaximumDateTime dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MaximumProperty">
      <summary>
            Identifies the Maximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.Minimum">
      <summary>
            Gets or sets minimum axis value. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinimumDateTime">
      <summary>
            Gets or sets minimum axis value. Use this property when axis' ValueType is DateTime. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinimumDateTimeProperty">
      <summary>
            Identifies the MinimumDateTime dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinimumProperty">
      <summary>
            Identifies the Minimum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorDivCount">
      <summary>
            Gets or sets minor division count. The count of divisions inside a major division. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorDivCountProperty">
      <summary>
            Identifies the MinorDivCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorDivTickStyle">
      <summary>
            Gets or sets minor division ticks style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorDivTickStyleProperty">
      <summary>
            Identifies the MinorDivTickStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorGrid">
      <summary>
            Gets or sets grid at minor divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.MinorGridProperty">
      <summary>
            Identifies the MinorGrid dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisBase.RangeChanged">
      <summary>
            Range has changed (Minimum and/or Maximum value).
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.ScaleType">
      <summary>
            Gets or sets axis scale type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.ScaleTypeProperty">
      <summary>
            Identifies the ScaleType dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.SetDateOrigin(System.DateTime)">
      <summary>
            Set DateOriginYear, DateOriginMonth and DateOriginDay all at same time. 
            </summary>
      <param name="date">Date.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.SetDateTimeRange(System.DateTime,System.DateTime)">
      <summary>
            Set date time range. This effects when ValueType is DateTime.
            </summary>
      <param name="minimum">Minimum.</param>
      <param name="maximum">Maximum.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.SetMaximum(System.Double)">
      <summary>
             Internal setter of the maximum property. For bindables calls the SetCurrentValue and thus affects the value changed callback, on non-bindable calls the property setter. 
             Does not call the setter for bindables as that would cause breaking of the binding as it calls SetValue. 
            </summary>
      <param name="dMax">Value to set as maximum.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.SetMinimum(System.Double)">
      <summary>
             Internal setter the minimum property. For bindables calls the SetCurrentValue and thus affects the value changed callback, on non-bindable calls the property setter. 
             Does not call the setter for bindables as that would cause breaking of the binding as it calls SetValue. 
            </summary>
      <param name="dMin">Value to set as minimum.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.SetRange(System.Double,System.Double)">
      <summary>
            Set axis range.
            </summary>
      <param name="minimum">Minimum axis value.</param>
      <param name="maximum">Maximum axis value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisBase.TimeString(System.Double,System.String)">
      <summary>
            Converts time value to string by given format. 
            Handles also negative values and formats having more than three second fractions. 
            </summary>
      <param name="formatStringTime">Time format string.</param>
      <param name="valueAtAxis">Value in seconds.</param>
      <returns>Formatted string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.ValueType">
      <summary>
            Gets or sets value type: time, numeric or coordinates. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.ValueTypeProperty">
      <summary>
            Identifies the ValueType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisBase.Visible">
      <summary>
            Gets or sets axis visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisBase.FormatValueLabelEventHandler">
      <summary>
            The delegate to use for handlers that receive the <see cref="E:Arction.Wpf.ChartingMVVM.Axes.AxisBase.FormatValueLabel" /> event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the FormatValueLabel event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisBase.RangeChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the RangeChanged event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the RangeChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib">
      <summary>
            Axis drag nib represents a dragging area on the end of X or Y axis.
            The range of axis is modified by dragging the nib. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.Color">
      <summary>
            Gets or sets nib color. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.Reversed">
      <summary>
            Gets or sets if Nib move is reversed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.ReversedProperty">
      <summary>
            Identifies the Reversed dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.Size">
      <summary>
            Gets or sets nib size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D">
      <summary>
            Axis drag nib represents a dragging area on the both ends of axis.
            The range of axis is modified by dragging the nib. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.#ctor(Arction.Wpf.ChartingMVVM.Axes.Axis3DBase)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.Color">
      <summary>
            Gets or sets nib color. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.Reversed">
      <summary>
            Gets or sets if Nib move is reversed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.ReversedProperty">
      <summary>
            Identifies the Reversed dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.Size">
      <summary>
            Gets or sets nib size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisDragNib3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisPolar">
      <summary>
            Polar axis (angle) class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolar.#ctor">
      <summary>
            Constructor for properties editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase">
      <summary>
            Base class for polar axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AllowScrolling">
      <summary>
            Gets or sets if axis scrolling by user is enabled. Drag from axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AllowScrollingProperty">
      <summary>
            Identifies the AllowScrolling dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisAngle">
      <summary>
            Gets or sets amplitude axis' angle offset from original estimate. Multiple polar axes added equally spaced on a circle starting from East direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisAngleProperty">
      <summary>
            Identifies the AngleOrigin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisAngleType">
      <summary>
            Amplitude axis placement angle decider (with respect to mathematical origin i.e, absolute or user defined origin i.e, relative) This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisAngleTypeProperty">
      <summary>
            Identifies the AmplitudeAxisAngleType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisLineVisible">
      <summary>
            Gets or sets if amplitude axis is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeAxisLineVisibleProperty">
      <summary>
            Identifies the AmplitudeAxisLineVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeLabelsAngle">
      <summary>
             Offset of the axis labels angle in degrees. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeLabelsAngleProperty">
      <summary>
            Identifies the AmplitudeLabelsAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeLabelsVisible">
      <summary>
            Gets or sets if amplitude labels are visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeLabelsVisibleProperty">
      <summary>
            Identifies the AmplitudeLabelsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeReversed">
      <summary>
            Amplitude Axis direction is reversed. If false, amplitudes increase from centre to edge, if true, they increase from edge to centre.
            Does not affect the angular axis in any way. 
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AmplitudeReversedProperty">
      <summary>
            Identifies the AmplitudeReversed dependency property.
            Amplitude Axis direction is reversed. If false, amplitudes increase from centre to edge, if true, they increase from edge to centre.
            Does not affect the angular axis in any way. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AngleOrigin">
      <summary>
            Gets or sets axis' angle offset from original estimate. Multiple polar axes added equally spaced on a circle starting from East direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AngleOriginProperty">
      <summary>
            Identifies the AngleOrigin dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AngularReversedProperty">
      <summary>
            Identifies the AngularReversed dependency property.
            If false, angles increase counter clockwise, if true, they increase towards clockwise direction.
            Does not affect the amplitude axis in any way. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AngularTicksVisible">
      <summary>
             Defines if the angular axis ticks are shown or not. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.AngularTicksVisibleProperty">
      <summary>
            Identifies the AngularTicksVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CoordToValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)">
      <summary>
            Coordinate to value converter.
            </summary>
      <param name="Coord">Screen coordinate to convert into polar value</param>
      <param name="UseDip">Flag useDip</param>
      <returns>Polar value matching the given screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CoordToValue(System.Int32,System.Int32,System.Double@,System.Double@,System.Boolean)">
      <summary>
            Coordinate to value.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="angle">Angle as degrees.</param>
      <param name="amplitude">Value as axis units.</param>
      <param name="UseDip">Flag useDip</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CreateLabelsFont">
      <summary>
            Create font for labels
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CreateMajorGrid">
      <summary>
            Create major grid
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.CreateMinorGrid">
      <summary>
            Create minor grid
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.DragSnapToDiv">
      <summary>
            Gets or sets if axis scrolling or scaling with user interactive device snaps to divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.DragSnapToDivProperty">
      <summary>
            Identifies the DragSnapToDiv dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.InnerCircleRadiusPercentage">
      <summary>
            Gets or sets inner circle radius as percentage of full circle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.InnerCircleRadiusPercentageProperty">
      <summary>
            Identifies the InnerCircleRadiusPercentage dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.KeepDivCountOnRangeChange">
      <summary>
            Gets or sets if division count prefer magnitude. This is a dependency property.
            When true, keeps division count instead of division magnitude, when axis min or max is changed.
            When false, keeps division magnitude instead instead of count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.KeepDivCountOnRangeChangeProperty">
      <summary>
            Identifies the KeepDivCountOnRangeChange dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.m_bAngularTicksVisible">
      <summary>
             Defines if the angular ticks should be rendered or not.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.m_dDragStartAngle">
      <summary>
            drag start angle
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.m_dOrigAngleAtDragStart">
      <summary>
            origin angle at drag start
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.m_View">
      <summary>
             The View this axis is connected to. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorDiv">
      <summary>
            Gets or sets major tick interval (units / div). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorDivProperty">
      <summary>
            Identifies the MajorDiv dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorDivTickStyle">
      <summary>
            Gets or sets major division ticks style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorDivTickStyleProperty">
      <summary>
            Identifies the MajorDivTickStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorGrid">
      <summary>
            Gets or sets grid at major divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MajorGridProperty">
      <summary>
            Identifies the MajorGrid dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MarginInner">
      <summary>
            Gets or sets inner margin. This is a dependency property.
            Inner margin is the distance between this and the next axis (the one inside this one). 
            Note that this does nothing if there is no axis inside this one. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MarginInnerProperty">
      <summary>
            Identifies the MarginInner dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MaxAmplitude">
      <summary>
            Gets or sets maximum axis amplitude value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MaxAmplitudeProperty">
      <summary>
            Identifies the MaxAmplitude dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinAmplitude">
      <summary>
            Gets or sets minimum axis amplitude value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinAmplitudeProperty">
      <summary>
            Identifies the MinAmplitude dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorDivCount">
      <summary>
            Gets or sets minor division count. The count of divisions inside a major division. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorDivCountProperty">
      <summary>
            Identifies the MinorDivCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorDivTickStyle">
      <summary>
            Gets or sets minor division ticks style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorDivTickStyleProperty">
      <summary>
            Identifies the MinorDivTickStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorGrid">
      <summary>
            Gets or sets grid at minor divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.MinorGridProperty">
      <summary>
            Identifies the MinorGrid dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.RangeChanged">
      <summary>
            Range has changed (Minimum or Maximum value)
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.Reversed">
      <summary>
            Axis angle direction is reversed. If false, angles increase counter clockwise, if true, they increase towards clockwise direction.
            Does not affect the amplitude axis in any way. 
            This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SetGridDivCount(System.Int32)">
      <summary>
            Set grid subdivision
            </summary>
      <param name="iNew">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iNew</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SetGridDivCount(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SetProperCursor">
      <summary>
            Set proper cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SetRange(System.Double,System.Double)">
      <summary>
            Set axis range.
            </summary>
      <param name="minimum">Minimum axis value</param>
      <param name="maximum">Maximum value</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SupplyCustomAmplitudeString">
      <summary>
            Event to format amplitude as a custom string.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.UsePreviousAxisDiameter">
      <summary>
             Defines if the axis shares the same space with the previous axis 
             in the view's axis collection. If the OuterMargin, font size, 
             TickMark location and other angular axis position affecting 
             settins are the same as with the previous axis, the axis lines are 
             aligned. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.UsePreviousAxisDiameterProperty">
      <summary>
            Identifies the sePreviousAxisDiameter dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointPolar,System.Boolean)">
      <summary>
            Value to coordinates.
            </summary>
      <param name="point">Polar axis values to convert into screen coordinates. 
            Angle in the point is in relation to normal 0 angle, not the current axis drawing angle. 
            </param>
      <param name="useDip">Flag useDip</param>
      <returns>Screen coordinates matching the requested polar axis values.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointRound,System.Boolean)">
      <summary>
            Value to coordinates.
            </summary>
      <param name="Point">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Point</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointRound,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="UseDip">Flag useDip</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointRound,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoordDouble(System.Double,System.Double,System.Boolean)">
      <summary>
            Value to coordinates.
            </summary>
      <param name="angle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>angle</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoordDouble(System.Double,System.Double,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="amplitude">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>amplitude</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoordDouble(System.Double,System.Double,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="UseDip">Flag useDip</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToCoordDouble(System.Double,System.Double,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.ValueToString(Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAmplitudeStringEventArgs)">
      <summary>
            Convert value to string.
            </summary>
      <param name="args">Arguments</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.RangeChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the RangeChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the RangeChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisPolarBase.SupplyCustomAmplitudeStringEventHandler">
      <summary>
            The delegate to use for handlers that receive the SupplyCustomAmplitudeString event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SupplyCustomAmplitudeString event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase">
      <summary>
            Base class for round axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AllowScaling">
      <summary>
            Gets or sets if axis min and max values can be adjusted by user. Draws scale nibs in the ends of the axis. This is a dependency property. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AmplitudeAxisAngleChanged">
      <summary>
             Event that reports that the amplitude axis angle has changed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AmplitudeAxisRenderedAngle">
      <summary>
             Angle in degrees the Amplitude axis circle is drawn at. 
             This is a Dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AmplitudeAxisRenderedAngleProperty">
      <summary>
            Identifies the AmplitudeAxisRenderedAngle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngleToString(Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs)">
      <summary>
            Convert angle to string.
            </summary>
      <param name="args">Arguments</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisAngleChanged">
      <summary>
             Event that reports that the angular axis angle has changed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisAutoDivSpacing">
      <summary>
            Gets or sets angular axis auto div spacing. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisAutoDivSpacingProperty">
      <summary>
            Identifies the AngularAxisAutoDivSpacing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisCircleVisible">
      <summary>
            Gets or sets angular axis circle visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisCircleVisibleProperty">
      <summary>
            Identifies the AngularAxisCircleVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisMajorDivCount">
      <summary>
            Gets or sets angular axis major division count. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisMajorDivCountProperty">
      <summary>
            Identifies the AngularAxisMajorDivCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisRenderedAngle">
      <summary>
             Angle in degrees the angular axis circle is drawn at. 
             This is a Dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularAxisRenderedAngleProperty">
      <summary>
            Identifies the AngularAxisRenderedAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularLabelsVisible">
      <summary>
            Gets or sets if angular label are visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularLabelsVisibleProperty">
      <summary>
            Identifies the AngularLabelsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularUnitDisplay">
      <summary>
            Gets or sets displayed angular unit. Default is degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngularUnitDisplayProperty">
      <summary>
            Identifies the AngularUnitDisplay dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AntiAliasing">
      <summary>
            Gets or sets anti-aliased draw. This is a dependency property.
            Drawing anti-aliased draws the axis with smooth edges, but will increase CPU/GPU overhead.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AntiAliasingProperty">
      <summary>
            Identifies the AntiAliasing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AutoFormatLabels">
      <summary>
            Gets or sets if labels are automatically formatted. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AutoFormatLabelsProperty">
      <summary>
            Identifies the AutoFormatLabels dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AxisColor">
      <summary>
            Gets or sets axis line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AxisColorProperty">
      <summary>
            Identifies the AxisColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AxisThickness">
      <summary>
            Gets or sets thickness of the axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AxisThicknessProperty">
      <summary>
            Identifies the AxisThickness dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.cdMinRange">
      <summary>
            Minimum value range (max - min) 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.CreateGridOptionsAngular">
      <summary>
            Create new angular grid options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.CreateLabelsFont">
      <summary>
            Create labels' font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.GridAngular">
      <summary>
            Gets or sets angular grid options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.GridAngularProperty">
      <summary>
            Identifies the GridAngular dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.GridVisibilityOrder">
      <summary>
             Defines if the grid should be drawn behind or top of series information and axes. 
             This is a Dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.GridVisibilityOrderProperty">
      <summary>
            Identifies the GridVisibilityOrder dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Check if mouse is over item.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.LabelsFont">
      <summary>
            Gets or sets labels font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.LabelsFontProperty">
      <summary>
            Identifies the LabelsFont dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.LabelTicksGap">
      <summary>
            Gets or sets gap between labels and ticks in pixels This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.LabelTicksGapProperty">
      <summary>
            Identifies the LabelTicksGap dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.m_cursorAxisDrag">
      <summary>
            Axis dragging cursor. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.m_cursorCircDrag">
      <summary>
            Circumference dragging cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.m_cursorNibScaleDrag">
      <summary>
            Scale dragging cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.m_dOrigVectorLen">
      <summary>
            A length of original vector.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.m_rectTextMeasured">
      <summary> 
             Measured rectangle for text. 
             Values in PX.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.MajorDivCount">
      <summary>
            Gets or sets major division count. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.MajorDivCountProperty">
      <summary>
            Identifies the MajorDivCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.MarginOuter">
      <summary>
            Gets or sets outer margin. This is a dependency property.
            Distance from the outmost axis item to the edge of the background.
            The item is either the axis line or label, depending on TickMarkLocation
            property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.MarginOuterProperty">
      <summary>
            Identifies the MarginOuter dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.RebuildAngularGrid">
      <summary>
             Rebuilds angular grid, ticks and labels
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ScaleNibs">
      <summary>
            Gets or sets scale nib appearance. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ScaleNibsProperty">
      <summary>
            Identifies the ScaleNibs dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.SetGridDivCount(System.Int32)">
      <summary>
            Set grid subdivision
            </summary>
      <param name="NewCount">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>NewCount</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.SetGridDivCount(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.SetProperCursor">
      <summary>
            Set proper cursor.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.SupplyCustomAngleString">
      <summary>
            Event to format angle as a custom string.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.TickMarkLocation">
      <summary>
            Gets or sets tick mark location. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.TickMarkLocationProperty">
      <summary>
            Identifies the TickMarkLocation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.Title">
      <summary>
            Gets or sets axis title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.Units">
      <summary>
            Gets or sets axis units. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.UnitsProperty">
      <summary>
            Identifies the Units dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ValidateDivCount(System.Object)">
      <summary>
             Validates div count. 
            </summary>
      <param name="count">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>count</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ValidateDivCount(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ValidateDivCount(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointRound,System.Boolean)">
      <summary>
             Converts given point to screen coordinates.
            </summary>
      <param name="value">Value of the given view. Actual interpretation depends on view type.</param>
      <param name="useDIP">Defines if the produced coordinates are to be in DIPs (Device independent pixels) or 
            in actual pixels</param>
      <returns>Screen coordinates of the given point.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.Visible">
      <summary>
            Gets or sets axis visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.AngleChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the AmplitudeAxisAngleChanged event.
            </summary>
      <param name="sender">Sender of the event.</param>
      <param name="e">Arguments describing the angle change.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase.SupplyCustomAngleStringEventHandler">
      <summary>
            The delegate to use for handlers that receive the SupplyCustomAngleString event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SupplyCustomAngleString event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisSmith">
      <summary>
            Smith axis class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.#ctor">
      <summary>
            Constructor for properties editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmith.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase">
      <summary>
            Base class for smith axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AbsImg(System.Double)">
      <summary>
             Convert the normalized imaginary value to absolute scale.
            </summary>
      <param name="Img">Normed imaginary axis value to convert back to absolute values.</param>
      <returns>Absolute Imaginary axis value. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AbsReal(System.Double)">
      <summary>
             Convert the normalized real value to absolute scale.
            </summary>
      <param name="Real">&gt;Normed RealValue axis value to convert back to absolute value.</param>
      <returns>Absolute RealValue-axis value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AbsToNorm(System.Double)">
      <summary>
             Converts absolute smith view value to normed value.
             Normed value 1 is at the center of the chart. 
             Normed value 1 matches the given absolute reference value.
            </summary>
      <param name="value">Smith values imaginary or real part to convert.</param>
      <returns>Normed smith value.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AngularTickStyle">
      <summary>
            Angular ticks style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AngularTickStyleProperty">
      <summary>
            Identifies the MajorDivTickStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AxisEventToString(System.Object,Arction.Wpf.ChartingMVVM.Axes.SupplyCustomImgStringEventArgs)">
      <summary>
            Convert angle to string.
            </summary>
      <param name="o">Dummy</param>
      <param name="args">Arguments</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.AxisEventToString(System.Object,Arction.Wpf.ChartingMVVM.Axes.SupplyCustomRealStringEventArgs)">
      <summary>
            Convert value to string.
            </summary>
      <param name="o">Dummy</param>
      <param name="args">Arguments</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ClipGridInsideGraph">
      <summary>
             Defines if the gridline is visible outside the chart circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ClipGridInsideGraphProperty">
      <summary>
            Defines if the gridline is visible outside the chart circle (Dependecy property)
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CoordToValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)">
      <summary>
             Converts Screen Coordinates to absolute Real/Imaginary value pair.
            </summary>
      <param name="coord">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CoordToValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="useDIP">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useDIP</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CoordToValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CoordToValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CoordToValue(System.Single,System.Single,System.Double@,System.Double@,System.Boolean)">
      <summary>
            Screen Coordinate to absolute RealValue,Imaginary value pair.
            </summary>
      <param name="x">X-coordinate in the chart area.</param>
      <param name="y">Y-coordinate in the chart area. Values grow downwards.</param>
      <param name="real">Value of the RealValue axis corresponding to the given coordinate pair.</param>
      <param name="imaginary">Value of the Imaginary axis corresponding to the given coordinate pair. Values grow upwards.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CreateGridOptionsAngular">
      <summary>
            Create angular grid options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CreateGridOptionsImg">
      <summary>
            Create imaginary grid options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CreateGridOptionsReal">
      <summary>
            Create real grid options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.CreateLabelsFont">
      <summary>
            Create labels' font
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridDivSpacing">
      <summary>
             Approximate distance between gridlines in pixels. 
             Used only if GridType is GridTypeSmith.Distance.
             This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridDivSpacingProperty">
      <summary>
            Identifies the grid type dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridImg">
      <summary>
             Gridline options for the imaginary-part grid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridImgProperty">
      <summary>
            Identifies the GridOptionsSmith dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridReal">
      <summary>
             Gridline options for the real-part grid.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridRealProperty">
      <summary>
            Identifies the GridOptionsSmith dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridType">
      <summary>
            Defines how the grid is defined. 
            If the value is Distance, GridDivSpacing property will affect the positioning and amount of gridlines. 
            Otherwise GridDivCount will be used in calculations. 
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.GridTypeProperty">
      <summary>
            Identifies the grid type dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.m_bDrawGridOutside">
      <summary>
             Defines if the gridline is visible outside the chart circle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.m_bShowAbsValues">
      <summary>
             Determines if the axis shows absolute or normalized values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.m_dRefValue">
      <summary>
             Reference resistance value at the center of the unit circle. 
             Used in value scaling. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.NormImg(System.Double)">
      <summary>
            Normalize the absolute imaginary axis value.
            Means z(d) =&gt; r+jx, where ImgR(z(d)) = j(X/Z0).
            </summary>
      <param name="Img">Absolute imaginary axis value to normalize to -1..1 range. </param>
      <returns>Normalized imaginary axis value, in range -1..1. Values can be larger, of course, but then they reside outside the unit circle.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.NormReal(System.Double)">
      <summary>
            Normalize the absolute real axis value.
            Means z(d) =&gt; r+jx, where RealR(z(d)) = R/Z0.
            </summary>
      <param name="Real">Absolute real axis value to normalize.</param>
      <returns>Normalized real axis value. Normalized to range 0..1. Values outside this range do not fit in the Unit circle. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.NormToAbs(System.Double)">
      <summary>
             Converts normed smith view value to absolute value.
             Normed value 1 matches the given absolute reference value.
            </summary>
      <param name="value">Smith values imaginary or real part to convert.</param>
      <returns>Absolute smith value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.RangeChanged">
      <summary>
            Range has changed (Minimum or Maximum value).
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.RealAxisLineVisible">
      <summary>
            Gets or sets if real axis is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.RealAxisLineVisibleProperty">
      <summary>
            Identifies the RealAxisLineVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ReferenceValue">
      <summary>
             Reference value of the smith axis. 
             This is the value at the center of the smith chart. On RealValue axis
             values range from 0 to this, and on right side from this to infinity.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ReferenceValueProperty">
      <summary>
            Reference value (maximum) of the real Axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SetGridDivCount(System.Int32)">
      <summary>
            Set grid subdivision
            </summary>
      <param name="iNew">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iNew</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SetGridDivCount(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ShowAbsoluteValues">
      <summary>
            Determines if the axis shows absolute or normalized values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ShowAbsoluteValuesProperty">
      <summary>
            Identifies the ShowAbsoluteValues dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SupplyCustomImgString">
      <summary>
            Event to format imaginary value as a custom string.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SupplyCustomRealString">
      <summary>
            Event to format real value as a custom string.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToCoord(Arction.Wpf.ChartingMVVM.IPointRound,System.Boolean)">
      <summary>
             Converts given smith value to screen coordinates. 
            </summary>
      <param name="value">Smith value to convert.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Screen coordinates matching the given parameter.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToCoord(Arction.Wpf.ChartingMVVM.PointSmith,System.Boolean)">
      <summary>
            Converts smith value to screen coordinates.
            </summary>
      <param name="value">Smith value to convert.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Unrounded screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToCoord(System.Double,System.Double,System.Single@,System.Single@,System.Boolean)">
      <summary>
            Converts smith value to screen coordinates.
            </summary>
      <param name="real">Value of the RealValue axis. </param>
      <param name="imaginary">Value of the Imaginary axis. Positive values upwards.</param>
      <param name="x">X-coordinate in the chart area.</param>
      <param name="y">Y-coordinate in the chart area. Values grow downwards.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToUCValue(Arction.Wpf.ChartingMVVM.IPointSmith)">
      <summary>
            Value to Unit Circle (UC) value.
            </summary>
      <param name="point">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToUCValue(Arction.Wpf.ChartingMVVM.IPointSmith)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.ValueToUCValue(Arction.Wpf.ChartingMVVM.IPointSmith)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.RangeChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the RangeChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the RangeChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SupplyCustomImgStringEventHandler">
      <summary>
            The delegate to use for handlers that receive the SupplyCustomImgString event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SupplyCustomImgString event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase.SupplyCustomRealStringEventHandler">
      <summary>
            The delegate to use for handlers that receive the SupplyCustomRealString event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SupplyCustomRealString event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle">
      <summary>
            Axis tick style class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.Alignment">
      <summary>
            Gets or sets alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.AlignmentProperty">
      <summary>
            Identifies the Alignment dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.Color">
      <summary>
            Gets or sets line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.LineLength">
      <summary>
            Gets or sets line length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.LineLengthProperty">
      <summary>
            Identifies the LineLength dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.ToString">
      <summary>
            Convert class description to string .
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.Visible">
      <summary>
            Gets or sets division ticks visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyle.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound">
      <summary>
            Axis tick style class for round views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound.TickMarkWidth">
      <summary>
            Gets or sets tick mark width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisTickStyleRound.TickMarkWidthProperty">
      <summary>
            Identifies the TickMarkWidth dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisX">
      <summary>
            X axis class
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.#ctor">
      <summary>
            Constructor for Form designer's list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisX.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.AllowScaling">
      <summary>
            Gets or sets if axis min and max values can be adjusted by user. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.AllowScalingProperty">
      <summary>
            Identifies the AllowScaling dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.Construct">
      <summary>
            Initialize members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CoordsToValues(System.Int32[],System.Double[]@,System.Boolean)">
      <summary>
            Convert X screen coordinates to values on X axis. 
            </summary>
      <param name="xValues">X values</param>
      <param name="xCoords">X screen coordinates</param>
      <param name="UseDIP">If true, xCoords is interpreted as coordinates in DIPs, otherwise in PX.</param>
      <returns>True if the coordinate was successfully converted.</returns>
      <exception cref="T:System.Exception">Throws exception if x coordinate is not over graph area.</exception>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CoordToValue(System.Int32,System.Double@,System.Boolean,System.Boolean)">
      <summary>
            Convert X screen coordinate (in DIPs or PX) to value on X axis. 
            </summary>
      <param name="xCoord">X screen coordinate</param>
      <param name="xValue">X value</param>
      <param name="rangeValidation">Limits coordinate in visible graph range. Does not validate sweeping gap either.</param>
      <param name="UseDIP">Defines if the xCoord parameter is interpreted as DIP's or PX.</param>
      <returns>True if the coordinate was successfully converted. Returns false if the coordinate range validation failed.
            graph area or it's over a sweeping gap.</returns>
      <exception cref="T:System.Exception">Throws exception if x coordinate is not over graph area.</exception>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateMajorTickStyle">
      <summary>
            Create major grid style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateMinorTickStyle">
      <summary>
            Create minor tick style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateScaleNib">
      <summary>
            Create scale nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.CreateUnits">
      <summary>
            Create units.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ExplicitAutoPlacementSide">
      <summary>
            Axis automatic location, when XAxisAutoPlacement is Explicit. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.Fit(System.Boolean@,System.Boolean)">
      <summary>
             Modifies the axis ranges so that all the data fits into the view. 
            </summary>
      <param name="scaleChanged">Defines if the scale was actually changed due to this operation.</param>
      <param name="thorough">Forces recalculation of the Min / Max values, instead of using cached values.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.GridSegmentIndex">
      <summary>
            Gets or sets the index of a segment to clip the grid dependency property. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.GridSegmentIndexProperty">
      <summary>
            Identify the index of a segment to clip the grid dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.LabelsPosition">
      <summary>
            Gets or sets labels position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.LabelsPositionProperty">
      <summary>
            Identifies the LabelsPosition dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.Position">
      <summary>
            Gets or sets axis placement as percents of the graph height. This is a dependency property.
            0 sets the axis in top edge, 50 in the middle and 100 in bottom edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScaleBreaks">
      <summary>
            Gets or sets ScaleBreaks. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScaleBreaksProperty">
      <summary>
            Identify the ScaleBreaks dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollingGap">
      <summary>
            Gets or sets scrolling gap, percents of graph width. This is a dependency property.
            Used when ScrollType is set to Scrolling.
            If this set to 0, scrolling occurs when scroll position reaches end of the X-axis.
            Valid range is 0...90 %
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollingGapProperty">
      <summary>
            Identifies the ScrollingGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollMode">
      <summary>
            Gets or sets scroll mode. This is a dependency property. In real-time monitoring, set 'Scrolling', 'Sweeping' or 'Stepping', and 
            give current monitoring position via ScrollPosition property. 
            If not real-time monitoring, but displaying data normally, you should set this to 'None'.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollModeProperty">
      <summary>
            Identifies the ScrollMode dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollPosition">
      <summary>
            Gets or sets current real-time scrolling position, in X axis values. This is a dependency property.
            This is intended to be updated by the real-time monitoring process. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollPositionProperty">
      <summary>
            Identifies the ScrollPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.SteppingInterval">
      <summary>
            Gets or sets stepping interval. This is a dependency property.
            Used when ScrollType is set to Stepping
            Current scrolling position, in number values (ValueType = Number) or seconds (ValueType = Time)
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.SteppingIntervalProperty">
      <summary>
            Identifies the SteppingInterval dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.SweepingGap">
      <summary>
            Gets or sets sweeping gap, percents of graph width. This is a dependency property.
            Used when ScrollType is set to Sweeping
            Valid range is 0...20 %
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.SweepingGapProperty">
      <summary>
            Identifies the SweepingGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.Title">
      <summary>
            Gets or sets axis title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.ToString">
      <summary>
            Converts object to string representation
            </summary>
      <returns>Object as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.Triggering">
      <summary>
            Gets or sets triggering options. Used when ScrollMode is 'Triggered'. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.TriggeringProperty">
      <summary>
            Identifies the Triggering dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.Units">
      <summary>
            Gets or sets axis units. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.UnitsProperty">
      <summary>
            Identifies the Units dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.ValuesToCoords(System.Double[],System.Boolean)">
      <summary>
            Converts X value to screen coordinates
            </summary>
      <param name="xValues">X values</param>
      <param name="UseDIP">If true return values are in DIPs, otherwise in PX.</param>
      <returns>X screen coordinates</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.ValueToCoord(System.Double,System.Boolean)">
      <summary>
            Converts X value to screen coordinate
            </summary>
      <param name="xValue">X value</param>
      <param name="UseDIP">Defines if the return value is in DIP's or PX.</param>
      <returns>X screen coordinate</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX.ValueToCoordD(System.Double,System.Boolean)">
      <summary>
            Converts X value to screen coordinate.
            Version that returns double instead of float.
            </summary>
      <param name="xValue">X value</param>
      <param name="UseDIP">Defines if the return value is in DIP's or PX.</param>
      <returns>X screen coordinate</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.VerticalAlign">
      <summary>
            Gets or sets axis alignment from its calculated position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX.XAxisExplicitAutoPlacementSideProperty">
      <summary>
            Identifies the XAxisExplicitAutoPlacementSide dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisX3D">
      <summary>
            3D X-axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.#ctor">
      <summary>
            Constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase,System.Boolean)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="isPrimary">Is this axis primary. If not primary, it's secondary.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.Location">
      <summary>
            Gets or sets set location manually. This selection is ignored when AutoLocation is used. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.Orientation">
      <summary>
            Gets or sets orientation plane of the axis bar and ticks. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisX3D.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisXCollection">
      <summary>
            Represents a collection of AxisX objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase">
      <summary>
            XY view axis base class.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowScaling">
      <summary>
            Gets or sets if axis min and max values can be adjusted by user. Draws scale nibs in the ends of the axis. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowScalingProperty">
      <summary>
            Identifies the AllowScaling dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowScrolling">
      <summary>
            Gets or sets if axis scrolling is allowed by mouse. Drag from axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowScrollingProperty">
      <summary>
            Identifies the AllowScrolling dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowSeriesDragDrop">
      <summary>
            Gets or sets if allow series adding to this axis by dragging it from other axis of this chart
            or from another chart's axis. Once the drag drop operation is complete, the series 
            is removed from the axis/chart where the drag begun and the series is assigned for the target axis.
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.AllowSeriesDragDropProperty">
      <summary>
            Identifies the AllowSeriesDragDrop dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.Construct">
      <summary>
            Initialize members. Implementation differs with WinForms slightly.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.CreateScaleNib">
      <summary>
            Create scale nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.Dispose(System.Boolean)">
      <summary>
            Dispose.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.Axes.AxisXYBase</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.DragSnapToDiv">
      <summary>
            Gets or sets if axis scrolling or scaling snaps to divisions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.DragSnapToDivProperty">
      <summary>
            Identifies the DragSnapToDiv dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.EndPointLabelsVisible">
      <summary>
            Gets or sets end point labels visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.EndPointLabelsVisibleProperty">
      <summary>
            Identifies the EndPointLabelsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.EndPointMajorTickThreshold">
      <summary>
            Gets or sets the number of major ticks that must be visible before end point labels are hidden. 
            -1 means end point labels will be visible regardless of how many major ticks are visible.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.EndPointMajorTickThresholdProperty">
      <summary>
            Identifies the EndPointMajorTickThreshold dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.GetActiveAxisArea">
      <summary>
            Get active axis area (in PX).
            </summary>
      <returns>Axis active rectangle with absolute coordinates [PX].</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.GetMajorTicks">
      <summary>
            Get major ticks for current axis range.
            </summary>
      <returns>Major tick positions, in ascending order.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.GridStripColor">
      <summary>
            Gets or sets grid strip color. 
            Views AxisLayout.AxisGridStrips property must define the strips to be used in order for this color to have any effect.
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.GridStripColorProperty">
      <summary>
            Identifies the GridStripColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Defines if mouse is over an item.
            </summary>
      <param name="x">Mouse X-coordinate.</param>
      <param name="y">Mouse Y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if mouse is over item, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.LabelTicksGap">
      <summary>
            Gets or sets gap between labels and ticks. Value in in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.LabelTicksGapProperty">
      <summary>
            Identifies the LabelTicksGap dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.m_cursorAxisScroll">
      <summary>
            Axis scrolling cursor 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.m_cursorNibScaleDrag">
      <summary>
            Scale dragging cursor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.OwnerView">
      <summary>
            Gets owner view.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.PanningEnabled">
      <summary>
            Gets or sets if panning is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.PanningEnabledProperty">
      <summary>
            Identifies the PanningEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.PreferEndPointLabelsOverNearbyMajorTick">
      <summary>
            Gets or sets end point labels visible preference over nearby major tick. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.PreferEndPointLabelsOverNearbyMajorTickProperty">
      <summary>
            Identifies the PreferEndPointLabelsOverNearbyMajorTick dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertEnabled">
      <summary>
            Gets or sets range revert state. Disable this if you don't want the RangeRevert operation to effect this axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertEnabledProperty">
      <summary>
            Identifies the RangeRevertEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertMaximum">
      <summary>
            Gets or sets range revert maximum. Sets axis Maximum to this value when Range revert operation is applied with mouse, or called by code. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertMaximumProperty">
      <summary>
            Identifies the RangeRevertMaximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertMinimum">
      <summary>
            Gets or sets range revert minimum. Sets axis Minimum to this value when Range revert operation is applied with mouse, or called by code. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.RangeRevertMinimumProperty">
      <summary>
            Identifies the RangeRevertMinimum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.Reversed">
      <summary>
            Gets or sets axis reversed. Set true if you want to have low values higher
            and the high values lower on the graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ReversedProperty">
      <summary>
            Identifies the Reversed dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ScaleNibs">
      <summary>
            Gets or sets scale nib appearance. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ScaleNibsProperty">
      <summary>
            Identifies the ScaleNibs dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.SetProperCursor">
      <summary>
            Set proper cursor. Default for dragging is hand and for resize SizeAll.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.StoreRangeRevertValues(System.Double,System.Double)">
      <summary>
            Store Revert values, minimum and maximum at same time.
            </summary>
      <param name="minimum">Minimum</param>
      <param name="maximum">Maximum</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ZoomingEnabled">
      <summary>
            Gets or sets if zooming is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ZoomingEnabledProperty">
      <summary>
            Identifies the ZoomingEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ZoomOrigin">
      <summary>
            Gets or sets zoom origin. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisXYBase.ZoomOriginProperty">
      <summary>
            Identifies the ZoomOrigin dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisY">
      <summary>
            Y-axis class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor">
      <summary>
            Constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,System.Boolean)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="attachToView">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>attachToView</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisY.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.Alignment">
      <summary>
            Gets or sets axis alignment from its calculated position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.AlignmentProperty">
      <summary>
            Identifies the Alignment dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.AllowAutoYFit">
      <summary>
            Gets or sets if automatic Y fitting is allowed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.AllowAutoYFitProperty">
      <summary>
            Identifies the AllowAutoYFit dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Construct">
      <summary>
            Initialize members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CoordsToValues(System.Single[],System.Double[]@,System.Boolean)">
      <summary>
            Convert screen coordinates to values.
            </summary>
      <param name="coordsY">Screen coordinates</param>
      <param name="values">Output values</param>
      <param name="UseDIP">If true, coordsY is interpreted as coordinates in DIPs, otherwise in PX.</param>
      <param name="useDIP">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useDIP</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CoordsToValues(System.Single[],System.Double[]@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if OK.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CoordToValue(System.Single,System.Double@,System.Boolean)">
      <summary>
            Convert screen coordinate to value.
            </summary>
      <param name="coordY">Y screen coordinate.</param>
      <param name="value">Output value.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if OK.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CreateScaleNib">
      <summary>
            Create scale nib.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.CreateUnits">
      <summary>
            Create units.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.ExplicitAutoPlacementSide">
      <summary>
            Axis automatic location, when YAxisAutoPlacement is Explicit. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Fit(System.Double,System.Boolean@,System.Boolean,System.Boolean)">
      <summary>
            Fit axis minimum and maxium to show all series values. Note that first argument's value type defines Margin's units (Pixels or Percents).
            </summary>
      <param name="marginPercents">Margin to leave between axis minimum or maximum and series values,
            in percents of minimum...maximum range.</param>
      <param name="scaleChanged">Method sets this true if Y-axis minimum or maximum has changed.</param>
      <param name="thorough">If true, all series points are searched, resulting to better accuracy, but with a cost raised CPU load.</param>
      <param name="ignoreLogZeros">Ignore zeros values from logarithmic axis fitting.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Fit(System.Double,System.Boolean@,System.Boolean,System.Boolean,System.Double,System.Double)">
      <summary>
            Fit axis minimum and maximum to show all series values, while keeping the range withing given limits.
            Note that first argument's value type defines Margin's units (Pixels or Percents).
            </summary>
      <param name="marginPercents">Margin to leave between axis minimum or maximum and series values,
            in percents of minimum...maximum range.</param>
      <param name="scaleChanged">Method sets this true if Y-axis minimum or maximum has changed.</param>
      <param name="thorough">If true, all series points are searched, resulting to better accuracy, but with a cost raised CPU load.</param>
      <param name="ignoreLogZeros">Ignore zeros values from logarithmic axis fitting.</param>
      <param name="limitMinimum">Minimum limit. If detected minimum is below limit minimum, the limit applies.</param>
      <param name="limitMaximum">Maximum limit. If detected minimum is below limit minimum, the limit applies.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Fit(System.Int32,System.Boolean@,System.Boolean,System.Boolean)">
      <summary>
            Fit axis minimum and maxium to show all series values. Note that first argument's value type defines Margin's units (Pixels or Percents).
            </summary>
      <param name="marginPixels">Margin to leave between data and segment boundaries,
            in pixels of minimum...maximum range.</param>
      <param name="scaleChanged">Method sets this true if Y-axis minimum or maximum has changed.</param>
      <param name="thorough">If true, all series points are searched, resulting to better accuracy, but with a cost raised CPU load.</param>
      <param name="ignoreLogZeros">Ignore zeros values from logarithmic axis fitting.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.Fit(System.Int32,System.Boolean@,System.Boolean,System.Boolean,System.Double,System.Double)">
      <summary>
            Fit axis minimum and maximum to show all series values, while keeping the range withing given limits.
            Note that first argument's value type defines Margin's units (Pixels or Percents).
            </summary>
      <param name="marginPixels">Margin to leave between data and segment boundaries,
            in pixels of minimum...maximum range.</param>
      <param name="scaleChanged">Method sets this true if Y-axis minimum or maximum has changed.</param>
      <param name="thorough">If true, all series points are searched, resulting to better accuracy, but with a cost raised CPU load.</param>
      <param name="ignoreLogZeros">Ignore zeros values from logarithmic axis fitting.</param>
      <param name="limitMinimum">Minimum limit. If detected minimum is below limit minimum, the limit applies.</param>
      <param name="limitMaximum">Maximum limit. If detected minimum is below limit minimum, the limit applies.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.GetBarsMinMaxOfThisYAxis(System.Double@,System.Double@,System.Boolean)">
      <summary>
            Get bar series minimum and maximum value, bound to this Y axis. 
            If stacked bar view is used, returns the highest stack sum.
            </summary>
      <param name="totalMin">Total minimum.</param>
      <param name="totalMax">Total maximum.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if successfully got.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.GetGraphSegmentTopAndHeight(System.Single@,System.Single@)">
      <summary>
            Gets the axis graph segment top and height in pixels.
            </summary>
      <param name="segmentTop">Segment top in pixels.</param>
      <param name="segmentHeight">Segment height in pixels.</param>
      <returns>True on successful result, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.GetSeriesMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum and maximum of all series that are using this axis.
            </summary>
      <param name="maximum">Maximum.</param>
      <param name="minimum">Minimum.</param>
      <returns>True if success. False if no data found.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.MiniScale">
      <summary>
            Gets or sets miniatyre scale symbol. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.MiniScaleProperty">
      <summary>
            Identifies the MiniScale dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.PaletteSeries">
      <summary>
            Gets or sets series from which palette is retrieved for Y value range. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.PaletteSeriesProperty">
      <summary>
            Identifies the PaletteSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.Position">
      <summary>
            Gets or sets axis placement as percents of the graph width. This is a dependency property.
            0 sets the axis in left edge, 50 in the middle and 100 in right edge.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.PositionOffset">
      <summary>
            Gets or sets position offset, which shifts the axis by pixel count set. This is a dependency property.
            It allows placing the axis for example outside the graph area, 
            handy feature when you have many Y axis and you don't want them to overlap series data. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.PositionOffsetProperty">
      <summary>
            Identifies the PositionOffset dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.SegmentIndex">
      <summary>
            Gets or sets axis segment index. Used only with YAxesLayout Segmented. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.SegmentIndexProperty">
      <summary>
            Identifies the SegmentIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.Title">
      <summary>
            Gets or sets axis title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.ToString">
      <summary>
            Converts object to string representation.
            </summary>
      <returns>Object as string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.Units">
      <summary>
            Gets or sets axis units. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.UnitsProperty">
      <summary>
            Identifies the Units dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY.UsePalette">
      <summary>
            Gets or sets if uses palette from referenced series for y-axis coloring. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.UsePaletteProperty">
      <summary>
            Identifies the UsePalette dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.ValuesToCoords(System.Double[],System.Boolean)">
      <summary>
            Convert values to Y-coordinates.
            </summary>
      <param name="values">Axis values.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY.ValueToCoord(System.Double,System.Boolean)">
      <summary>
            Convert value to Y-coordinate.
            </summary>
      <param name="value">Axis value.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Coordinate.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY.YAxisExplicitAutoPlacementSideProperty">
      <summary>
            Identifies the YAxisExplicitAutoPlacementSide dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisY3D">
      <summary>
            3D Y-axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.#ctor">
      <summary>
            Constructor for Form designer's list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase,System.Boolean)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="isPrimary">Is this axis primary. If not primary, it's secondary.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.Location">
      <summary>
            Gets or sets set location manually. This selection is ignored when AutoLocation is used. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.Orientation">
      <summary>
            Gets or sets orientation plane of the axis bar and ticks. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisY3D.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisYCollection">
      <summary>
            Represents a collection of AxisY objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisYCollection.#ctor">
      <summary>
            Constructor. Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D">
      <summary>
            3D Z-axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.#ctor">
      <summary>
            Constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase,System.Boolean)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="isPrimary">Is this axis primary. If not primary, it's secondary.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.Location">
      <summary>
            Gets or sets set location manually. This selection is ignored when AutoLocation is used. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.Orientation">
      <summary>
            Gets or sets orientation plane of the axis bar and ticks. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.AxisZ3D.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick">
      <summary>
            Custom axis tick.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.#ctor">
      <summary>
            Constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisBase)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisBase,System.Double,System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisValue">Value on axis.</param>
      <param name="labelText">Label text.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisBase,System.Double,System.String,System.Int32,System.Boolean,System.Windows.Media.Color,Arction.Wpf.ChartingMVVM.CustomTickStyle)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisValue">Value on axis.</param>
      <param name="color">Color.</param>
      <param name="tickLength">Tick length in pixels.</param>
      <param name="visible">Visibility.</param>
      <param name="style">Style, is grid or tick visible, or both.</param>
      <param name="labelText">Label text.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.AxisValue">
      <summary>
            Gets or sets value at axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.AxisValueProperty">
      <summary>
            Identifies the AxisValue dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.Color">
      <summary>
            Gets or sets the color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.LabelText">
      <summary>
            Gets or sets label text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.LabelTextProperty">
      <summary>
            Identifies the LabelText dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.LineLength">
      <summary>
            Gets or sets the line length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.LineLengthProperty">
      <summary>
            Identifies the TickLength dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.Style">
      <summary>
            Gets or sets the style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.Visible">
      <summary>
            Gets or sets the visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTickCollection">
      <summary>
            Represents a collection of CustomAxisTick objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.CustomAxisTickCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.FormatValueLabelEventArgs">
      <summary>
            Represents a class that provides arguments for the <see cref="E:Arction.Wpf.ChartingMVVM.Axes.AxisBase.FormatValueLabel" /> event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.FormatValueLabelEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of FormatValueLabelEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.FormatValueLabelEventArgs.Axis">
      <summary>
            Axis object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.FormatValueLabelEventArgs.Value">
      <summary>
            Axis tick value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.RangeChangedBaseEventArgs">
      <summary>
            Represents a base class for RangeChanged event argument classes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.RangeChangedBaseEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of RangeChangedBaseEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedBaseEventArgs.CancelRendering">
      <summary>
            Set 'true' to prevent flickering if you update the chart in the event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedBaseEventArgs.NewMax">
      <summary>
            X value, new maximum value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedBaseEventArgs.NewMin">
      <summary>
            Y value, new minimum value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.RangeChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the RangeChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.RangeChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of RangeChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedEventArgs.Axis">
      <summary>
            Axis object.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.RangeChangedPolarEventArgs">
      <summary>
            Represents a class that provides arguments for the RangeChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.RangeChangedPolarEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of RangeChangedPolarEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedPolarEventArgs.Axis">
      <summary>
            Axis object.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.RangeChangedSmithEventArgs">
      <summary>
            Represents a class that provides arguments for the RangeChanged event.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedSmithEventArgs.Axis">
      <summary>
            Axis object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedSmithEventArgs.CancelRendering">
      <summary>
            Set 'true' to prevent flickering if you update the chart in the event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.RangeChangedSmithEventArgs.NewReferenceValue">
      <summary>
            New reference value of the axis. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak">
      <summary>
            Exclude range for excluding defined values from axis values.
            Also contains Gap, which tells in DIPs, how large the range will be on window.
            The gap can be rendered by diagonal line or fill or just remain empty.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.#ctor">
      <summary>
            Constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisBase)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.#ctor(Arction.Wpf.ChartingMVVM.Axes.AxisBase,System.Double,System.Double,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Owner axis.</param>
      <param name="begin">Begin value.</param>
      <param name="end">End value.</param>
      <param name="gap">Gap in DIPs.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Begin">
      <summary>
            Gets or sets range Begin value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.BeginProperty">
      <summary>
            Identifies the Begin dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.CompareTo(Arction.Wpf.ChartingMVVM.Axes.ScaleBreak)">
      <summary>
            IComparison implementation based on Begin value. If Begin values are same, order is determined by End values.
            </summary>
      <param name="other">Other instance to compare to.</param>
      <returns>-1 if this is before other, 0 if equal (Begins are same), 1 of this is after other.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.DiagonalLineSpacing">
      <summary>
            Gets or sets gap of lines in pixels. Applied, if fill style is line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.DiagonalLineSpacingProperty">
      <summary>
            Identifies the DiagonalLineSpacing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Enabled">
      <summary>
            Gets or sets if range is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.End">
      <summary>
            Gets or sets range End value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.EndProperty">
      <summary>
            Identifies the End dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Fill">
      <summary>
            Gets or sets gap Fill. Applicable if Style is set to Fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Gap">
      <summary>
            Gets or sets gap of range in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.GapProperty">
      <summary>
            Identifies the Gap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.LineStyle">
      <summary>
            Gets or sets gap line style, if style is diagonal line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Overlap(Arction.Wpf.ChartingMVVM.Axes.ScaleBreak)">
      <summary>
            Tells if another ScaleBreaks overlaps this.
            </summary>
      <param name="excludeRange">Compared ScaleBreaks.</param>
      <returns>True, if overlaps, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.Style">
      <summary>
            Gets or sets gap style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreak.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.ScaleBreaksCollection">
      <summary>
            Represents a collection of ScaleBreaks objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.ScaleBreaksCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAmplitudeStringEventArgs">
      <summary>
            Represents a class that provides arguments for the SupplyCustomAmplitudeString event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAmplitudeStringEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SupplyCustomAmplitudeStringEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAmplitudeStringEventArgs.Value">
      <summary>
            Value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAmplitudeStringEventArgs.ValueAsString">
      <summary>
            Value as string.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs">
      <summary>
            Represents a class that provides arguments for the SupplyCustomAngleString event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SupplyCustomAngleStringEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs.Angle">
      <summary>
            Angle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs.AngleAsString">
      <summary>
            Angle as string.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomAngleStringEventArgs.LabelAngle">
      <summary>
            Angle the label text is drawn at.
            Modify this to change the angle.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomImgStringEventArgs">
      <summary>
            Imaginary value event arguments class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomImgStringEventArgs.#ctor(System.Double,Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase)">
      <summary>
            Constructor.
            </summary>
      <param name="angle">Imaginary value.</param>
      <param name="axis">Axis.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomImgStringEventArgs.ImgValue">
      <summary>
            Imaginary value. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomImgStringEventArgs.ImgValueAsString">
      <summary>
            Imaginary value as string.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomRealStringEventArgs">
      <summary>
            Axis value event arguments class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomRealStringEventArgs.#ctor(System.Double,Arction.Wpf.ChartingMVVM.Axes.AxisSmithBase)">
      <summary>
            Constructor.
            </summary>
      <param name="value">Real value.</param>
      <param name="axis">Axis.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomRealStringEventArgs.RealValue">
      <summary>
            Real value.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Axes.SupplyCustomRealStringEventArgs.RealValueAsString">
      <summary>
            Real value as string.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager">
      <summary>
            Chart manager handles charts co-operation.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="container">The component container.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.Charts">
      <summary>
            List of charts to be coordinated. Don't add items with form designer. Instead, use ChartManager property for each chart to assign the manager.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.MemoryGarbageCollecting">
      <summary>
            Use separate thread for forced garbage collection. 
            Increases data drawing smoothness, but causes some extra CPU overhead.
            Recommended to be used with multi-core processors.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.Name">
      <summary>
            Name of the component
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.SeriesDragFinished">
      <summary>
            Series dragging has finished on a chart, over an Y-axis. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.SeriesDragStarted">
      <summary>
            Series dragging has started on a chart
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.SeriesDragFinishedHandler">
      <summary>
            Delegate for SeriesDragFinished event 
            </summary>
      <param name="targetChart">Chart where the dragging has been finished</param>
      <param name="sourceChart">Chart where the dragging has been started</param>
      <param name="series">Series being dragged</param>
      <param name="targetYAxis">Y-axis where the dragging has been finished</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.ChartManager.ChartManager.SeriesDragStartedHandler">
      <summary>
            Delegate for SeriesDragStarted event. 
            </summary>
      <param name="chart">Chart where the dragging has been started.</param>
      <param name="series">Series being dragged.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalCartesian3D">
      <summary>
            Cylindrical / 3D cartesian coordinates converter class. 
            XZ plane is the reference plane (polar coordinates plane).
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint)">
      <summary>
            Convert cylindrical point to cartesian XYZ point.
            </summary>
      <param name="cylindricalPoint">Cylindrical point.</param>
      <returns>Cartesian point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint[0:,0:])">
      <summary>
            Convert cylindrical point array to a surface point array. Fills X, Y and Z fields of SurfacePoints.
            </summary>
      <param name="cylindricalPoints">Cylindrical points.</param>
      <returns>Surface point array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint[])">
      <summary>
            Convert cylindrical point array to a series point array. Fills X, Y and Z fields of SeriesPoints3D.
            </summary>
      <param name="cylindricalPoints">Cylindrical points.</param>
      <returns>Series point array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalCartesian3D.ToCylindrical(Arction.Wpf.ChartingMVVM.PointDouble3D)">
      <summary>
            Convert a cartesian XYZ point into cylindrical point.
            </summary>
      <param name="xyz">Cartesian point.</param>
      <returns>Cylindrical point.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint">
      <summary>
            Cylindrical point.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint.Angle">
      <summary>
            Heading angle. Also called as azimuth and absolute bearing.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint.Distance">
      <summary>
            Distance along XZ plane.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.CylindricalPoint.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalCartesian3D">
      <summary>
            Spherical to 3D cartesian coordinates converter class. 
            Assumes spherical data point to be defined in azimuth / elevation system coordinates. 
            For elevation, the XZ plane is the reference plane. (e.g. equatorial plane). Elevation is angle measured from that plane. 
            To apply values from polar inclination system, use formula Elevation = 90 - Inclination. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint)">
      <summary>
            Convert spherical point to cartesian XYZ point.
            </summary>
      <param name="sphericalPoint">Spherical point.</param>
      <returns>Cartesian point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint[0:,0:])">
      <summary>
            Convert spherical point array to a surface point array. Fills X, Y and Z fields of SurfacePoints
            </summary>
      <param name="sphericalPoints">Spherical points</param>
      <returns>Surface point array</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalCartesian3D.ToCartesian(Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint[])">
      <summary>
            Convert spherical point array to a series point array. Fills X, Y and Z fields of SeriesPoints3D.
            </summary>
      <param name="sphericalPoints">Spherical points.</param>
      <returns>Series point array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalCartesian3D.ToSpherical(Arction.Wpf.ChartingMVVM.PointDouble3D)">
      <summary>
            Convert a cartesian XYZ point into spherical point.
            </summary>
      <param name="xyz">Cartesian point.</param>
      <returns>Spherical point.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint">
      <summary>
            Spherical point.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint.Distance">
      <summary>
            Distance from origin (0, 0, 0).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint.ElevationAngle">
      <summary>
            Elevation angle.  
            Also called as Elevation or Altitude, measured from XZ plane. ElevationAngle is 90 degrees - Inclination angle. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CoordinateConverters.SphericalPoint.HeadingAngle">
      <summary>
            Heading angle. Also called as azimuth and absolute bearing.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries">
      <summary>
            Series type to invalidate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.PointlineSeries">
      <summary>
            Invalidate all Pointlineseries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.AreaSeries">
      <summary>
            Invalidate all AreaSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.HighlowSeries">
      <summary>
            Invalidate All HighlowSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.FreeformPointlineSeries">
      <summary>
            Invalidate All FreeformPointlineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.ChartEventMarker">
      <summary>
            Invalidate All ChartEventMarkers
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.LineCollections">
      <summary>
            Invalidate All LineCollections
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.SampleDataBlockSeries">
      <summary>
            Invalidate SampleDataBlockSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.SampleDataSeries">
      <summary>
            Invalidate SampleDataSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.DigitallineSeries">
      <summary>
            Invalidate DigitalLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.StockSeries">
      <summary>
            Invalidate StockSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.BarSeries">
      <summary>
            Invalidate BarSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.IntensityGridSeries">
      <summary>
            Invalidate IntensityGridSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.IntensityMeshSeries">
      <summary>
            Invalidate IntensityMeshSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.PolygonSeries">
      <summary>
            Invalidate PolygonSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.LiteFreeFormLineSeries">
      <summary>
            Invalidate LiteFreeFormLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.LiteLineSeries">
      <summary>
            Invalidate LiteLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries.AllSeries">
      <summary>
            Invalidate AllSeries
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange">
      <summary>
            Series property to change
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange.Lines">
      <summary>
            Lines of series
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange.Points">
      <summary>
            Points of Series
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange.Fill">
      <summary>
            Fill of series
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange.ShowYAxisRange">
      <summary>
            Show Y axis range indicator
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.PropertyToChange.AutoFit">
      <summary>
            AutoFit
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar">
      <summary>
            ZoomBar UserControl
            ZoomBar user control can be placed in to application and use reference to Zoom LightningChart.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.#ctor">
      <summary>
            ZoomBar Control for controlling referenced Chart
            ZoomBar control Shows you full x range of selected chart data.
            You can Zoom referenced chart with ZoomBar control easily.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.#ctor(Arction.Wpf.ChartingMVVM.LightningChart@)">
      <summary>
            ZoomBar Control for controlling referenced Chart
            ZoomBar control Shows you full x range of selected chart data.
            You can Zoom referenced chart with ZoomBar control easily.
            </summary>
      <param name="chart">Reference of LightningChart instance</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.#ctor(Arction.Wpf.ChartingMVVM.LightningChart@,Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions)">
      <summary>
            ZoomBar Control for controlling referenced Chart
            ZoomBar control Shows you full x range of selected chart data.
            You can Zoom referenced chart with ZoomBar control easily.
            </summary>
      <param name="chart">Reference of LightningChart instance</param>
      <param name="zoom">ZoomBarOptions</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToAreaSeries(System.Int32,Arction.Wpf.ChartingMVVM.AreaSeriesPoint[])">
      <summary>
            Updates AreaSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the Area Series</param>
      <param name="data">Area series data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToBarSeries(System.Int32,System.Double,System.Double,System.String)">
      <summary>
            Updates BarSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the BarSeries</param>
      <param name="xval">X-value for the bar</param>
      <param name="yval">Y-value for the bar</param>
      <param name="text">Label text for the bar</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToChartEventMarkers(Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker)">
      <summary>
            Updates ChartEventMarkers in a real-time chart.
            </summary>
      <param name="data">Chart event marker to be added</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToDigitalLineSeries(System.Int32,System.UInt32[])">
      <summary>
            Updates DigitalLineSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the DigitalLineSeries</param>
      <param name="data">Data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToFreeformPointLineSeries(System.Int32,System.Double[],System.Double[])">
      <summary>
            Updates FreeformPointLineSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the FreeformPointLineSeries</param>
      <param name="dataX">Data point X-value array</param>
      <param name="dataY">Data point Y-value array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToHighLowSeries(System.Int32,Arction.Wpf.ChartingMVVM.HighLowSeriesPoint[])">
      <summary>
            Updates HighLowSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the HighLowSeries</param>
      <param name="data">HighLow data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToLineCollections(System.Int32,Arction.Wpf.ChartingMVVM.SegmentLine[])">
      <summary>
            Updates Line Collections with new line segments in a real-time chart.
            </summary>
      <param name="index">Index of the LineCollection</param>
      <param name="data">Segment line to be added</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToLiteFreeFormLineSeries(System.Int32,System.Double[0:,0:])">
      <summary>
            Updates LiteFreeformLineSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the LiteFreeformLineSeries</param>
      <param name="data">Data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToLiteLineSeries(System.Int32,System.Double[0:,0:])">
      <summary>
            Updates LiteLineSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the LiteLineSeries</param>
      <param name="data">Data point array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToPointLineSeries(System.Int32,Arction.Wpf.ChartingMVVM.SeriesPoint[])">
      <summary>
            Updates PointLineSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the PointLineSeries</param>
      <param name="data">Data point array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToSampleDataBlockSeries(System.Int32,System.Single[])">
      <summary>
            Updates SampleDataBlockSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the SampleDataBlockSeries</param>
      <param name="data">Sample data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToSampleDataSeries(System.Int32,System.Double[])">
      <summary>
            Updates SampleDataSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the SampleDataSeries</param>
      <param name="data">Data samples as double array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToSampleDataSeries(System.Int32,System.Single[])">
      <summary>
            Updates SampleDataSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the SampleDataSeries</param>
      <param name="data">Data samples as float array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.AddDataToStockSeries(System.Int32,Arction.Wpf.ChartingMVVM.StockSeriesData[])">
      <summary>
            Updates StockSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the StockSeries</param>
      <param name="data">Stock series data array</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.BeginUpdate">
      <summary>
            BeginUpdate for real-time ZoomBar. Disables updating control when a property has been changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.Dispose">
      <summary>
            Disposes the control.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.DoAutoScale">
      <summary>
            Automatically adjusts the axis ranges to fit all the data on the chart.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.EndUpdate">
      <summary>
            EndUpdate for real-time ZoomBar. Enables updating control.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.GetInnerChart">
      <summary>
            Gets the inner LightningChart object.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.GetInnerChart</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.Invalidate(Arction.Wpf.ChartingMVVM.CustomControls.InvalidateSeries)">
      <summary>
            Invalidates specific series types.
            </summary>
      <param name="IS">Series type to update.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.InvalidateYAxis">
      <summary>
            Invalidates the Zoom bar's Y-axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.UpdateDataToSampleDataSeries(System.Int32,System.Double[],System.Int32)">
      <summary>
            Updates SampleDataSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the SampleDataSeries</param>
      <param name="data">Data samples as double array</param>
      <param name="FirstIndex">First index where to insert data</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.UpdateDataToSampleDataSeries(System.Int32,System.Single[],System.Int32)">
      <summary>
            Updates SampleDataSeries with new data points in a real-time chart.
            </summary>
      <param name="index">Index of the SampleDataSeries</param>
      <param name="data">Data samples as float array</param>
      <param name="FirstIndex">First index where to insert data</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.UpdateReference(Arction.Wpf.ChartingMVVM.LightningChart@)">
      <summary>
            Updates which LightningChart instance is being referenced.
            </summary>
      <param name="chart">LightningChart instance</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.UpdateReference(Arction.Wpf.ChartingMVVM.LightningChart@,Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions)">
      <summary>
            Updates which LightningChart instance is being referenced.
            </summary>
      <param name="chart">LightningChart instance</param>
      <param name="options">Zoom bar options</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBar.ZoomBarOptions">
      <summary>
            Options to control the Zoom bar's behaviour.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions">
      <summary>
            Zoom Bar options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AutoFitForAllData">
      <summary>
            Automatically fits Zoom bar to show all data.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AutoScaleForDataAdding">
      <summary>
            Fits Zoom bar automatically when new data is added.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PropertyChangedInOptions)">
      <summary>
            Raise PropertyChanged <inheritdocOptions /></summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PropertyChangedInOptions)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.SeriesToUse">
      <summary>
            Series to be used in the Zoom bar.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ShowYAxisRange">
      <summary>
            Fits Zoom bar vertically to show all data.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.Zoomlevel">
      <summary>
            Mouse wheel zoom level
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries">
      <summary>
            Series to be shown in the Zoom bar.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.#ctor">
      <summary>
            What series is activated for ZoomBar
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.AreaSeries">
      <summary>
            AreaSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.BarSeries">
      <summary>
            BarSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.ChartEventMarkers">
      <summary>
            ChartEventMarkers
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.DigitalLineSeries">
      <summary>
            DigitalLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.FreeformPointlineSeries">
      <summary>
            FreeformPointlineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.HighlowSeries">
      <summary>
            HighlowSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.IntensityGridSeries">
      <summary>
            IntensityGridSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.IntensityMeshSeries">
      <summary>
            IntensityMeshSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.LineCollections">
      <summary>
            LineCollections
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.LiteFreeFormLineSeries">
      <summary>
            LiteFreeFormPointLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.LiteLineSeries">
      <summary>
            LiteLineSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.PointlineSeries">
      <summary>
            PointLinesSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.PolygonSeries">
      <summary>
            PolygonSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.SampleDataBlockSeries">
      <summary>
            SampleDataBlockSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.SampleDataSeries">
      <summary>
            SampleDataSeries
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.ActivatedSeries.StockSeries">
      <summary>
            StockSeries
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased">
      <summary>
            For AreaSeries based series
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.FillVisible">
      <summary>
            Points visibility
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.LineVisible">
      <summary>
            Line visibility
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.PropertyChangedInOptions)">
      <summary>
            Raise PropertyChanged <inheritdocOptions /></summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.PropertyChangedInOptions)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.PointsVisible">
      <summary>
            Points visibility
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.AreaSeriesBased.PropertyChangedInOptions">
      <summary>
            Error message event class
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines">
      <summary>
            For PointLine based series
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.LineVisible">
      <summary>
            Line visibility
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.PropertyChangedInOptions)">
      <summary>
            Raise PropertyChanged <inheritdocOptions /></summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.OnPropertyChanged(Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.PropertyChangedInOptions)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.PointsVisible">
      <summary>
            Points visibility
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PointsAndLines.PropertyChangedInOptions">
      <summary>
            Error message event class
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.CustomControls.ZoomBarOptions.PropertyChangedInOptions">
      <summary>
            Error message event class
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar">
      <summary>
            Result table showing information about the closest data value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeBorderColor">
      <summary>
            AmplitudeBorderColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeBorderColorProperty">
      <summary>
            Identifies the AmplitudeBorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelBackground">
      <summary>
            AmplitudeLabelBackground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelBackgroundProperty">
      <summary>
            Identifies the AmplitudeLabelBackground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelDynamicColor">
      <summary>
            AmplitudeLabelDynamicColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelDynamicColorProperty">
      <summary>
            Identifies the AmplitudeLabelDynamicColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelForeground">
      <summary>
            AmplitudeLabelForeground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelForegroundProperty">
      <summary>
            Identifies the AmplitudeLabelForeground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelVisible">
      <summary>
            AmplitudeLabelVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLabelVisibleProperty">
      <summary>
            Identifies the AmplitudeLabelVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLineStyle">
      <summary>
            AmplitudeLineStyle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLineStyleProperty">
      <summary>
            Identifies the AmplitudeLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLineVisible">
      <summary>
            AmplitudeLineVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AmplitudeLineVisibleProperty">
      <summary>
            Identifies the AmplitudeLineVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleBorderColor">
      <summary>
            AngleBorderColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleBorderColorProperty">
      <summary>
            Identifies the AngleBorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelBackground">
      <summary>
            AngleLabelBackground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelBackgroundProperty">
      <summary>
            Identifies the AngleLabelBackground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelDynamicColor">
      <summary>
            AngleLabelDynamicColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelDynamicColorProperty">
      <summary>
            Identifies the AngleLabelDynamicColor dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelForegroundProperty">
      <summary>
            Identifies the AngleLabelForeground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelForegroundVisible">
      <summary>
            AngleLabelForeground. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelVisible">
      <summary>
            Angle label visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLabelVisibleProperty">
      <summary>
            Identifies the AngleLabel visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLineStyle">
      <summary>
            AmplitudeLineStyle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLineStyleProperty">
      <summary>
            Identifies the AngleLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLineVisible">
      <summary>
            AngleLineVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.AngleLineVisibleProperty">
      <summary>
            Identifies the AngleLineVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigurePolar.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith">
      <summary>
            Result table showing information about the closest data value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgBorderColor">
      <summary>
            ImgBorderColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgBorderColorProperty">
      <summary>
            Identifies the ImgBorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelBackground">
      <summary>
            ImgLabelBackground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelBackgroundProperty">
      <summary>
            Identifies the ImgLabelBackground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelDynamicColor">
      <summary>
            ImgLabelDynamicColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelDynamicColorProperty">
      <summary>
            Identifies the ImgLabelDynamicColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelForeground">
      <summary>
            ImgLabelForeground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelForegroundProperty">
      <summary>
            Identifies the ImgLabelForeground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelVisible">
      <summary>
            ImgLabelVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLabelVisibleProperty">
      <summary>
            Identifies the ImgLabelVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLineStyle">
      <summary>
            ImgLineStyle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLineStyleProperty">
      <summary>
            Identifies the ImgLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLineVisible">
      <summary>
            ImgLineVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ImgLineVisibleProperty">
      <summary>
            Identifies the ImgLineVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealBorderColor">
      <summary>
            RealBorderColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealBorderColorProperty">
      <summary>
            Identifies the RealBorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelBackground">
      <summary>
            RealLabelBackground. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelBackgroundProperty">
      <summary>
            Identifies the RealLabelBackground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelDynamicColor">
      <summary>
            RealLabelDynamicColor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelDynamicColorProperty">
      <summary>
            Identifies the RealLabelDynamicColor dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelForegroundProperty">
      <summary>
            Identifies the RealLabelForeground dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelForegroundVisible">
      <summary>
            RealLabelForeground. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelVisible">
      <summary>
            Real label visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLabelVisibleProperty">
      <summary>
            Identifies the RealLabel visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLineStyle">
      <summary>
            ImgLineStyle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLineStyleProperty">
      <summary>
            Identifies the RealLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLineVisible">
      <summary>
            RealLineVisible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.RealLineVisibleProperty">
      <summary>
            Identifies the RealLineVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ConfigureSmith.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor">
      <summary>
            DataCursor shows information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.LabelFont">
      <summary>
            Gets and sets Label font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.LabelFontProperty">
      <summary>
            Identifies the LabelFont dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.Results">
      <summary>
            Gets and sets the result table properties. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ResultsProperty">
      <summary>
            Identifies the Results dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowColorIndicator">
      <summary>
            Gets and sets if the Color Indicator is shown above the result table. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowColorIndicatorProperty">
      <summary>
            Identifies the ShowColorIndicator dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowHaircrossLines">
      <summary>
            Gets and sets if haircross lines are shown. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowHaircrossLinesProperty">
      <summary>
            Identifies the ShowHaircrossLines dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowLabels">
      <summary>
            Gets and sets if the axis labels are shown. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowLabelsProperty">
      <summary>
            Identifies the ShowLabels dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowResultTable">
      <summary>
            Gets and sets if theresult table is shown. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowResultTableProperty">
      <summary>
            Identifies the ShowResultTable dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowTag">
      <summary>
            Gets and sets if tag field is shown in the result table. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowTagProperty">
      <summary>
            Identifies the ShowTag dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowTrackingPoint">
      <summary>
            Gets and sets if tracking point is shown. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ShowTrackingPointProperty">
      <summary>
            Identifies the ShowTrackingPoint dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.SnapToNearestDataPoint">
      <summary>
            Gets and sets if cursor is snapped to the nearest data point. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.SnapToNearestDataPointProperty">
      <summary>
            Identifies the SnapToNearestDataPoint dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.strTag">
      <summary>
            Gets and sets the tag field name shown in the result table if ShowTag is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.strTagProperty">
      <summary>
            Identifies the strTag dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.Visible">
      <summary>
            Gets and sets the data cursor's visible state. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D">
      <summary>
            DataCursor shows information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.IndicatorLength">
      <summary>
            Axis value indicator length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.IndicatorLengthProperty">
      <summary>
            Identifies the IndicatorLength dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.IndicatorWidth">
      <summary>
            Axis value indicator width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.IndicatorWidthProperty">
      <summary>
            Identifies the IndicatorLength dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.LineStyle">
      <summary>
            Gets and sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.TrackingPointStyleProperty">
      <summary>
            Identifies the TrackSeriesPixelTolerance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.TrackSeries">
      <summary>
            Track series following its line. Applicable to LineSeries. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.TrackSeriesPixelTolerance">
      <summary>
            Pixel tolerance for series line tracking. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.TrackSeriesPixelToleranceProperty">
      <summary>
            Identifies the TrackSeriesPixelTolerance dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursor3D.TrackSeriesProperty">
      <summary>
            Identifies the TrackSeries dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar">
      <summary>
            DataCursor shows information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.Configure">
      <summary>
            Configure. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.ConfigureProperty">
      <summary>
            Identifies the Configure dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.GetAngleAndAmplitude">
      <summary>
            Returns angle and amplitude values at the cursor's position.
            </summary>
      <returns>PointDouble3D</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.ShowPolarAxisIndicator">
      <summary>
            ShowPolarAxisIndicator. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.ShowPolarAxisIndicatorProperty">
      <summary>
            Identifies the ShowPolarAxisIndicator dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.TrackingPointStyle">
      <summary>
            Gets and sets tracking point style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorPolar.TrackingPointStyleProperty">
      <summary>
            Identifies the TrackingPointStyle dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith">
      <summary>
            DataCursor shows information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.Configure">
      <summary>
            Configure. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.ConfigureProperty">
      <summary>
            Identifies the Configure dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.GetImgAndReal">
      <summary>
            Returns Real and Imaginary values at the cursor's position.
            </summary>
      <returns>PointDouble3D</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.ShowSmithAxisIndicator">
      <summary>
            ShowPolarAxisIndicator. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.ShowSmithAxisIndicatorProperty">
      <summary>
            Identifies the ShowPolarAxisIndicator dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.TrackingPointStyle">
      <summary>
            Gets and sets tracking point style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorSmith.TrackingPointStyleProperty">
      <summary>
            Identifies the TrackingPointStyle dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY">
      <summary>
            DataCursor shows information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.LineStyle">
      <summary>
            Gets and sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.TrackingPointStyle">
      <summary>
            Gets and sets tracking point style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.DataCursorXY.TrackingPointStyleProperty">
      <summary>
            Identifies the TrackingPointStyle dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable">
      <summary>
            Result table showing information about the closest data value to the mouse cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.Background">
      <summary>
            Gets and sets the background fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.BackgroundProperty">
      <summary>
            Identifies the Background dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.Border">
      <summary>
            Gets and sets the border. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.DataRowFont">
      <summary>
            Gets and sets data row text font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.DataRowFontProperty">
      <summary>
            Identifies the DataRowFont dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.Padding">
      <summary>
            Gets and sets the empty space between the border and internal visuals. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.PaddingProperty">
      <summary>
            Identifies the Padding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.RotateAngle">
      <summary>
            Rotation angle in degrees. The rotation is done around the element's closest corner point. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.RotateAngleProperty">
      <summary>
            Identifies the RotateAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.TextColor">
      <summary>
            Text color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.TextColorProperty">
      <summary>
            Identifies the TextColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.TitleFont">
      <summary>
            Gets and sets the title text font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.TitleFontProperty">
      <summary>
            Identifies the TitleFont dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.UseSeriesTitleColor">
      <summary>
            Use series title color instead of TextColor property in the texts. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.DataCursor.ResultTable.UseSeriesTitleColorProperty">
      <summary>
            Identifies the UseSeriesTitleColor dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker">
      <summary>
            Chart event marker class. You can mark some interesting event with a marker, which can 
            be a of great value later on.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.PointShapeStyle,Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition,System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisX,System.Double,Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle,Arction.Wpf.ChartingMVVM.PointInt)">
      <summary>
            Chart event marker constructor. 
            </summary>
      <param name="xValue">X value.</param>
      <param name="label">Label.</param>
      <param name="bindToXAxis">If true, set X-axis value with xValue.
            <param name="axisX">X-axis to bind.</param>
            Otherwise the marker is only positioned using Offset coordinates.</param>
      <param name="offset">Offset.</param>
      <param name="ownerView">ViewXY that owns this object.</param>
      <param name="symbol">Symbol options.</param>
      <param name="verticalPos">Vertical position.</param>
      <param name="axisX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.PointShapeStyle,Arction.Wpf.ChartingMVVM.ChartEventMarkerVerticalPosition,System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisX,System.Double,Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle,Arction.Wpf.ChartingMVVM.PointInt)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.AssignXAxisIndex">
      <summary>
            Gets or sets index of X axis assigned to this series. Give -1 when you don't want to assign it yet to any X axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.AssignXAxisIndexProperty">
      <summary>
            Identifies the AssignXAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.BindToXAxis">
      <summary>
            Gets or sets if the marker is bound to X axis by XValue. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.BindToXAxisProperty">
      <summary>
            Identifies the BindToXAxis dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.ClipInsideXRange">
      <summary>
            Gets or sets if clips inside X axis range. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.ClipInsideXRangeProperty">
      <summary>
            Identifies the ClipInsideXRange dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.CreateSymbol">
      <summary>
            Create symbol. 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.PositionChanged">
      <summary>
            Event marker X or Y value has been changed
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position as axis values.
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.Symbol">
      <summary>
            Gets or sets marker symbol. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.SymbolProperty">
      <summary>
            Identifies the Symbol dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.VerticalPosition">
      <summary>
            Gets or sets event marker vertical position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.VerticalPositionProperty">
      <summary>
            Identifies the VerticalPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.XValue">
      <summary>
            Gets or sets X value of marker. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.XValueProperty">
      <summary>
            Identifies the XValue dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.ChartEventMarker.PositionChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the PositionChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the PositionChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1">
      <summary>
            Event marker common base class for XY and polar chart.
            </summary>
      <typeparam name="SYMBOL">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>SYMBOL</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.ClipInsideGraph">
      <summary>
            Gets or sets if Marker is clipped inside graph area. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.ClipInsideGraphProperty">
      <summary>
            Identifies the ClipInsideGraph dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.CreateLabel">
      <summary>
            Create label.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.CreateOffset">
      <summary>
            Create offset.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.CreateSymbol">
      <summary>
            Create symbol. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing"> True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Defines if mouse is over an item.
            </summary>
      <param name="x">Mouse X-coordinate.</param>
      <param name="y">Mouse Y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if mouse is over item, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.Label">
      <summary>
            Gets or sets label. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.LabelProperty">
      <summary>
            Identifies the Label dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.m_cursorDragging">
      <summary>
            Cursor under dragging. Override this if needed
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.Offset">
      <summary>
            Gets or sets symbol offset from it's designated position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position as axis values.
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.Visible">
      <summary>
            Gets or sets is event marker visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerCommonBase`1.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill">
      <summary>
            Fill class that can be applied to a rectangle.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.Bitmap">
      <summary>
            Gets or sets bitmap fill options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.BitmapProperty">
      <summary>
            Identifies the Bitmap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.Color">
      <summary>
            Gets or sets fill color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.CreateBitmapFill">
      <summary>
            Create bitmap fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientColor">
      <summary>
            Gets or sets gradient color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientColorProperty">
      <summary>
            Identifies the GradientColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientDirection">
      <summary>
            Gets or sets gradient direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientDirectionProperty">
      <summary>
            Identifies the GradientDirection dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientFill">
      <summary>
            Gets or sets gradient type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.GradientFillProperty">
      <summary>
            Identifies the GradientFill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.Style">
      <summary>
            Gets or sets fill style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.EventMarkerFill.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker">
      <summary>
            Polar event marker class. You can mark some interesting event with a marker, which can 
            be a of great value later on.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,Arction.Wpf.ChartingMVVM.PointShapeStyle,System.Double,System.Double,Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle,Arction.Wpf.ChartingMVVM.PointInt)">
      <summary>
            Polar event marker constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axis">Axis to connect to.</param>
      <param name="symbol">Symbol options.</param>
      <param name="angleValue">Angle value.</param>
      <param name="amplitude">Amplitude.</param>
      <param name="label">Label.</param>
      <param name="offset">Offset.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.Amplitude">
      <summary>
            Gets or sets amplitude of event. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.AmplitudeProperty">
      <summary>
            Identifies the Amplitude dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.AngleValue">
      <summary>
            Gets or sets angle value of event. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.AngleValueProperty">
      <summary>
            Identifies the AngleValue dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.AssignPolarAxisIndex">
      <summary>
            Gets or sets index of polar axis assigned to this series. Give -1 when you don't want to assign it yet to any axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.AssignPolarAxisIndexProperty">
      <summary>
            Identifies the AssignPolarAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.CenterClipping">
      <summary>
            Gets or sets how the marker should be clipped at the center of the graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.CenterClippingProperty">
      <summary>
            Identifies the CenterClipping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.EmitPositionChanged">
      <summary>
            Occurs when position is changed.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.EmitPositionChanged</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.PositionChanged">
      <summary>
            Occurs when the X-axis position of the event marker has changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position.
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.PolarEventMarker.PositionChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the PositionChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the CheckBoxStateChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.PolarPositionChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PolarPositionChangedEventArgs.#ctor">
      <summary>
            Polar Position Changed EventArgs.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedChartEventMarkerEventArgs">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedChartEventMarkerEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of PositionChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedChartEventMarkerEventArgs.Marker">
      <summary>
            Marker.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedChartEventMarkerEventArgs.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of PositionChangedSeriesEventMarkerEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs.CancelRendering">
      <summary>
            Set 'true' to prevent flickering if you update the chart in the event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs.Marker">
      <summary>
            Marker.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs.X">
      <summary>
            X value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.PositionChangedSeriesEventMarkerEventArgs.Y">
      <summary>
            Y value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase">
      <summary>
            Polar event marker base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.CreateSymbol">
      <summary>
            Create symbol. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.EmitPositionChanged">
      <summary>
            Occurs when position is changed.
            </summary>
      <returns>True if CancelRendering was set to true.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.GetSnapSeries">
      <summary>
             Getter of the series for the marker to snap to. 
            </summary>
      <returns>
             Current series the snapping is enabled to, if set. Null if none is set. 
            </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SetSnapSeries(Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound)">
      <summary>
             Setter of the series for the marker to snap to. 
            </summary>
      <param name="snapSeries">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>snapSeries</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SetSnapSeries(Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SnapSeries">
      <summary>
             Snapping series selector. The selected series is snapped to, if 
             the SnapMode is set to Selected. Otherwise this has no meaning. 
             The Series must be of this view. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SnapToClosestPoint">
      <summary>
            Gets or sets marker snap type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SnapToClosestPointProperty">
      <summary>
            Identifies the RealValue value dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.Symbol">
      <summary>
            Gets or sets marker symbol. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.SymbolProperty">
      <summary>
            Identifies the Symbol dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.MarkerSnapToType">
      <summary>
            Marker snap type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.MarkerSnapToType.None">
      <summary>
             Marker does not snap to any series points. 
             Snapping disabled. This is usually the default and the fastest
             option. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.MarkerSnapToType.Selected">
      <summary>
             Marker snaps to the closest point of a selected series. 
             Selected series can be set by using SetSnappingSeries method. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundEventMarkerBase.MarkerSnapToType.All">
      <summary>
            Marker snaps to the closest point of any active and visible series. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
      <typeparam name="P">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>P</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2</parameter>
          </include>
        </markup>
      </typeparam>
      <typeparam name="M">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>M</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2.#ctor">
      <summary>
            Creates and initializes a new instance of PositionChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2.Marker">
      <summary>
            Marker.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.RoundPositionChangedEventArgs`2.NewPosition">
      <summary>
             New position of the marker.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker">
      <summary>
            Event marker that can be attached to a series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY)">
      <summary>
            Series event marker constructor. 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY,Arction.Wpf.ChartingMVVM.SeriesMarkerPointShapeStyle,Arction.Wpf.ChartingMVVM.SeriesEventMarkerVerticalPosition,System.Double,System.Double,Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle)">
      <summary>
            Series event marker constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="symbol">Symbol.</param>
      <param name="verticalPos">Vertical position.</param>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="label">Label.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.CreateSymbol">
      <summary>
            Create symbol. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.GetOwnerSeries">
      <summary>
            Get the series who owns this marker. 
            </summary>
      <returns>Owner series.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.HorizontalPosition">
      <summary>
            Gets or sets horizontal position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.HorizontalPositionProperty">
      <summary>
            Identifies the HorizontalPosition dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is mouse over item.
            </summary>
      <param name="x">Mouse X-coordinate</param>
      <param name="y">Mouse Y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if mouse is over item, false otherwise.</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.PositionChanged">
      <summary>
            Event marker X or Y value has been changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position as axis values.
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.Symbol">
      <summary>
            Gets or sets marker symbol. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.SymbolProperty">
      <summary>
            Identifies the Symbol dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.VerticalPosition">
      <summary>
            Gets or sets vertical position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.VerticalPositionProperty">
      <summary>
            Identifies the VerticalPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.XValue">
      <summary>
            Gets or sets X value of marker. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.XValueProperty">
      <summary>
            Identifies the XValue dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.YValue">
      <summary>
            Gets or sets Y value of marker. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.YValueProperty">
      <summary>
            Identifies the YValue dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.SeriesEventMarker.PositionChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the PositionChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the PositionChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker">
      <summary>
            Polar event marker class. You can mark some interesting event with a marker, which can 
            be a of great value later on.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith,Arction.Wpf.ChartingMVVM.PointShapeStyle,System.Double,System.Double,Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle,Arction.Wpf.ChartingMVVM.PointInt)">
      <summary>
            Polar event marker constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axis">Axis to connect to.</param>
      <param name="symbol">Symbol options.</param>
      <param name="RealValue">Real value.</param>
      <param name="ImgValue">Imaginary value.</param>
      <param name="label">Label.</param>
      <param name="offset">Offset.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.EmitPositionChanged">
      <summary>
            Occurs when position is changed
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.EmitPositionChanged</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.ImgValue">
      <summary>
            Gets or sets angle value of event. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.ImgValueProperty">
      <summary>
            Identifies the Imaginary value dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.PositionChanged">
      <summary>
            Occurs when the position of the event marker has changed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.RealValue">
      <summary>
            Gets or sets amplitude of event. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.RealValueProperty">
      <summary>
            Identifies the RealValue value dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position.
            </summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="finalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>finalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker.PositionChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the PositionChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the CheckBoxStateChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.EventMarkers.SmithPositionChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.EventMarkers.SmithPositionChangedEventArgs.#ctor">
      <summary>
            Smith Position Changed EventArgs.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.EventMarkers.SmithPositionChangedEventArgs.NewPosition">
      <summary>
             New position of the marker.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Extensions.Extensions">
      <summary>
            Public extensions methods. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DegToRad(System.Double)">
      <summary>
            Convert given angle in degrees to radians. 
            </summary>
      <param name="Deg">Angle in degrees</param>
      <returns>Corresponding angle in radians.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DegToRad(System.Single)">
      <summary>
            Convert given angle in degrees to radians. 
            </summary>
      <param name="Deg">Angle in degrees</param>
      <returns>Corresponding angle in radians.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DipToPx(Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
             Converts given coordinates defined in DIP (Device Independent Pixels) to PX (Screen pixels) values using system DPI settings. 
            </summary>
      <param name="dip">Coordinates to convert, defined in DIPs.</param>
      <returns>Converted coordinates in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DipToPx(System.Drawing.RectangleF)">
      <summary>
             Converts given rectangle size and position defined in DIP (Device Independent Pixels) to PX (Screen pixels) 
             values using system DPI settings. 
            </summary>
      <param name="Dip">Rectangle to convert, defined in DIPs.</param>
      <returns>Converted rectangle in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DipToPx(System.Int32,System.Boolean)">
      <summary>
             Converts given DIP (Device Independent Pixels) values to PX (Screen pixels) using system DPI settings. 
            </summary>
      <param name="DIP">Value to convert in DIPs</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.DipToPx(System.Single,System.Boolean)">
      <summary>
             Converts given DIP (Device Independent Pixels) values to PX (Screen pixels) using system DPI settings. 
            </summary>
      <param name="DIP">Value to convert in DIPs</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in PX.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.ItemsToString(System.Collections.IList)">
      <summary>
            Convert GetLastEngineInitResults to string to help reporting of it's contents.
            </summary>
      <param name="list">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.ItemsToString(System.Collections.IList)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.ItemsToString(System.Collections.IList)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.PxToDip(Arction.Wpf.ChartingMVVM.PointFloat)">
      <summary>
             Converts given coordinates defined in PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="px">Coordinates to convert, defined in pixels.</param>
      <returns>Converted coordinates in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.PxToDip(System.Double,System.Boolean)">
      <summary>
             Converts given PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Value to convert in pixels.</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.PxToDip(System.Drawing.RectangleF)">
      <summary>
             Converts given rectangle size and position defined in PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Rectangle to convert, defined in pixels.</param>
      <returns>Converted rectangle in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.PxToDip(System.Int32,System.Boolean)">
      <summary>
             Converts given PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Value to convert in pixels.</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.PxToDip(System.Single,System.Boolean)">
      <summary>
             Converts given PX (Screen pixels) to DIP (Device Independent Pixels) values using system DPI settings. 
            </summary>
      <param name="PX">Value to convert in pixels.</param>
      <param name="UseXDirection">If true, the screen width direction DPI factor is used. Height direction otherwise</param>
      <returns>Converted value in DPIs.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.RadToDeg(System.Double)">
      <summary>
            Convert given angle in radians to degrees. 
            </summary>
      <param name="Rad">Angle in radians</param>
      <returns>Corresponding angle in degrees.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Extensions.Extensions.RadToDeg(System.Single)">
      <summary>
            Convert given angle in radians to degrees. 
            </summary>
      <param name="Rad">Angle in radians</param>
      <returns>Corresponding angle in degrees.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.BingOptions">
      <summary>
            Tile disk cache.
            Cache is located at given path. Default is temp folder.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.BingOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.BingOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.TileLayer)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.BingOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.BingOptions.LicenseKey">
      <summary>
            Map license key.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.ButtonClickOnMapItemEventArgs">
      <summary>
            Button click on map item event arguments.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.ButtonClickOnMapItemEventArgs.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapItem,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="mapItem">Map item.</param>
      <param name="layer">Layer.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.ButtonClickOnMapItemEventArgs.Layer">
      <summary>
            Layer.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.ButtonClickOnMapItemEventArgs.MapItem">
      <summary>
            Map item.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.City">
      <summary>
            City.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.City.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.City.Country">
      <summary>
            Gets country name. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.City.CountryProperty">
      <summary>
            Identifies the Country dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.City.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.City.Location">
      <summary>
            Gets location. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.City.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.City.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.City.Population">
      <summary>
            Gets population. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.City.PopulationProperty">
      <summary>
            Identifies the Population dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.CityOptions">
      <summary>
            City options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="mapData">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mapData</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CreateDefaultPopulationCategories">
      <summary>
            Create default population categories
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CreateDefaultPopulationCategories</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.CityOptions.MajorCityPopulation">
      <summary>
            Gets or sets major city population. City is considered major if its population is same or exceeds this value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.MajorCityPopulationProperty">
      <summary>
            Identifies the MajorCityPopulation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.CityOptions.PopulationCategories">
      <summary>
            Gets or sets population categories. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.PopulationCategoriesProperty">
      <summary>
            Identifies the PopulationCategories dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.CityOptions.ShowCities">
      <summary>
            Gets or sets show cities. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.ShowCitiesProperty">
      <summary>
            Identifies the ShowCities dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.CityOptions.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CityType">
      <summary>
            Cities type. Determines which kind of cities are shown.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CityType.Off">
      <summary>
            Cities are not shown.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CityType.Major">
      <summary>
            Major cities.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.CityOptions.CityType.All">
      <summary>
            All cities.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.ConversionStateChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the ConversionStateChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.ConversionStateChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of ConversionStateChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.ConversionStateChangedEventArgs.ConversionCounter">
      <summary>
            Conversion counter.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.ConversionStateChangedEventArgs.Progress">
      <summary>
            Conversion progress indicator.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.ConversionStateChangedEventArgs.Status">
      <summary>
            Status message.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Int32ObservableCollection">
      <summary>
            Represents a collection of Int32Observable objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Int32ObservableCollection.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Maps.Int32ObservableCollection</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Int32ObservableCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Collection changed event
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Int32ObservableCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Line">
      <summary>
            Line.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
      <param name="lType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="lType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Line.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.Construct">
      <summary>
            Construct members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.Dispose(System.Boolean)">
      <summary>
             Overridden dispose method.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.Maps.Line</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Line.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Line.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Line.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.LineLayer">
      <summary>
            LineLayer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineLayer.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.LineLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.LineLayer.AutoAdjustLineWidth">
      <summary>
            Gets or sets if automatically adjust line width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LineLayer.AutoAdjustLineWidthProperty">
      <summary>
            Identifies the AutoAdjustLineWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineLayer.Construct">
      <summary>
            Construct initialized members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineLayer.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.LineLayer.LineDrawStyle">
      <summary>
            Gets or sets line draw style. Determine how line is drawn. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LineLayer.LineDrawStyleProperty">
      <summary>
            Identifies the LineDrawStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.LineLayer.LineWidthCoeff">
      <summary>
            Gets or sets line width coefficient. Adjust line width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LineLayer.LineWidthCoeffProperty">
      <summary>
            Identifies the LineWidthCoeff dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.LineOptions">
      <summary>
            Line options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.LineOptions.LabelStyle">
      <summary>
            Gets or sets label style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LineOptions.LabelStyleProperty">
      <summary>
            Identifies the LabelStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.LineOptions.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LineOptions.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LineOptions.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.LoadErrorEventArgs">
      <summary>
            Represents a class that provides arguments for the LoadError event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.LoadErrorEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of LoadErrorEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LoadErrorEventArgs.Description">
      <summary>
            Provides a detailed error description.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LoadErrorEventArgs.MapName">
      <summary>
            Map name.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.LoadErrorEventArgs.ShortError">
      <summary>
            Provides a short error description.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map">
      <summary>
            Map data container.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="axisX">X-axis to bind the map to.</param>
      <param name="axisY">Y-axis to bind the map to.</param>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.AllowUserInteraction">
      <summary>
            Gets or sets if user interaction is allowed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.AllowUserInteractionProperty">
      <summary>
            Identifies the AllowUserInteraction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Backgrounds">
      <summary>
            Gets or sets map backgrounds. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.BackgroundsProperty">
      <summary>
            Identifies the Backgrounds dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.Map.ButtonDownOnMapItem">
      <summary>
            Occurs when a button is pressed down while the user interactive device is on the map item.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Center(Arction.Wpf.ChartingMVVM.Maps.MapItem)">
      <summary>
            Center on map item.
            </summary>
      <param name="mapItem">Map item.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Center(System.Single,System.Single)">
      <summary>
            Center on coordinates.
            </summary>
      <param name="longitude">Longitude.</param>
      <param name="latitude">Latitude.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.CityOptions">
      <summary>
            Gets or sets city draw options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.CityOptionsProperty">
      <summary>
            Identifies the CityOptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ClearTileCacheFolder">
      <summary>
            Clears tile cache folder.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Description">
      <summary>
            Gets map description. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.DescriptionProperty">
      <summary>
            Identifies the Description dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.FileName">
      <summary>
            Gets or sets map file name. Use with Path value to indicate map file. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.FileNameProperty">
      <summary>
            Identifies the FileName dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit">
      <summary>
            Show whole map.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(Arction.Wpf.ChartingMVVM.Maps.MapItem)">
      <summary>
            Fit map item to view.
            </summary>
      <param name="mapItem">Map item.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Fit to given rectangle.
            </summary>
      <param name="xMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="yMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="xMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="yMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Map.Fit(System.Double,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.GetVisibleMapItems">
      <summary>
            Get visible map items per layer.
            </summary>
      <returns>List of visible map items per layer.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Highlight">
      <summary>
            Gets or sets if highlight map item when user interactive device is over. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.HighlightProperty">
      <summary>
            Identifies the Highlight dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ImportNewLayer(System.String,System.Int32)">
      <summary>
            Import new layer from shp data and insert it into map on given layer. Other layers are moved if necessary.
            </summary>
      <param name="shpFilename">Shp file name.</param>
      <param name="targetLayerIndex">Target layer index.</param>
      <returns>Success status.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ImportNewLayer(System.String,System.Int32,System.String)">
      <summary>
            Import new layer from shp data and insert it into map on given layer. Other layers are moved if necessary.
            </summary>
      <param name="shpFilename">Shp file name.</param>
      <param name="targetLayerIndex">Target layer index.</param>
      <param name="configFile">Configuration file name.</param>
      <returns>Success status.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ImportReplaceLayer(System.String,System.Int32)">
      <summary>
            Import new layer from shp data and replace data on given layer.
            </summary>
      <param name="shpFilename">Shp file name.</param>
      <param name="targetLayerIndex">Target layer index.</param>
      <returns>Success status.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ImportReplaceLayer(System.String,System.Int32,System.String)">
      <summary>
            Import new layer from shp data and replace data on given layer.
            </summary>
      <param name="shpFilename">Shp file name.</param>
      <param name="targetLayerIndex">Target layer index.</param>
      <param name="configFile">Configuration file name.</param>
      <returns>Success status.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.LakeOptions">
      <summary>
            Gets or sets lake draw options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.LakeOptionsProperty">
      <summary>
            Identifies the LakeOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.LandOptions">
      <summary>
            Gets or sets land draw options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.LandOptionsProperty">
      <summary>
            Identifies the LandOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Layers">
      <summary>
            Get map layers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.LayersProperty">
      <summary>
            Identifies the LayersProperty dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.Map.LoadError">
      <summary>
            Occurs when a map loading error occurs.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.Map.MapChanged">
      <summary>
            Occurs when the map changes.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Names">
      <summary>
            Get internal area name list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.NamesProperty">
      <summary>
            Identifies the Names dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Optimization">
      <summary>
            Gets or sets rendering optimization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.OptimizationProperty">
      <summary>
            Identifies the Optimization dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.OtherOptions">
      <summary>
            Gets or sets other map type draw options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.OtherOptionsProperty">
      <summary>
            Identifies the OtherOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.OverlapLabels">
      <summary>
            Gets or sets if show all labels, even if they overlap each other. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.OverlapLabelsProperty">
      <summary>
            Identifies the OverlapLabels dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.Map.OverOffMapItem">
      <summary>
            Occurs when the user interactive device is moved out over the map item.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.Map.OverOnMapItem">
      <summary>
            Occurs when the user interactive device is moved in over the map item.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Path">
      <summary>
            Gets or sets map folder. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.PathProperty">
      <summary>
            Identifies the Path dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.RefreshMapList">
      <summary>
            Refresh map name list. Map names are available at Names property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.RenderIntensitySeriesBeforeLayerIndex">
      <summary>
            Gets or sets layer index before intensity series will be drawn. Use -1 to draw intensity series after all map layers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.RenderIntensitySeriesBeforeLayerIndexProperty">
      <summary>
            Identifies the RenderIntensitySeriesBeforeLayerIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.RiverOptions">
      <summary>
            Gets or sets river options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.RiverOptionsProperty">
      <summary>
            Identifies the RiverOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.RoadOptions">
      <summary>
            Gets or sets road options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.RoadOptionsProperty">
      <summary>
            Identifies the RoadOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.SimpleHighlightColor">
      <summary>
            Gets or sets simple highlight map item color when user interactive device is over. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.SimpleHighlightColorProperty">
      <summary>
            Identifies the SimpleHighlightColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.TileCacheFolder">
      <summary>
            Gets or sets tile cache folder. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.TileCacheFolderProperty">
      <summary>
            Identifies the TileCacheFolder dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.TileLayers">
      <summary>
            Gets or sets map tile layers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.TileLayersProperty">
      <summary>
            Identifies the TileLayers dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Map.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.Type">
      <summary>
            Gets or sets map type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.UserInteractiveDeviceOverMapItemLayer">
      <summary>
            Gets layer index of item on which user interactive device is. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.UserInteractiveDeviceOverMapItemLayerProperty">
      <summary>
            Identifies the UserInteractiveDeviceOverMapItemLayer dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.XAxisIndex">
      <summary>
            Gets or sets index of X axis related to map. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.XAxisIndexProperty">
      <summary>
            Identifies the XAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Map.YAxisIndex">
      <summary>
            Gets or sets index of Y axis related to map. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.YAxisIndexProperty">
      <summary>
            Identifies the YAxisIndex dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.ButtonDownOnMapItemEventHandler">
      <summary>
            The delegate to use for handlers that receive the ButtonDownOnMapItem event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the ButtonDownOnMapItem event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.DrawStyle">
      <summary>
            Draw style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.DrawStyle.Off">
      <summary>
            No draw.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.DrawStyle.Options">
      <summary>
            Options specific draw.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.DrawStyle.Individual">
      <summary>
            Individual draw style.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.LoadErrorEventHandler">
      <summary>
            The delegate to use for handlers that receive the LoadError event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the LoadError event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.MapChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the MapChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the MapChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.MapType">
      <summary>
            Map type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.Off">
      <summary>
            Map is not shown.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.AustraliaMid">
      <summary>
            Australia mid resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.CanadaUSAStatesMid">
      <summary>
            Canada and USA states/provinces mid resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.EuropeLow">
      <summary>
            Europe low resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.EuropeMid">
      <summary>
            Europe mid resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.EuropeHigh">
      <summary>
            Europe high resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.Other">
      <summary>
            Other map type (used, when users own map is shown).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.USALakesRiversMid">
      <summary>
            USA mid resolution map with lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.USALakesRiversHigh">
      <summary>
            USA high resolution map with lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.USAStatesLakesRiversMid">
      <summary>
            USA mid resolution map with states, lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.USAStatesLakesRiversHigh">
      <summary>
            USA high resolution map with states, lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.USAStatesLakesRiversRoadsMid">
      <summary>
            USA mid resolution map with states, lakes, rivers and roads.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.WorldLow">
      <summary>
            World low resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.WorldMid">
      <summary>
            World middle resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.WorldHigh">
      <summary>
            World in high resolution.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.WorldLakesRiversLow">
      <summary>
            World low resolution map with lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.WorldLakesRiversMid">
      <summary>
            World middle resolution map with lakes and rivers.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.NorthAmericaLow">
      <summary>
            North America low resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.NorthAmericaMid">
      <summary>
            North America middle resolution map.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.MapType.NorthAmericaHigh">
      <summary>
            North America high resolution map.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.OverOffMapItemEventHandler">
      <summary>
            The delegate to use for handlers that receive the OverOffMapItem event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OverOffMapItem event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.OverOnMapItemEventHandler">
      <summary>
            The delegate to use for handlers that receive the OverOnMapItem event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OverOnMapItem event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Map.RenderingOptimization">
      <summary>
            Rendering optimization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.RenderingOptimization.None">
      <summary>
            No optimization.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Map.RenderingOptimization.CombinedLayers">
      <summary>
            All map layers are rendered in same cached back buffer image. 
            This will give significantly better performance when the map contents and visible X and Y range remain same.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapBackground">
      <summary>
            Map background.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.Construct">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.Image">
      <summary>
            Gets or sets image object. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.ImageAlpha">
      <summary>
            Gets or sets image alpha. 0 is transparent, 255 fully visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.ImageAlphaProperty">
      <summary>
            Identifies the ImageAlpha dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.ImageProperty">
      <summary>
            Identifies the Image dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LatitudeMax">
      <summary>
            Gets or sets max latitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LatitudeMaxProperty">
      <summary>
            Identifies the LatitudeMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LatitudeMin">
      <summary>
            Gets or sets min latitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LatitudeMinProperty">
      <summary>
            Identifies the LatitudeMin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LongitudeMax">
      <summary>
            Gets or sets max longitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LongitudeMaxProperty">
      <summary>
            Identifies the LongitudeMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LongitudeMin">
      <summary>
            Gets or sets min longitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.LongitudeMinProperty">
      <summary>
            Identifies the LongitudeMin dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackground.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapBackground.Visible">
      <summary>
            Gets or sets if background is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapBackground.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapBackgroundCollection">
      <summary>
            Represents a collection of MapBackground objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapBackgroundCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the MapChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of MapChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapChangedEventArgs.NewMapName">
      <summary>
            The new map name.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapChangedEventArgs.OldMapName">
      <summary>
            The old map name.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapConverter">
      <summary>
            Map data container.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapConverter.#ctor(System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="waitConversion">Wait conversion to end.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionStateChanged">
      <summary>
            Occurs when the state of the map conversion changes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConvertFromFile(System.String,System.String)">
      <summary>
            Convert shp file by xml configuration.
            </summary>
      <param name="fileName">Shp file name.</param>
      <param name="configurationFile">Configuration file name.</param>
      <returns>Stream to mapdata file.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapConverter.GetConvertedMap">
      <summary>
            Get converted map.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapConverter.GetConvertedMap</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapConverter.SelectFilesAndConvert">
      <summary>
            Select shp files for conversion and convert them.
            </summary>
      <returns>True: Conversion started, false: conversion not started.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionProgress">
      <summary>
            Map conversion progress indication.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionProgress.Running">
      <summary>
            Map conversion is running.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionProgress.Done">
      <summary>
            Map conversion is done.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionProgress.Canceled">
      <summary>
            Map conversion canceled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionProgress.Aborted">
      <summary>
            Map conversion is aborted. See Status field in the event for more details.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult">
      <summary>
            Map conversion result.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.OK">
      <summary>
            OK
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.Canceled">
      <summary>
            Canceled by user from wizard.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.InvalidLayerIndex">
      <summary>
            Invalid layer index.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.SHPFileNotFound">
      <summary>
            SHP file not found.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.ConfigurationFileNotFound">
      <summary>
            XML configuration file not found.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.SHPFileEmpty">
      <summary>
            SHP file empty.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.SHPConfigurationMismatch">
      <summary>
            SHP file content and XML configuration file does not match.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.SHPUnauthorizedAccess">
      <summary>
            Unauthorized access.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.SHPAccessLimited">
      <summary>
            Access limited to file.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.NoSelectedFiles">
      <summary>
            User has not selected any files from file selection dialog.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionResult.FileVersionNotSupported">
      <summary>
            Map file not compatible with this version of control.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapConverter.ConversionStateChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the ConversionStateChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the ConversionStateChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapHeader">
      <summary>
            Map header.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapHeader.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapHeader.Description">
      <summary>
            Map description.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapHeader.FileName">
      <summary>
            Map file name.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapHeader.Name">
      <summary>
            Map name.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapItem">
      <summary>
            Map item.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItem.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.GetInfo">
      <summary>
            Get values.
            </summary>
      <returns>Values.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapItem.Name">
      <summary>
            Gets or sets name. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapItem.NameProperty">
      <summary>
            Identifies the Name dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItem.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapItem.Type">
      <summary>
            Gets layer type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapItem.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapItemActionEventArgs">
      <summary>
            Represents a class that provides arguments for the MapItemAction event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItemActionEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of MapItemActionEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapItemActionEventArgs.Layer">
      <summary>
            Layer.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapItemActionEventArgs.MapItem">
      <summary>
            Map Item.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapItems">
      <summary>
            Map items.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItems.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapItems.Layers">
      <summary>
            Map layers (areas, lines, points).
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapItemTitle">
      <summary>
            City title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItemTitle.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapItemTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.MapItemTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapItemTitle.Text">
      <summary>
            Title text.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapLayer">
      <summary>
            Layer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Construct">
      <summary>
            Construct initialized members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.FreeDrawData">
      <summary>
             Frees all the draw data. Called at least at MapLayer dispose. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Items">
      <summary>
            Gets layer items. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.ItemsProperty">
      <summary>
            Identifies the Items dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Name">
      <summary>
            Gets or sets name. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.NameProperty">
      <summary>
            Identifies the Name dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Priority">
      <summary>
            Gets or sets priority. Layers with zero are drawn on top. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.PriorityProperty">
      <summary>
            Identifies the Priority dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.MapLayer.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Type">
      <summary>
            Gets layer type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.MapLayer.Visible">
      <summary>
            Gets or sets visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType">
      <summary>
            Layer type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.City">
      <summary>
            City.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.Land">
      <summary>
            Land.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.Lake">
      <summary>
            Lake.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.Road">
      <summary>
            Road.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.River">
      <summary>
            River.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType.Other">
      <summary>
            Other. May contain lines or regions.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.NotifyPropertyChanges">
      <summary>
            Property change notification implementation. Use this as base class for any class which need to implement INotifyPropertyChanged interface.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.NotifyPropertyChanges.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Maps.NotifyPropertyChanges</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.NotifyPropertyChanges.NotifyPropertyChanged(System.String)">
      <summary>
            Method to be called on property change.
            </summary>
      <param name="propertyName">Name of changed property.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.NotifyPropertyChanges.PropertyChanged">
      <summary>
            Event to be called on property change.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.PointLayer">
      <summary>
            PointLayer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.PointLayer.Color">
      <summary>
            Gets or sets main color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.PointLayer.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PointLayer.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory">
      <summary>
            Population category.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor(Arction.Wpf.ChartingMVVM.Maps.CityOptions)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor(Arction.Wpf.ChartingMVVM.Maps.CityOptions)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor(Arction.Wpf.ChartingMVVM.Maps.CityOptions,System.UInt32)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor(Arction.Wpf.ChartingMVVM.Maps.CityOptions,System.UInt32)</parameter>
          </include>
        </markup>
      </param>
      <param name="uiMinPopulation">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>uiMinPopulation</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.#ctor(Arction.Wpf.ChartingMVVM.Maps.CityOptions,System.UInt32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.LabelStyle">
      <summary>
            Gets or sets label style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.LabelStyleProperty">
      <summary>
            Identifies the LabelStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.MinPopulation">
      <summary>
            Gets or sets minimum population. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.MinPopulationProperty">
      <summary>
            Identifies the MinPopulation dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.PointStyle">
      <summary>
            Gets or sets point draw style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.PointStyleProperty">
      <summary>
            Identifies the PointStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategory.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.PopulationCategoryCollection">
      <summary>
            Represents a collection of PopulationCategory objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.PopulationCategoryCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.Region">
      <summary>
            Region.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
      <param name="lType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="lType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.#ctor(Arction.Wpf.ChartingMVVM.Maps.MapLayer,Arction.Wpf.ChartingMVVM.Maps.MapLayer.LayerType,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Region.BorderLineStyle">
      <summary>
            Gets or sets area border line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.BorderLineStyleProperty">
      <summary>
            Identifies the BorderLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Region.Center">
      <summary>
            Center point of largest area.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.DrawMaxX">
      <summary>
            Max X draw coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.DrawMaxY">
      <summary>
            Max Y draw coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.DrawMinX">
      <summary>
            Min X draw coordinate.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.DrawMinY">
      <summary>
            Min Y draw coordinate.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Region.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.Region.m_aHoleIndexes">
      <summary>
            Hole indexes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.Region.Points">
      <summary>
            Points of border lines of all areas.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.ReadBorderPoints(System.IO.BinaryReader,System.Int32,System.Int32)">
      <summary>
            Read border points.
            </summary>
      <param name="reader">Reader.</param>
      <param name="iBorderCount">Border count.</param>
      <param name="iBytesInFloat">Bytes in float.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.Region.ReadBorderPoints(System.IO.BinaryReader,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.ReadHeader(System.IO.BinaryReader,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Read header.
            </summary>
      <param name="reader">Reader</param>
      <param name="iBorderCount">Border count.</param>
      <param name="iHoleCount">Hole count.</param>
      <param name="iItemCount">Item count.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.ReadHoleIndexes(System.IO.BinaryReader,System.Int32)">
      <summary>
            Read hole indexes.
            </summary>
      <param name="reader">Reader</param>
      <param name="iHoleCount">Hole count</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.Region.ReadRegions(System.IO.BinaryReader,System.Int32,System.Int32)">
      <summary>
            Read triangle points.
            </summary>
      <param name="reader">Reader</param>
      <param name="iRegionCount">Region count.</param>
      <param name="iBytesInFloat">Bytes in float.</param>
      <returns></returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.RegionLayer">
      <summary>
            RegionLayer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.BorderDrawStyle">
      <summary>
            Gets or sets Border draw style. Determine how border is drawn. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.BorderDrawStyleProperty">
      <summary>
            Identifies the BorderDrawStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.RegionDrawStyle">
      <summary>
            Gets or sets region draw style. Determine which property is used to draw area if any. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionLayer.RegionDrawStyleProperty">
      <summary>
            Identifies the RegionDrawStyle dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.RegionOptions">
      <summary>
            Region options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.AntialiasFill">
      <summary>
            Gets or sets if antialias fill is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.AntialiasFillProperty">
      <summary>
            Identifies the AntialiasFill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.FillVisible">
      <summary>
            Gets or sets if fill is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.FillVisibleProperty">
      <summary>
            Identifies the FillVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LabelStyle">
      <summary>
            Gets or sets label style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LabelStyleProperty">
      <summary>
            Identifies the LabelStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LineVisible">
      <summary>
            Gets or sets if line is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.LineVisibleProperty">
      <summary>
            Identifies the LineVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.RegionOptions.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.StencilArea">
      <summary>
            Stencil area used to mask in/out areas when drawing data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.AddMapLayerIndex(System.Int32)">
      <summary>
            Add data to stencil area from map layer.
            </summary>
      <param name="mapLayer">Map layer.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.AddPolygon(Arction.Wpf.ChartingMVVM.PointDouble2D[])">
      <summary>
            Add polygon described by points.
            </summary>
      <param name="aPoints">Polygon points.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.AddPolygon(Arction.Wpf.ChartingMVVM.PointFloat[])">
      <summary>
            Add polygon described by points.
            </summary>
      <param name="aPoints">Polygon points.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.AddPolygons(Arction.Wpf.ChartingMVVM.PointDouble2D[][])">
      <summary>
            Add polygons described by array of arrays.
            </summary>
      <param name="aaPoints">Polygon points.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.AddPolygons(Arction.Wpf.ChartingMVVM.PointFloat[][])">
      <summary>
            Add polygons described by array of arrays.
            </summary>
      <param name="aaPoints">Polygon points.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.ClearData">
      <summary>
            Clear data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.StencilArea.IgnoreHoles">
      <summary>
            Gets or sets if ignore holes in the area. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.StencilArea.IgnoreHolesProperty">
      <summary>
            Identifies the IgnoreHoles dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.StencilArea.MapLayers">
      <summary>
            Gets or sets map layer indexes. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.StencilArea.MapLayersProperty">
      <summary>
            Identifies the MapLayers dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilArea.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.StencilAreaCollection">
      <summary>
            Represents a collection of StencilArea objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.StencilAreaCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter">
      <summary>
            Class to write certain map area and zoom levels to file system folder.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.#ctor(System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="cacheFolder">cache folder location</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.Progress">
      <summary>
            Occurs during tile fetching.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.StartWriting(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,Arction.Wpf.ChartingMVVM.Maps.TileLayer.LayerType)">
      <summary>
            Start writing from given map area to cache folder. Supports only Street and Satellite layers.
            </summary>
      <param name="dLonMin">Minimum longitude.</param>
      <param name="dLonMax">Maximum longitude.</param>
      <param name="dLatMin">Minimum latitude.</param>
      <param name="dLatMax">Maximum latitude.</param>
      <param name="startZoomLevel">Start zoom level.</param>
      <param name="endZoomLevel">End zoom level.</param>
      <param name="layerType">Layer type, only Street and Satellite supported.</param>
      <returns>True, if started successfully. Otherwise (layer type not valid) false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.StopWriting">
      <summary>
            Stop cache writing.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileCacheWriter.TileFetchProgressEventHandler">
      <summary>
            The delegate to use for handlers that receive the Progress event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the TileFetchProgress event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileFetchFailedEventArgs">
      <summary>
            Represents a class that provides arguments for the TileFetchFailed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileFetchFailedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TileFetchFailedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFetchFailedEventArgs.httpStatusCode">
      <summary>
            HTTP status of the failed map tile fetch operation.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileFetchProgressEventArgs">
      <summary>
            Represents a class that provides arguments for the TileFetchProgress event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileFetchProgressEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TileFetchProgressEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFetchProgressEventArgs.Cancel">
      <summary>
            Should the fetching be canceled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFetchProgressEventArgs.Percentage">
      <summary>
            The progress percentage.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileFormatValueEventArgs">
      <summary>
            Represents a class that provides arguments for the TileFormatValue event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileFormatValueEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TileFormatValueEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFormatValueEventArgs.Layer">
      <summary>
            The tile layer whose value is to be formatted.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFormatValueEventArgs.Value">
      <summary>
            The actual value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileFormatValueEventArgs.ValueAsString">
      <summary>
            A user-formatted string of the actual value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileLayer">
      <summary>
            Map tile layer. Get image to front or back of map.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.#ctor(Arction.Wpf.ChartingMVVM.Maps.Map)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">owner (map)</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.AboveVectorMap">
      <summary>
            Gets or sets if layer is drawn above or below map. Default is above (true). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.AboveVectorMapProperty">
      <summary>
            Identifies the AboveVectorMap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.AlphaLevel">
      <summary>
            Gets or sets tile layer alpha level. Valid range is 0..255. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.AlphaLevelProperty">
      <summary>
            Identifies the AlphaLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.CacheFetchCount">
      <summary>
            Gets cache fetch count. Use to enhance your cache usage. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.CacheFetchCountProperty">
      <summary>
            Identifies the CacheFetchCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.CacheImages">
      <summary>
            Gets or sets if cache images to a file folder. Speeds up the tile fetching when using same zoom levels and regions. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.CacheImagesProperty">
      <summary>
            Identifies the CacheImages dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.GetZoomLevel">
      <summary>
            Get zoom level.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.GetZoomLevel</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.HEREApiKey">
      <summary>
            Gets or sets ApiKey from HERE map provider.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.HEREApiKeyProperty">
      <summary>
            Identifies the HEREApiKey dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.HEREUseProduction">
      <summary>
            Gets or sets if use production server of HERE map provider. Enable this when releasing application customer.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.HEREUseProductionProperty">
      <summary>
            Identifies the HEREUseProduction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.MapQuestServerCallCount">
      <summary>
            Gets MapQuest server call count. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.MapQuestServerCallCountProperty">
      <summary>
            Identifies the MapQuestServerCallCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.MaxZoomLevel">
      <summary>
            Gets or sets maximum zoom level. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.MaxZoomLevelProperty">
      <summary>
            Identifies the MaxZoomLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.Refresh">
      <summary>
            Used for refreshing tile data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.RemoveNonvisibleTiles">
      <summary>
            Remove tiles (minus some at the edges), which are not currently visible.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Maps.TileLayer.TileFetchFailed">
      <summary>
            Occurs when a map tile fetch operation fails.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Maps.TileLayer.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.Type">
      <summary>
            Gets or sets layer type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Maps.TileLayer.Visible">
      <summary>
            Gets or sets visible state. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileLayer.LayerType">
      <summary>
            Layer type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.LayerType.Street">
      <summary>
            Street.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Maps.TileLayer.LayerType.Satellite">
      <summary>
            Images from satellite or airplane.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileLayer.TileFetchFailedEventHandler">
      <summary>
            The delegate to use for handlers that receive the TileFetchFailed event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the TileFetchFailed event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Maps.TileLayerCollection">
      <summary>
            Represents a collection of TitleLayer objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Maps.TileLayerCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement">
      <summary>
            Overlay element base class. Overlay elements are UI controls on front of the chart.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.#ctor">
      <summary>
            Constructor for form editor list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor .
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Anchor">
      <summary>
            Rotation uses this point as a center point. Location tells 
            where to place the anchored point on the control area. 
            For X dimension, value 0 represents left coordinate of the object and 1 right coordinate.
            For Y dimension, value 0 represents top coordinate of the object and 1 bottom coordinate.
            To define anchor point outside the object area, define values outside range 0...1.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Border">
      <summary>
            Border around the object
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Construct">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Fill">
      <summary>
            Fill. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.LimitInsideGraphMargins">
      <summary>
            If set, limits the element graph margins area.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Location">
      <summary>
            Location where the anchor point is placed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.RotateAngle">
      <summary>
            Element rotation angle, in degrees. The rotation is done around the element's center of rotation. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Shadow">
      <summary>
            Shadow beneath the object
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Size">
      <summary>
            Defines Size.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayElement.Visible">
      <summary>
            Is element visible.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel">
      <summary>
            Overlay label shows text with background and border. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.#ctor">
      <summary>
            Constructor for form editor list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.Construct">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.Dispose(System.Boolean)">
      <summary>
            Dispose
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.Text">
      <summary>
            Text.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.OverlayElements.OverlayLabel.TextStyle">
      <summary>
            Text style.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D">
      <summary>
            3D Bar series. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.AddValue(System.Double,System.Double,System.Double,System.String,System.Boolean)">
      <summary>
            Add value to end of Values array.
            </summary>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="zValue">Z value.</param>
      <param name="invalidateChart">Refresh chart after value adding.</param>
      <param name="text">Text.</param>
      <returns>New value index.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.AddValues(Arction.Wpf.ChartingMVVM.BarSeriesValue3D[],System.Boolean)">
      <summary>
            Add values to end of series.
            </summary>
      <param name="values">Values.</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Value count after adding.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BarDepth">
      <summary>
            Gets or sets bar depth. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BarDepthProperty">
      <summary>
            Identifies the BarDepth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BarWidth">
      <summary>
            Gets or sets bar width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BarWidthProperty">
      <summary>
            Identifies the BarWidth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BaseLevel">
      <summary>
            Gets or sets base level. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.BaseLevelProperty">
      <summary>
            Identifies the BaseLevel dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ciValueInitialCount">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.Clear">
      <summary>
            Clear series.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.CornerPercentage">
      <summary>
            Gets or sets corner percentage on roudend cylinder and beveled styles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.CornerPercentageProperty">
      <summary>
            Identifies the CornerPercentage dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.DetailLevel">
      <summary>
            Gets or sets detail level on some draw styles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.DetailLevelProperty">
      <summary>
            Identifies the DetailLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.GetBarInfoOnUserInteractiveDeviceLocation(System.Int32@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Get info of bar over which the user interactive device is over.
            </summary>
      <param name="barValueIndex">Bar value index.</param>
      <param name="xValue">Bar X value.</param>
      <param name="yValue">Bar Y value.</param>
      <param name="zValue">Bar Z value.</param>
      <returns>True if info found, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.GetText(System.Int32)">
      <summary>
            Get Text by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>Text value. If invalid index is given, returns "".</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.GetXValue(System.Int32)">
      <summary>
            Get X value by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>X value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.GetYValue(System.Int32)">
      <summary>
            Get Y value by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>Y value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.GetZValue(System.Int32)">
      <summary>
            Get Z value by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>Z value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file. 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition.</param>
      <returns>True if export is successful.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.Shape">
      <summary>
            Gets or sets bar shape. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ShapeProperty">
      <summary>
            Identifies the Shape dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.SupplyCustomValueString">
      <summary>
            The event for formatting a value to a custom string.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueCount">
      <summary>
            Gets value count stored in the Values array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueCountProperty">
      <summary>
            Identifies the ValueCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueLabelSettings">
      <summary>
            Gets or sets series value text display properties. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueLabelSettingsProperty">
      <summary>
            Identifies the ValueLabelSettings dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.Values">
      <summary>
            Gets or sets values array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValuesProperty">
      <summary>
            Identifies the Values dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueToString(System.Object,Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs)">
      <summary>
            Event callback caller.
            </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.ValueToString(System.Object,Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">Event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3D.SupplyCustomValueStringEventHandler">
      <summary>
            The delegate to use for handlers that receive the SupplyCustomValueString event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SupplyCustomValueString event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3DCollection">
      <summary>
            Represents a collection of BarSeries3D objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.BarSeries3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D">
      <summary>
            3D Point line series. Allows drawing a line with points, or just line, or just points. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.#ctor">
      <summary>
            Constructor mainly for visual designer.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPoint3D[],System.Boolean)">
      <summary>
            Add SeriesPoint3D points to end of series.
            </summary>
      <param name="points">Points.</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Count of points in the Points array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPointCompact3D[],System.Boolean)">
      <summary>
            Add SeriesPointCompact3D points to end of series.
            </summary>
      <param name="points">Points.</param>
      <param name="invalidateChart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invalidateChart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPointCompact3D[],System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>Count of points in the PointsCompact array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D[],System.Boolean)">
      <summary>
            Add SeriesPointCompactColored3D points to end of series.
            </summary>
      <param name="points">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>points</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D[],System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="invalidateChart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invalidateChart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D[],System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>Count of points in PointsCompactColored array.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.ciPointInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.Clear">
      <summary>
            Clear all points
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.ClosedLine">
      <summary>
            Connect end and start point by drawing line between them. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.ClosedLineProperty">
      <summary>
            Identifies the ClosedLine dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.DataBreaking">
      <summary>
            Data breaking options. Defines, if gaps are enabled on series data and by which value.
            Default state is disabled and default gap value is Double.NaN;
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.DataBreakingProperty">
      <summary>
            Identifies the DataBreaking dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IndividualPointColors">
      <summary>
            Gets or sets if each point can have different color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IndividualPointColorsProperty">
      <summary>
            Identifies the IndividualPointColors dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IndividualPointSizes">
      <summary>
            Gets or sets if each point can have different size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IndividualPointSizesProperty">
      <summary>
            Identifies the IndividualPointSizes dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IsPositionOver(System.Int32,System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
             Additional method to check if position is over, solves also index of the nearest point or line segment if it hits it. 
             </summary>
      <param name="x">X screen coordinate.</param>
      <param name="y">Y screen coordinate.</param>
      <param name="index">Index of nearest point or line segment.</param>
      <param name="overLine">Is the mouse over line.</param>
      <param name="overPoint">Is the mouse over a point.</param>
      <param name="useDIP">Use DIP instead of pixels for coordinates.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.IsPositionOver(System.Int32,System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LastHitTestIndex">
      <summary>
            Get last data index at hit coordinates. Return -1 if did not hit.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LineVisible">
      <summary>
            Gets or sets if line is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LineVisibleProperty">
      <summary>
            Identifies the LineVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file. Note that this loads only points with set point type (PointsType property).
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.MultiColorLine">
      <summary>
            Gets or sets if draw lines with color gradients between points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.MultiColorLineProperty">
      <summary>
            Identifies the MultiColorLine dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointCount">
      <summary>
            Get point count stored in the Points array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.Points">
      <summary>
            Gets or sets points array. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsCompact">
      <summary>
            Gets or sets compact points array. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsCompactColored">
      <summary>
            Colored compact points array.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsCompactColoredProperty">
      <summary>
            Identifies the PointsCompact dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsCompactProperty">
      <summary>
            Identifies the PointsCompact dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsOptimization">
      <summary>
            Gets or sets point rendering optimization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsOptimizationProperty">
      <summary>
            Identifies the PointsOptimization dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointStyle">
      <summary>
            Gets or sets point style settings. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointStyleProperty">
      <summary>
            Identifies the PointStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsType">
      <summary>
            Gets or sets series point type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsTypeProperty">
      <summary>
            Identifies the PointsType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsVisible">
      <summary>
            Gets or sets if points are visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.PointsVisibleProperty">
      <summary>
            Identifies the PointsVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file.  Note that this saves only points with set point type (PointsType property).
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition.</param>
      <returns>True if export is successful.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.TransparencyRenderMode">
      <summary>
            Transparency render mode. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3D.TransparencyRenderModeProperty">
      <summary>
            Identifies the TransparencyRenderMode dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3DCollection">
      <summary>
            Represents a collection of PointLineSeries3D objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.PointLineSeries3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D">
      <summary>
            Base class for all 3D series 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)</parameter>
          </include>
        </markup>
      </param>
      <param name="xAxis">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xAxis</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)</parameter>
          </include>
        </markup>
      </param>
      <param name="yAxis">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yAxis</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)</parameter>
          </include>
        </markup>
      </param>
      <param name="zAxis">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>zAxis</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.Clear">
      <summary>
            Clear the series
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.CreateMaterial">
      <summary>
            Create material.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.GetMinMaxValues(Arction.Wpf.ChartingMVVM.PointDouble3D@,Arction.Wpf.ChartingMVVM.PointDouble3D@)">
      <summary>
            Get series minimum and maximum data values.
            </summary>
      <param name="pMin">Minimum data values</param>
      <param name="pMax">Maximum data values</param>
      <returns>true if data exists, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.GetXAxis">
      <summary>
            Get X axis object to which this series is bound to
            </summary>
      <returns>Axis</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.GetYAxis">
      <summary>
            Get Y axis object to which this series is bound to
            </summary>
      <returns>Axis</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.GetZAxis">
      <summary>
            Get Z axis object to which this series is bound to
            </summary>
      <returns>Axis</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.IncludeInAutoFit">
      <summary>
            Gets or sets if included in autofit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.IncludeInAutoFitProperty">
      <summary>
            Identifies the IncludeInAutoFit dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>True if position is over series. Else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.m_bMinMaxCalculated">
      <summary>
            Min/max values for series are calculated.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.Material">
      <summary>
            Gets or sets series material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.op_Implicit(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            Get item as LegendBoxMouseObject.
            </summary>
      <param name="s">related object</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.op_Implicit(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.OwnerView">
      <summary>
            Owner view 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if export is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ShowInLegendBox">
      <summary>
            Gets or sets if enlists the series title text in Legend box of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ShowInLegendBoxProperty">
      <summary>
            Identifies the ShowInLegendBox dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.Visible">
      <summary>
            Gets or sets if the series is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.XAxisBinding">
      <summary>
            Gets or sets X axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.YAxisBinding">
      <summary>
            Gets or sets Y axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ZAxisBinding">
      <summary>
            Gets or sets Z axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs">
      <summary>
            Represents a class that provides arguments for the SupplyCustomValueString event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SupplyCustomValueStringEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs.Series">
      <summary>
            Series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs.Value">
      <summary>
            Value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SupplyCustomValueStringEventArgs.ValueAsString">
      <summary>
            Value as string.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D">
      <summary>
            Surface grid series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.BitmapFill">
      <summary>
            Gets or sets surface Bitmap fill style fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.BitmapFillProperty">
      <summary>
            Identifies the BitmapFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ContourLineType">
      <summary>
            Gets or sets contour line type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ContourLineTypeProperty">
      <summary>
            Identifies the ContourLineType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ContourLineWidth">
      <summary>
            Gets or sets contour line width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ContourLineWidthProperty">
      <summary>
            Identifies the ContourLineWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.CreateNewDataArray(System.Int32,System.Int32)">
      <summary>
            Create new data array.
            </summary>
      <param name="sizeX">X size.</param>
      <param name="sizeZ">Z size.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.DrawWireframeThrough">
      <summary>
            Gets or sets if draws wireframe through the filled surface. This is a dependency property. When true, wireframe is always visible from above the surface and below it.
            Alternatively, you may prefer setting this false and using WireframeOffset to shift the wireframe slightly up or down,
            making it visible only on the other side of the filled surface. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.DrawWireframeThroughProperty">
      <summary>
            Identifies the DrawWireframeThrough dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.Fill">
      <summary>
            Gets or sets surface fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.GetMinMaxValues(Arction.Wpf.ChartingMVVM.PointDouble3D@,Arction.Wpf.ChartingMVVM.PointDouble3D@)">
      <summary>
            Get series minimum and maximum data values.
            </summary>
      <param name="pMin">Minimum data values.</param>
      <param name="pMax">Maximum data values.</param>
      <returns>True if data exists, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.InsertColumnBackAndScroll(System.Double[],System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Insert new column on the back and drop the first column of data off. This is a performance optimized
            method for adding one column periodically in real-time, like in FFT spectrum monitor. Refreshes chart. 
            </summary>
      <param name="columnValuesY">New column Y values.</param>
      <param name="newSeriesXMax">X maximum of the series, after scrolling.</param>
      <param name="newSeriesXMin">X minimum of the series, after scrolling.</param>
      <param name="newXAxisMax">X-axis maximum, after scrolling.</param>
      <param name="newXAxisMin">X-axis minimum, after scrolling.</param>
      <returns>Return value.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.InsertRowBackAndScroll(System.Double[],System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Insert new data row on the back and drop the first row of data off. This is a performance optimized
            method for adding one row periodically in real-time, like in FFT spectrum monitor. Refreshes chart. 
            </summary>
      <param name="rowValuesY">New row Y values.</param>
      <param name="newSeriesZMax">Z maximum of the series, after scrolling.</param>
      <param name="newSeriesZMin">Z minimum of the series, after scrolling.</param>
      <param name="newZAxisMax">Z-axis maximum, after scrolling.</param>
      <param name="newZAxisMin">Z-axis minimum, after scrolling.</param>
      <returns>Return value.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.LightedSurface">
      <summary>
            Gets or sets surface side which is being lit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.LightedSurfaceProperty">
      <summary>
            Identifies the LightedSurface dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMaxX">
      <summary>
            Gets or sets maximum X range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMaxXProperty">
      <summary>
            Identifies the RangeMaxX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMaxZ">
      <summary>
            Gets or sets maximum Z range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMaxZProperty">
      <summary>
            Identifies the RangeMaxZ dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMinX">
      <summary>
            Gets or sets minimum X range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMinXProperty">
      <summary>
            Identifies the RangeMinX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMinZ">
      <summary>
            Gets or sets minimum Z range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.RangeMinZProperty">
      <summary>
            Identifies the RangeMinZ dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SetRangesXZ(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets X and Z range at same time. Very CPU efficient way compared to separately setting
            RangeMinX, RangeMaxX, RangeMinZ and RangeMaxZ properties. 
            </summary>
      <param name="minX">Minimum X.</param>
      <param name="maxX">Maximum X.</param>
      <param name="minZ">Minimum Z.</param>
      <param name="maxZ">Maximum Z.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SmoothShading">
      <summary>
            Gets or sets smooth shading. If not smooth, the surface is drawn with sharp triangles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SmoothShadingProperty">
      <summary>
            Identifies the SmoothShading dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.WireframeType">
      <summary>
            Gets or sets wireframe type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.WireframeTypeProperty">
      <summary>
            Identifies the WireframeType dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SurfaceGridInsertResult">
      <summary>
            Surface grid row or column insertion return value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SurfaceGridInsertResult.OK">
      <summary>
            Successfully done. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SurfaceGridInsertResult.NoData">
      <summary>
            No data to scroll 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SurfaceGridInsertResult.ContourLinesInUse">
      <summary>
            Contour lines are in use. Use FastContourZones or FastPalettedZones instead 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3D.SurfaceGridInsertResult.WireframeInUse">
      <summary>
            Can't use wireframe. Present the series without it. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3DCollection">
      <summary>
            Represents a collection of SurfaceGridSeries3D objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceGridSeries3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D">
      <summary>
            Surface mesh series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.BitmapFill">
      <summary>
            Gets or sets surface Bitmap fill style fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.BitmapFillProperty">
      <summary>
            Identifies the BitmapFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ContourLineType">
      <summary>
            Gets or sets contour line type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ContourLineTypeProperty">
      <summary>
            Identifies the ContourLineType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ContourLineWidth">
      <summary>
            Gets or sets contour line width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ContourLineWidthProperty">
      <summary>
            Identifies the ContourLineWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.DrawWireframeThrough">
      <summary>
            Gets or sets if draws wireframe through the filled surface. This is a dependency property. When true, wireframe is always visible from above the surface and below it.
            Alternatively, you may prefer setting this false and using WireframeOffset to shift the wireframe slightly up or down,
            making it visible only on the other side of the filled surface. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.DrawWireframeThroughProperty">
      <summary>
            Identifies the DrawWireframeThrough dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.Fill">
      <summary>
            Gets or sets surface fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.InsertColumnBack(Arction.Wpf.ChartingMVVM.SurfacePoint[])">
      <summary>
            Insert new column on the back and drop the first column of data off. Refreshes chart. 
            </summary>
      <param name="columnPoints">New column points.</param>
      <returns>True if successful, false if series data array doesn't exist.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.InsertRowBack(Arction.Wpf.ChartingMVVM.SurfacePoint[])">
      <summary>
            Insert new row on the back and drop the first row of data off. Refreshes chart. 
            </summary>
      <param name="rowPoints">New row points.</param>
      <returns>True if successful, false if series data array doesn't exist.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.LightedSurface">
      <summary>
            Gets or sets surface side which is being lit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.LightedSurfaceProperty">
      <summary>
            Identifies the LightedSurface dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.SmoothShading">
      <summary>
            Gets or sets smooth shading. If not smooth, the surface is drawn with sharp triangles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.SmoothShadingProperty">
      <summary>
            Identifies the SmoothShading dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.WireframeType">
      <summary>
            Gets or sets wireframe type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3D.WireframeTypeProperty">
      <summary>
            Identifies the WireframeType dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3DCollection">
      <summary>
            Represents a collection of SurfaceMeshSeries3D objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceMeshSeries3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase">
      <summary>
            Surface series base.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind. You can give null if X axis binding is used.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.AllowCellTrace">
      <summary>
            Gets or sets if allow tracing the surface cell with user interactive device. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.AllowCellTraceProperty">
      <summary>
            Identifies the AllowCellTrace dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.BaseColor">
      <summary>
            Gets or sets base color for filling. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.BaseColorProperty">
      <summary>
            Identifies the BaseColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CheckSurfaceSizeForGPU(System.Int32,System.Int32)">
      <summary>
            Check if the given surface size can be used with the GPU.
            GPU index buffer capacity is verified. 
            </summary>
      <param name="gridSizeX">X size.</param>
      <param name="gridSizeZ">Z size.</param>
      <returns>True if index buffer size on the GPU is sufficient, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.Clear">
      <summary>
            Clears the series by setting Data Y values to InitialValues. 
            Sets the data point colors to BaseColor. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ColorSaturation">
      <summary>
            Gets or sets surface fill color saturation. High value gives brighter colors. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ColorSaturationProperty">
      <summary>
            Identifies the ColorSaturation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ContourLineColor">
      <summary>
            Gets or sets contour line color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ContourLineColorProperty">
      <summary>
            Identifies the ContourLineColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ContourPalette">
      <summary>
            Gets or sets color palette for Y value information. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ContourPaletteProperty">
      <summary>
            Identifies the ContourPalette dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CreateMaterial">
      <summary>
            Create material.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CreateNewDataArray(System.Int32,System.Int32)">
      <summary>
            Create new data array.
            </summary>
      <param name="sizeX">X size.</param>
      <param name="sizeZ">Z size.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CreatePalette">
      <summary>
            Create palette.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.CreateWireframeOffset">
      <summary>
            Create wireframe offset.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.Data">
      <summary>
            Gets or sets series 3D point data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DataProperty">
      <summary>
            Identifies the Data dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisableDepthTest">
      <summary>
            Gets or sets if disable depth buffer test. Disabling this improves performance, but may cause erroneous painting order of objects. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisableDepthTestProperty">
      <summary>
            Identifies the DisableDepthTest dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisposeStaticBuffers(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Free all vertex and index buffer data 
            </summary>
      <param name="disposeVertexBuffers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>disposeVertexBuffers</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisposeStaticBuffers(System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="disposeIndexBuffers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>disposeIndexBuffers</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisposeStaticBuffers(System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="disposeSurfaceCache">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>disposeSurfaceCache</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.DisposeStaticBuffers(System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.FadeAway">
      <summary>
            Gets or sets fade away percent surface/waterfall towards back (higher data row numbers). This is a dependency property.
            Valid range is from 0(no fadeaway) to 100 (full fadeaway). 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.FadeAwayProperty">
      <summary>
            Identifies the FadeAway dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.FastContourZoneHeight">
      <summary>
            Gets or sets height (Y-axis value range) for fast contour zones. The fast contour zone is a contour line equivalent. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.FastContourZoneHeightProperty">
      <summary>
            Identifies the FastContourZoneHeight dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataColor(System.Int32,System.Int32)">
      <summary>
            Get color from Data array value.
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <returns>Color. If invalid index is given, returns Color.Black.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataColor(System.Int32,System.Int32,System.Windows.Media.Color@)">
      <summary>
            Get color from Data array value.
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="color">Color.</param>
      <returns>True, if indexes at valid range, otherwise false and outputs Color.Black.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataValue(System.Int32,System.Int32)">
      <summary>
            Get value from Data array value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <returns>Z value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataValue(System.Int32,System.Int32,System.Double@)">
      <summary>
            Get value from Data array value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="value">Data value at position. Zero, in case of failure.</param>
      <returns>True, if indexes at valid range, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataXValue(System.Int32,System.Int32)">
      <summary>
            Get Data array X value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <returns>X value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataXValue(System.Int32,System.Int32,System.Double@)">
      <summary>
            Get Data array X value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="value">X-value at position. Zero, in case of failure.</param>
      <returns>True, if indexes at valid range, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataYValue(System.Int32,System.Int32)">
      <summary>
            Get Data array Y value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <returns>Y value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataYValue(System.Int32,System.Int32,System.Double@)">
      <summary>
            Get Data array Y value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="value">Y-value at position. Zero, in case of failure.</param>
      <returns>True, if indexes at valid range, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataZValue(System.Int32,System.Int32)">
      <summary>
            Get Data array Z value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <returns>Z value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.GetDataZValue(System.Int32,System.Int32,System.Double@)">
      <summary>
            Get Data array Z value. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="value">Z-value at position. Zero, in case of failure.</param>
      <returns>True, if indexes at valid range, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.HandleOver">
      <summary>
            General handler for mouse over event. Check also mouse hit columns.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.InitialValue">
      <summary>
            Gets or sets initial value for data Y. Clears the series. It is applied when creating or resizing Data array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.InitialValueProperty">
      <summary>
            Identifies the InitialValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.IsPositionOver(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
      <summary>
            Detect if position is over the series. Also solves the column and row index where position is over of. 
            </summary>
      <param name="x">Screen X coordinate</param>
      <param name="y">Screen Y coordinate</param>
      <param name="hitColumnIndex">Column index. If failed, contains -1</param>
      <param name="hitRowIndex">Row index. If failed, contains -1</param>
      <param name="useDIP">Use DIPs instead of pixels</param>
      <returns>True if position is over the series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.m_lockData">
      <summary>
            Lock object for data array modification and reading 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.RefreshRenderingData">
      <summary>
            Rebuilds rendering data. Expert's method for allowing multi-threaded application to pre-build rendering data before rendering stage. 
            Rendering stage must always be synchronized to main thread, but this call can be called parallel for every series of this type. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.RenderingOrder">
      <summary>
            Gets or sets drawing order related to PointLineSeries. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.RenderingOrderProperty">
      <summary>
            Identifies the RenderingOrder dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file. 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition.</param>
      <returns>True if export is successful.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SetDataValue(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Color)">
      <summary>
            Set data values from X, Y, Z and color. 
            </summary>
      <param name="columnIndex">Column index of Data array.</param>
      <param name="rowIndex">Row index of Data array.</param>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
      <param name="value">Value.</param>
      <param name="color">Color. Effects only if Fill is set to SourcePointColoring.</param>
      <returns>False if invalid index. Otherwise true.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SetHeightDataFromBitmap(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Drawing.Bitmap,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions,System.Boolean)">
      <summary>
            Create data based on bitmap file contents. Data array will have dimensions of the bitmap Width X Height.
            Use options to reduce resolution and smooth it if needed. 
            Height data of is calculated for each pixel from R, G, and B sum. 0 (black) will have the minimum value, 
            and maximum value is obtained from 3*255 (white). If bitmap has alpha value of 0, the data is set to -INF,
            and the value is not drawn. 
            </summary>
      <param name="xMin">Minimum X.</param>
      <param name="xMax">Maximum X.</param>
      <param name="yMin">Minimum Y.</param>
      <param name="yMax">Maximum Y.</param>
      <param name="zMin">Minimum Z.</param>
      <param name="zMax">Maximum Z.</param>
      <param name="bitmap">Input bitmap.</param>
      <param name="options">Bitmap resolution decrement and smoothing options. Give null to use pure bitmap data only.</param>
      <param name="setNegativeInfinityForAlpha0">Sets NegativeInfinity when bitmap pixel has alpha = 0.</param>
      <returns>True if data was successfully filled, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SetSize(System.Int32,System.Int32)">
      <summary>
            Set grid size, both X and Z at same time. If you already have a large existing data,
            using this method is faster than setting SizeX and SizeZ separately.
            </summary>
      <param name="sizeX">X size.</param>
      <param name="sizeZ">Z size.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SizeX">
      <summary>
            Gets or sets grid size in X dimension (Data array columns). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SizeXProperty">
      <summary>
            Identifies the SizeX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SizeZ">
      <summary>
            Gets or sets grid size in Z dimension (Data array rows). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SizeZProperty">
      <summary>
            Identifies the SizeZ dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SolveNearestDataPointByCoord(System.Int32,System.Int32,Arction.Wpf.ChartingMVVM.SurfacePoint@,System.Int32@,System.Int32@)">
      <summary>
            Solve nearest data point to given screen coordinate [input in DIP]. Takes the data point distance from camera into account. 
            Only solves the point when coordinate is over the surface. 
            </summary>
      <param name="xCoordinate">X screen coordinate as DIP</param>
      <param name="yCoordinate">Y screen coordinate as DIP</param>
      <param name="nearestPoint">Nearest point solved</param>
      <param name="columnIndex">Column index in Data array</param>
      <param name="rowIndex">Row index in Data array</param>
      <returns>True if solved, else false. </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SuppressLighting">
      <summary>
            Gets or sets if suppress all light calculations on this this surface series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.SuppressLightingProperty">
      <summary>
            Identifies the SuppressLighting dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ToneColor">
      <summary>
            Gets or sets solid fill tone color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ToneColorProperty">
      <summary>
            Identifies the ToneColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.TraceCellChanged">
      <summary>
            Occurs when the user interactive device has been moved over to a different surface series cell.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.TransparencyRenderMode">
      <summary>
            Transparency render mode. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.TransparencyRenderModeProperty">
      <summary>
            Identifies the TransparencyRenderMode dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.WireframeLineStyle">
      <summary>
            Gets or sets wireframe line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.WireframeLineStyleProperty">
      <summary>
            Identifies the WireframeLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.WireframeOffset">
      <summary>
            Gets or sets wireframe shift amount from fill. This is a dependency property.
            Keep some amount of shift, to avoid 3D render engine Z buffer fighting. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.WireframeOffsetProperty">
      <summary>
            Identifies the WireframeOffset dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.SurfaceSeries3DBase.TraceCellChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the TraceCellChangedEvent event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the TraceCellChangedEvent event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.TraceCellChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the TraceCellChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.TraceCellChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of TraceCellChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.TraceCellChangedEventArgs.NewColumn">
      <summary>
            The new column index (X-dimension).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.TraceCellChangedEventArgs.NewRow">
      <summary>
            The new row index (Z-dimension).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.TraceCellChangedEventArgs.Series">
      <summary>
            The series that raised the event.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D">
      <summary>
            Waterfall series. Shows multiple waterfall areas stacked Z direction. As a specialty, the strips can be freely bent, in X and Z directions.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis you want to bind.</param>
      <param name="yAxis">Y-axis you want to bind.</param>
      <param name="zAxis">Z-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.BaseLevel">
      <summary>
            Gets or sets base level (Y value). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.BaseLevelProperty">
      <summary>
            Identifies the BaseLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.ContourLineType">
      <summary>
            Gets or sets contour line type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.ContourLineTypeProperty">
      <summary>
            Identifies the ContourLineType dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.CreatePalette">
      <summary>
            Create palette.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.CreateWireframeOffset">
      <summary>
            Create wireframe offset.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.Fill">
      <summary>
            Gets or sets surface fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.LightedSurface">
      <summary>
            Gets or sets surface side which is being lit correctly. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.LightedSurfaceProperty">
      <summary>
            Identifies the LightedSurface dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.WireframeType">
      <summary>
            Gets or sets wireframe style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3D.WireframeTypeProperty">
      <summary>
            Identifies the WireframeType dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3DCollection">
      <summary>
            Represents a collection of WaterfallSeries3D objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Series3D.WaterfallSeries3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar">
      <summary>
            Area series for polar chart. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisPolar">Polar axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.Construct">
      <summary>
            Initialize members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.FillColor">
      <summary>
            Gets or sets area fill color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.FillColorProperty">
      <summary>
            Identifies the FillColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.CustomLinePointColoringAndShapingPolarEventArgs">
      <summary>
            Represents a class that provides arguments for the CustomLinePointColoringAndShaping event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.CustomLinePointColoringAndShapingPolarEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of CustomLinePointColoringAndShapingPolarEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.CustomLinePointColoringAndShapingPolarEventArgs.Series">
      <summary>
            The series to which this event is associated.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar">
      <summary>
            Point line series for polar chart. You can define the line style and point style. Add points with AddPoints method. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisPolar">Polar axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.ClosedLine">
      <summary>
            Gets or sets whether series is drawn as polygon instead of polyline, i.e. line is drawn from last point to first. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.ClosedLineProperty">
      <summary>
            Identifies the ClosedLine dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.CustomLinePointColoringAndShaping">
      <summary>
            Custom line coloring and line coordinates event. Event handler must give color for each data point received in the handler. 
            The coordinates can be adjusted as well and new line points can be inserted. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)">
      <summary>
            Method to update colors and coordinates with the one if user sets those
            </summary>
      <param name="coords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="canModifyCoords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>canModifyCoords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="canModifyColors">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>canModifyColors</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="dataPointIndices">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataPointIndices</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.IsCustomLinePointColorsAndShapingSubscribedTo">
      <summary>
            Check if the event CustomLinePointColoringAndShaping is subscribed
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.IsCustomLinePointColorsAndShapingSubscribedTo</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.PaletteValueFormat">
      <summary>
            Palette value LegendBox format string.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.PaletteValueFormatProperty">
      <summary>
            Identifies the PaletteValueFormat dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.UnitsText">
      <summary>
            Gets or sets Palette value units texts.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.UnitsTextProperty">
      <summary>
            Identifies the UnitsText dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar.CustomLinePointColoringAndShapingEventHandler">
      <summary>
            The delegate to use for handlers that receive the CustomLinePointColoringAndShaping event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the CustomLinePointColoringAndShaping event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector">
      <summary>
            Sector class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisPolar">Polar axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.AssignPolarAxisIndex">
      <summary>
            Gets or sets index of polar axis assigned to this series. Give -1 when you don't want to assign it yet to any axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.AssignPolarAxisIndexProperty">
      <summary>
            Identifies the AssignPolarAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BeginAngle">
      <summary>
            Gets or sets sector begin angle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BeginAngleProperty">
      <summary>
            Identifies the BeginAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Behind">
      <summary>
            Gets or sets is the sector behind series or on front of it. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderlineStyle">
      <summary>
            Gets or sets borderline style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderlineStyleProperty">
      <summary>
            Identifies the BorderlineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderLocation">
      <summary>
            Border location relative to sector edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderLocationProperty">
      <summary>
            Identifies the BorderLocation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.CenterClipping">
      <summary>
            Defines how the sector should be clipped at the center of the graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.CenterClippingProperty">
      <summary>
            Identifies the CenterClipping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Clear">
      <summary>
            Does nothing on this series type
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ClipInsideGraph">
      <summary>
            Defines if the sector should be drawn outside the main chart circle (clipped).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ClipInsideGraphProperty">
      <summary>
            Identifies the ClipInsideGraph dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.EndAngle">
      <summary>
            Gets or sets sector end angle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.EndAngleProperty">
      <summary>
            Identifies the EndAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate in PX</param>
      <param name="y">y-coordinate in PX</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.MaxAmplitude">
      <summary>
            Gets or sets sector max amplitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.MaxAmplitudeProperty">
      <summary>
            Identifies the MaxAmplitude dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.MinAmplitude">
      <summary>
            Gets or sets sector min amplitude. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.MinAmplitudeProperty">
      <summary>
            Identifies the MinAmplitude dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesPolar.Sector)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            Get item as LegendBoxMouseObject.
            </summary>
      <param name="s">related object</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesPolar.Sector)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.OwnerView">
      <summary>
            Owner view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.SetProperCursor">
      <summary>
            Set proper dragging cursor, or mouse-over cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ShowInLegendBox">
      <summary>
            Gets or sets if enlists the series title text in Legend box of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ShowInLegendBoxProperty">
      <summary>
            Identifies the ShowInLegendBox dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Title">
      <summary>
            Gets or sets sector title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.Visible">
      <summary>
            Gets or sets is the series visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderStyle">
      <summary>
            Edge style.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderStyle.None">
      <summary>
            Border is not drawn.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderStyle.Outer">
      <summary>
            Border is drawn out of area.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderStyle.Center">
      <summary>
            Border is drawn in center of edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.Sector.BorderStyle.Inner">
      <summary>
            Border is container in the sector draw area.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar">
      <summary>
            Base class for all polar series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisPolar">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisPolar</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.AddPoints(Arction.Wpf.ChartingMVVM.PolarSeriesPoint[],System.Boolean)">
      <summary>
            Add points to end of series
            </summary>
      <param name="points">Points</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.AssignPolarAxisIndex">
      <summary>
            Gets or sets index of polar axis assigned to this series. Give -1 when you don't want to assign it yet to any axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.AssignPolarAxisIndexProperty">
      <summary>
            Identifies the AssignPolarAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.CenterClipping">
      <summary>
            Defines how the series should be clipped at the center of the graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.CenterClippingProperty">
      <summary>
            Identifies the CenterClipping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)">
      <summary>
            Method to update colors and coordinates with the one if user sets those
            This is only applicable if event CustomLinePointColoringAndShaping is subscribed
            </summary>
      <param name="coords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="canModifyCoords">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>canModifyCoords</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="canModifyColors">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>canModifyColors</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <param name="dataPointIndices">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataPointIndices</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetCustomLinePointColorsAndShaping(Arction.RenderingDefinitions.PointFloat[]@,System.Boolean,System.Boolean,System.Int32[]@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetMinMaxFromAngleRange(System.Double@,System.Double@,System.Double,System.Double)">
      <summary>
            Get minimum and maximum amplitude values within given angle range
            </summary>
      <param name="minAmplitude">Minimum amplitude value</param>
      <param name="maxAmplitude">Maximum amplitude value</param>
      <param name="minAngle">Angle range start</param>
      <param name="maxAngle">Angle range end</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)">
      <summary>
            Get min and max amplitude value withing given angle range [Obsolete. Using GetMinMaxFromAngleRange instead recommended]
            </summary>
      <param name="yMin">Minimum amplitude value</param>
      <param name="yMax">Maximum amplitude value</param>
      <param name="xRangeMin">Angle range start</param>
      <param name="xRangeMax">Angle range end</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)">
      <summary>
            Get nearest data point
            </summary>
      <param name="pos">position in Point float</param>
      <param name="cursor">data cursor</param>
      <param name="screenCoordinates">screen coordinates</param>
      <param name="distance">out float distance</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.IsCustomLinePointColorsAndShapingSubscribedTo">
      <summary>
            Check if the event CustomLinePointColoringAndShaping is subscribed
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.IsCustomLinePointColorsAndShapingSubscribedTo</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.PointCount">
      <summary>
            Gets point count stored in the Points array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if export is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesPolar.SeriesBasePolar.SolveNearestDataPointByCoord(System.Double,System.Double,System.Double@,System.Double@)">
      <summary>
            Tries to find the closest point of the series to the given coordinates [input in PX]. 
            </summary>
      <param name="xCoordinate">X screen coordinate (as PX) to find the nearest series point from.</param>
      <param name="yCoordinate">Y screen coordinate (as PX) to find the nearest series point from.</param>
      <param name="nearestAngleValue">Angle value of the found point. </param>
      <param name="nearestAmplitudeValue">Amplitude value of the found point.</param>
      <returns>True if nearest point was found, false otherwise. </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound">
      <summary>
            Base class for all polar series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.AllowMarkerSnapping">
      <summary>
            Defines if the series can be snapped to by markers. 
            Note that the snapping must be properly enabled on the marker as well. 
            This allows use of hidden series that can be snapped to.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.AllowMarkerSnappingProperty">
      <summary>
            Defines if the series can be snapped to by markers. 
            Note that the snapping must be properly enabled on the marker as well. 
            This allows use of hidden series that can be snapped to.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ciPointInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ClipInsideGraph">
      <summary>
            Defines if the series is drawn outside the main chart circle (clipped).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ClipInsideGraphProperty">
      <summary>
            Identifies the ClipInsideGraph dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ColorStyle">
      <summary>
            Turn on coloring by Value
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ColorStyleProperty">
      <summary>
            Identifies the ColorVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.Construct">
      <summary>
            Create members
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.CursorTrackEnabled">
      <summary>
            Gets or sets if cursor tracking is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)">
      <summary>
            Get minimum and maximum Y-coordinate on certain range.
            </summary>
      <param name="yMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="yMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="xRangeMin">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xRangeMin</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="xRangeMax">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xRangeMax</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.IncludeInAutoFit">
      <summary>
            Defines if the series affects ZoomToFit operations.
            If false, the series is ignored on ZoomToFit. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.IncludeInAutoFitProperty">
      <summary>
            Defines if the series affects ZoomToFit operations (DependencyProperty)
            If false, the series is ignored on ZoomToFit. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.LineVisible">
      <summary>
            Gets or sets is line visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.LineVisibleProperty">
      <summary>
            Identifies the LineVisible dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.m_lockDataPoints">
      <summary>
            Lock object for points array modification and reading 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.m_View">
      <summary>
            View
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            Get item as LegendBoxMouseObject.
            </summary>
      <param name="s">related object</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.OwnerView">
      <summary>
            Gets owner view.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.PaletteProperty">
      <summary>
            Identifies the Palette dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ParseDouble(System.String)">
      <summary>
            Parse value from string to double
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ParseDouble(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ParseDouble(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.PointStyle">
      <summary>
            Gets or sets point style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.PointStyleProperty">
      <summary>
            Identifies the PointStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.PointsVisible">
      <summary>
            Gets or sets if points are visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.PointsVisibleProperty">
      <summary>
            Identifies the PointsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ShowInLegendBox">
      <summary>
            Gets or sets if enlists the series title text in Legend box of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ShowInLegendBoxProperty">
      <summary>
            Identifies the ShowInLegendBox dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.ValueRangePalette">
      <summary>
            Palette for color by Value
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.Visible">
      <summary>
            Gets or sets if the series is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesRound.SeriesBaseRound.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith">
      <summary>
            Point line series for smith chart. You can define the line style and point style. Add points with AddPoints method. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisSmith">Smith axis this point liner series belongs to.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith">
      <summary>
            Base class for all polar series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisSmith">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisSmith</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith,Arction.Wpf.ChartingMVVM.Axes.AxisSmith)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double)">
      <summary>
            Get min and max amplitude value withing given angle range
            </summary>
      <param name="yMin">Minimum amplitude value</param>
      <param name="yMax">Maximum amplitude value</param>
      <param name="xRangeMin">Angle range start</param>
      <param name="xRangeMax">Angle range end</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </param>
      <param name="cursor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cursor</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </param>
      <param name="screenCoordinates">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>screenCoordinates</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </param>
      <param name="distance">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>distance</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.GetNearestDataPoint(Arction.RenderingDefinitions.PointFloat,Arction.Wpf.ChartingMVVM.DataCursor.DataCursor,Arction.RenderingDefinitions.PointFloat@,System.Single@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.PointsProperty">
      <summary>
            Points dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesSmith.SeriesBaseSmith.SolverNearestDataPointByCoord(System.Double,System.Double,System.Double@,System.Double@)">
      <summary>
            Tries to find the closest point of the series to the given coordinates. 
            </summary>
      <param name="xCoordinate">X screen coordinate to find the nearest series point from.</param>
      <param name="yCoordinate">X screen coordinate to find the nearest series point from.</param>
      <param name="nearestRealComponent">Angle value of the found point. </param>
      <param name="nearestImaginaryComponent">Amplitude value of the found point.</param>
      <returns>True if nearest point was found, false otherwise. </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries">
      <summary>
            Area series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisY">Y axis you want to bind.</param>
      <param name="axisX">X axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.AddValues(Arction.Wpf.ChartingMVVM.AreaSeriesPoint[])">
      <summary>
            Add values.
            </summary>
      <param name="values">Values array.</param>
      <returns>Total point count after adding.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.BaseValue">
      <summary>
            Gets or sets base value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.BaseValueProperty">
      <summary>
            Identifies the BaseValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.Clear">
      <summary>
            Clear all data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.CreatePointStyleHigh">
      <summary>
            Create high point style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.GetPoint(System.Int32,Arction.Wpf.ChartingMVVM.AreaSeriesPoint@)">
      <summary>
            Get point by given index.
            </summary>
      <param name="index">Index of point to get.</param>
      <param name="point">Point.</param>
      <returns>False if invalid index is given, otherwise true.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.GetPoint(System.Int32,System.Double@,System.Double@)">
      <summary>
            Get point by given index.
            </summary>
      <param name="index">Index of point to get.</param>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <returns>False if invalid index is given, otherwise true.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)">
      <summary>
            On Point Style Changed
            </summary>
      <param name="oNew">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oNew</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointsVisibleChanged(System.Boolean)">
      <summary>
            On Points Visible Changed
            </summary>
      <param name="NewValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>NewValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointsVisibleChanged(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.OnPointsVisibleChanged(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.Points">
      <summary>
            Gets or sets area series points array, to store data at once. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.PointStyle">
      <summary>
            Gets or sets points style. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.PointsVisible">
      <summary>
            Gets or sets if points are visible. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.AreaSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.Band">
      <summary>
            Band series is X or Y axis bound vertical or horizontal rectangular area, which ranges from 
            graph bottom to top (X bound) or left to right (Y bound)
            from left to right having full width of the graph.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.AllowMoveByUser">
      <summary>
            Gets or sets if allows user to move the band. This is a dependency property. Move the band by dragging the band anywhere but not from its edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.AllowMoveByUserProperty">
      <summary>
            Identifies the AllowMoveByUser dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.AllowResizeByUser">
      <summary>
            Gets or sets if allows user to resize the band. This is a dependency property. Resize the band by dragging the band from its edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.AllowResizeByUserProperty">
      <summary>
            Identifies the AllowResizeByUser dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Behind">
      <summary>
            Gets or sets if the band is behind line series or on front of it. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Binding">
      <summary>
            Gets or sets if the band is bound to X or Y axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BindingProperty">
      <summary>
            Identifies the Binding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BorderColor">
      <summary>
            Gets or sets border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BorderColorProperty">
      <summary>
            Identifies the BorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BorderWidth">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.BorderWidthProperty">
      <summary>
            Identifies the BorderWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Clear">
      <summary>
            Does nothing on this series type.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.Band.DraggedByUser">
      <summary>
            Moved by user.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.InvokeDraggedByUserEvent">
      <summary>
            Invoke dragged by user event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.InvokeDraggedByUserEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.InvokeResizedByUserEvent">
      <summary>
            Invoke resized by user event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.InvokeResizedByUserEvent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.IsOverBorder(System.Int32,System.Int32)">
      <summary>
            Check if position is over border.
            </summary>
      <param name="y">y-coordinate</param>
      <param name="x">x-coordinate</param>
      <returns>Edge on which user interactive device is</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over band.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.m_iMouseDragDistanceTolerance">
      <summary>
            Mouse moving pixel distance after which state is changed to Drag.
            This is also in MouseMoveItem, but that's not inherited, but SeriesBaseXY instead.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.MaxLimit">
      <summary>
            Gets or sets maximum value for ValueBegin or ValueEnd. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.MaxLimitProperty">
      <summary>
            Identifies the MaxLimit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.MinLimit">
      <summary>
            Gets or sets minimum value for ValueBegin or ValueEnd. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.MinLimitProperty">
      <summary>
            Identifies the MinLimit dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ResizeBorderWidth">
      <summary>
            Gets or sets band resize border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ResizeBorderWidthProperty">
      <summary>
            Identifies the ResizeBorderWidth dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ResizedByUser">
      <summary>
            Band has been resized by user.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.SetProperCursor">
      <summary>
            Set proper dragging cursor, or over cursor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.SetValues(System.Double,System.Double)">
      <summary>
            Set begin and end values.
            </summary>
      <param name="begin">Begin value.</param>
      <param name="end">End value.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ToString">
      <summary>
            Description of class.
            </summary>
      <returns>description</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.UseLimits">
      <summary>
            Gets or sets if limit the ValueBegin and ValueEnd inside the MinLimit...MaxLimit range. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.UseLimitsProperty">
      <summary>
            Identifies the UseLimits dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValueBegin">
      <summary>
            Gets or sets band begin value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValueBeginProperty">
      <summary>
            Identifies the ValueBegin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValueEnd">
      <summary>
            Gets or sets band end value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValueEndProperty">
      <summary>
            Identifies the ValueEnd dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValuesChanged">
      <summary>
            Band begin and/or end value have been changed.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus">
      <summary>
            User interactive device over border status.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus.None">
      <summary>
            No edge.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus.Right">
      <summary>
            Right.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus.Top">
      <summary>
            Top.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus.Left">
      <summary>
            Left.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.Band.OverBorderStatus.Bottom">
      <summary>
            Bottom.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ResizedByUserEventHandler">
      <summary>
            The delegate to use for handlers that receive the ResizedByUser event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the ResizedByUser event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.Band.ValuesChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the ValuesChanged event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the ValuesChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs">
      <summary>
            Represents a class that provides arguments for the ResizedByUser event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BandResizedByUserEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs.Band">
      <summary>
            Band.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs.CancelRendering">
      <summary>
            Set 'true' to prevent flickering if you update the chart in the event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs.ValueBegin">
      <summary>
            Begin value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BandResizedByUserEventArgs.ValueEnd">
      <summary>
            End value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries">
      <summary>
            Bar series. Bars series present the data as vertical column(s). 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="ownerView">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.AddValue(System.Double,System.Double,System.String,System.Boolean)">
      <summary>
            Add value to end of Values array
            </summary>
      <param name="xValue">X value</param>
      <param name="yValue">Y value</param>
      <param name="invalidateChart">Refresh chart after value adding</param>
      <param name="text">Text</param>
      <returns>New value index</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BarThickness">
      <summary>
            Gets or sets bar width in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BarThicknessProperty">
      <summary>
            Identifies the BarThickness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BaseLevel">
      <summary>
            Gets or sets base level value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BaseLevelProperty">
      <summary>
            Identifies the BaseLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BorderColor">
      <summary>
            Gets or sets border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BorderColorProperty">
      <summary>
            Identifies the BorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BorderWidth">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.BorderWidthProperty">
      <summary>
            Identifies the BorderWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Clear">
      <summary>
            Clear all points
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.CursorTrackEnabled">
      <summary>
            Gets or sets if cursor tracking is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.DeleteValue(System.Int32,System.Boolean)">
      <summary>
            Delete a value by given index. 
            </summary>
      <param name="valueIndex">Index of value to be deleted.</param>
      <param name="invalidateChart">Refresh chart after value deleting.</param>
      <returns>False if invalid index is given, otherwise true.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.DeleteValuesBeforeX(System.Double)">
      <summary>
            Delete values having smaller X value than given value.
            </summary>
      <param name="xValue">X value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.GetBarRectangles">
      <summary>
            Get rendered bar rectangles of all data items of this series.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.GetBarRectangles</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.GetText(System.Int32)">
      <summary>
            Get Text by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>Text value. If invalid index is given, returns "".</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.GetXValue(System.Int32)">
      <summary>
            Get X value by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>X value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.GetYValue(System.Int32)">
      <summary>
            Get Y value by given index.
            </summary>
      <param name="valueIndex">Value index.</param>
      <returns>Y value. If invalid index is given, returns 0.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>True if is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.IsPositionOver(System.Int32,System.Int32,System.Int32@,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="valueIndex">Index of value the position is over of</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>True if position is over item, false otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.LabelStyle">
      <summary>
            Gets or sets bar labels style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.LabelStyleProperty">
      <summary>
            Identifies the LabelStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.m_lockValues">
      <summary>
            Lock object for values array modification and reading 
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.OldDataDropped">
      <summary>
            Occurs when old data points have been dropped.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file. 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.SetValue(System.Int32,System.Double,System.Double,System.String,System.Boolean)">
      <summary>
            Set value by given index
            </summary>
      <param name="valueIndex">Index of value to be set</param>
      <param name="xValue">X value</param>
      <param name="yValue">Y value</param>
      <param name="invalidateChart">Refresh chart after value setting</param>
      <param name="text">Text</param>
      <returns>False if invalid index is given, else true</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Shadow">
      <summary>
            Gets or sets shadow below the bar. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.ShadowProperty">
      <summary>
            Identifies the Shadow dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.SortData(System.Boolean)">
      <summary>
            Sort data values ascending or descending. Makes big values to be drawn closest to axis zero if sort by ascending.
            </summary>
      <param name="ascending">If true, sort ascending else descending.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.Values">
      <summary>
            Gets or sets series values. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.ValuesCount">
      <summary>
            Values count stored in the Values array.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.ValuesProperty">
      <summary>
            Identifies the Values dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BarSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BeforeSeriesRenderingEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforeSeriesRendering event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BeforeSeriesRenderingEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BeforeSeriesRenderingEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BeforeSeriesRenderingEventArgs.CancelSeriesRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BeforeSeriesRenderingEventArgs.Series">
      <summary>
            The series that is about to be rendered.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase">
      <summary>
            Base class for block series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisY">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisY</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Clear">
      <summary>
            Clear all data.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Color">
      <summary>
            Gets and sets color of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.OffsetY">
      <summary>
            Get or set Offset y value. This is added to each data value when rendering. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.OffsetYProperty">
      <summary>
            Identifies the OffsetY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.ScrollModePointsKeepLevel">
      <summary>
            Tells how often the source data is cleared when using X axis scroll mode. This is a dependency property.
            Valid range is 1...100.
            1 frees the source data after every 1/10 scroll page.
            Use this when there's not much memory available.
            100 frees the source data after every 100/10 = 10 pages.
            One need to set <seealso cref="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DropOldSeriesData">ViewXY.DropOldSeriesData</seealso> to true to enable this functionality.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.ScrollModePointsKeepLevelProperty">
      <summary>
            Identifies the ScrollModePointsKeepLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.SeriesEventMarkers">
      <summary>
            Gets or sets Series event markers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.SeriesEventMarkersProperty">
      <summary>
            Identifies the SeriesEventMarkers dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.SolveNearestSampleByCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest sample to given X and Y screen coordinate.
            </summary>
      <param name="xCoordinate">X screen coordinate.</param>
      <param name="yCoordinate">Y screen coordinate.</param>
      <param name="nearestSampleXValue">Nearest sample X.</param>
      <param name="nearestSampleYValue">Nearest sample Y.</param>
      <param name="nearestIndex">Nearest sample index in the SampleSingle or SamplesDouble array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest sample to given X and Y value. 
            </summary>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="nearestSampleXValue">Nearest sample X.</param>
      <param name="nearestSampleYValue">Nearest sample Y.</param>
      <param name="nearestIndex">Nearest sample index in the SampleSingle or SamplesDouble array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve y value at x value.
            </summary>
      <param name="x">Data x value.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Title">
      <summary>
            Gets and sets Title of series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.Width">
      <summary>
            Gets and sets width of line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1">
      <summary>
            Typed base class for block series.
            </summary>
      <typeparam name="BLOCKDATATYPE"></typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisY">Y-axis you want to bind.</param>
      <param name="axisX">X-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.ActualPointCount">
      <summary>
            Actual point count in series.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.ActualPointCount</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.BlockSeriesBase`1.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine">
      <summary>
            Constant line is a horizontal line attached to a Y-axis value. It is drawn 
            from left to right having full width of the graph.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.AllowMoveByUser">
      <summary>
            Gets or sets if allows user to move the band. Move the band by dragging the band anywhere but not from its edge. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.AllowMoveByUserProperty">
      <summary>
            Identifies the AllowMoveByUser dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Behind">
      <summary>
            Gets or sets is the constant line behind lineseries or on front of it. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Clear">
      <summary>
            Does nothing on this series type.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.SetProperCursor">
      <summary>
            Set proper cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.Value">
      <summary>
            Gets or sets constant line value. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.ValueChanged">
      <summary>
            Value has been changed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ConstantLine.ValueChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the ValueChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the ValueChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.CustomLinePointColoringAndShapingEventArgs">
      <summary>
            Represents a class that provides arguments for the CustomLinePointColoringAndShaping event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.CustomLinePointColoringAndShapingEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of CustomLinePointColoringAndShapingEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomLinePointColoringAndShapingEventArgs.Series">
      <summary>
            The series to which this event is associated.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs">
      <summary>
            Represents a class that provides arguments for the CustomStockDataAppearance event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of CustomStockDataAppearanceEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.BarDownColors">
      <summary>
            Bar color (down).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.BarUpColors">
      <summary>
            Bar color (up).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.CandleFillDownColors">
      <summary>
            Candle fill colors (down).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.CandleFillDownGradientColors">
      <summary>
            Candle fill gradient colors (down).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.CandleFillUpColors">
      <summary>
            Candle fill colors (down).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.CandleFillUpGradientColors">
      <summary>
            Candle fill gradient colors (up).
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.Data">
      <summary>
            Stock series data.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.CustomStockDataAppearanceEventArgs.ItemWidths">
      <summary>
            Item widths.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand">
      <summary>
            Represents a DelegateCommand object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.#ctor(System.Action{System.Object})">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="execute">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>execute</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.#ctor(System.Action{System.Object})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="execute">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>execute</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})</parameter>
          </include>
        </markup>
      </param>
      <param name="canExecute">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>canExecute</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.CanExecute(System.Object)">
      <summary>
            Able to execute parameter
            </summary>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.CanExecute(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.CanExecute(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.CanExecuteChanged">
      <summary>
            Can execute event
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.Execute(System.Object)">
      <summary>
            Execute parameter
            </summary>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.Execute(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DelegateCommand.RaiseCanExecuteChanged">
      <summary>
            Occurs when can execute is changed
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries">
      <summary>
            Digital line series. Uses arrays of uints as input data: uint[], where each value corresponds to 32 bit of data. Can be only used with Linear axis and DirectX11 engine.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Series swner.</param>
      <param name="axisX">Attached x-axis.</param>
      <param name="axisY">Attached y-axis.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.AddBits(System.UInt32[],System.Boolean)">
      <summary>
            Add bits to end of series. Each input value correspond to 32 bit values.
            </summary>
      <param name="data">Data array.</param>
      <param name="invalidateChart">Update chart after adding data. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series bit count after adding.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.BitCountProperty">
      <summary>
            Identifies the BitCount dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.Clear">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.Clear</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.Construct">
      <summary>
            Construct some properties.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DeletePointsBeforeX(System.Double,System.Boolean)">
      <summary>
            Delete all blocks where the last point in the block has smaller X value than the given value. Note, the block is formed when AddPoints method is called.
            </summary>
      <param name="xValue">X value.</param>
      <param name="compactMemory">Compact memory.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DigitalHigh">
      <summary>
            Gets or sets DigitalHigh value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DigitalHighProperty">
      <summary>
            Identifies the DigitalHigh dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DigitalLow">
      <summary>
            Gets or sets DigitalLow value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DigitalLowProperty">
      <summary>
            Identifies the DigitalLow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.Digits">
      <summary>
            Sets series data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.DigitsProperty">
      <summary>
            Identifies the Digits dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.FirstSampleTimeStamp">
      <summary>
            Gets or sets first sample time stamp, usually 1/SamplingFrequency. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.FirstSampleTimeStampProperty">
      <summary>
            Identifies the FirstSampleTimeStamp dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.GetSampleAtIndex(System.Int64)">
      <summary>
            Get sample at index.
            </summary>
      <param name="index">Index to sample.</param>
      <returns>Sample at index.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.Item(System.Int64)">
      <summary>
            Get value at index.
            </summary>
      <param name="index">Index to data.</param>
      <returns>Data value at index.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.LimitYToStackSegment">
      <summary>
            Gets or sets whether Y is limited to stack segment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.LimitYToStackSegmentProperty">
      <summary>
            Identifies the LimitYToStackSegment dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.OldDataDropped">
      <summary>
            Occurs when old data samples have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.SamplingFrequency">
      <summary>
            Gets or sets sampling frequency, in Hz. (sample interval is 1/SamplingFrequency). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.SamplingFrequencyProperty">
      <summary>
            Identifies the SamplingFrequency dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data.
            </summary>
      <param name="trigPosX">Output triggered X position.</param>
      <param name="trigLevel">Trigger level Y value.</param>
      <param name="seekStartX">Minimum X value that is investigated.</param>
      <param name="seekEndX">Maximum X value that is investigated.</param>
      <param name="edge">Triggering edge.</param>
      <returns>True if trigger position was detected, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve Y value on given X value. Returned value will be interpolated, if X is between sequential points X values.
            </summary>
      <param name="x">X value.</param>
      <returns>Solve status. NearestX will be double.NaN if point is not in the data range.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.DigitalLineSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries">
      <summary>
            Freeform point line series. You can define the line and points style. Add points with AddPoints method. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.AddPoints(Arction.Wpf.ChartingMVVM.SeriesErrorPoint[],System.Boolean)">
      <summary>
            Add points with error tolerance to end of series.
            </summary>
      <param name="points">Points.</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPoint[],System.Boolean)">
      <summary>
            Add points to end of series.
            </summary>
      <param name="points">Points.</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.AddPoints(System.Double[],System.Double[],System.Boolean)">
      <summary>
            Add points to end of series.
            </summary>
      <param name="xValues">X values.</param>
      <param name="yValues">Y values.</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.ciPointInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.Clear">
      <summary>
            Clear all points
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.ErrorBars">
      <summary>
            Gets or sets error bars. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.ErrorBarsProperty">
      <summary>
            Identifies the ErrorBars dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetLastPoint">
      <summary>
            Gets last (newest) point.
            </summary>
      <returns>Last point.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get min and max Y value within given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetMinMaxFromXRangeIgnoreValue(System.Double@,System.Double@,System.Double,System.Double,System.Double)">
      <summary>
            This is similar to GetMinMaxFromXRange, but tailored for Series with DataBreaking.
            Get min and max Y value within given X range, but Ignore some values (gap defining value).
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="dIgnoreValue">Gap defining value.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values.
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetXValues">
      <summary>
            Get X values array. 
            </summary>
      <returns>X values array.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.GetYValues">
      <summary>
            Get Y values array. 
            </summary>
      <returns>Y values array.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.IndividualPointColoring">
      <summary>
             Selects how to use the individual point colors. Sets which PointStyle color is replaced with PointColor. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.IndividualPointColoringProperty">
      <summary>
            Identifies the IndividualPointColoring dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.InvalidateData">
      <summary>
            Invalidate data array. Statistics and draw data are recalculated.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file. Note that this loads points according to <seealso cref="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsType" /> value. So if you need to load both, change PointsType accordingly between two calls to this method.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.OldestPointIndex">
      <summary>
            Gets the index of oldest point in Points array. This is a dependency property.
            When PointCountLimitEnabled is true, the Points array is used as an circular point buffer. 
            This is 0 always when PointCountLimitEnabled is false. 
            To read Points, when OldestPointIndex is 0: 
            Read from index 0 till PointCount-1.
            To read Points, when OldestPointIndex is &gt; 0: 
            First read from OldestPointIndex till PointCountLimit-1. Then read from index 0 till OldestPointIndex-1.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.OldestPointIndexProperty">
      <summary>
            Identifies the OldestPointIndex dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointCountLimit">
      <summary>
            Gets or sets point count limit. This is a dependency property. If you add points more than limited count, first 
            points are automatically removed. The limiter only applies if PointCountLimitEnabled is true.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointCountLimitEnabled">
      <summary>
            Gets or sets if limit point count by dropping oldest points. The point count is limited to PointCountLimit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointCountLimitEnabledProperty">
      <summary>
            Identifies the PointCountLimitEnabled dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointCountLimitProperty">
      <summary>
            Identifies the PointCountLimit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsType">
      <summary>
            Gets or sets points type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsTypeProperty">
      <summary>
            Identifies the PointsType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsWithErrors">
      <summary>
            Gets or sets series points with error tolerance indicators. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsWithErrorsProperty">
      <summary>
            Identifies the PointsWithErrors dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file. Note that this save points according to <seealso cref="P:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.PointsType" /> value. So if you need to save both, change PointsType accordingly between two calls to this method.
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SetXValue(System.Int32,System.Double)">
      <summary>
            Set X value of Points array item. 
            </summary>
      <param name="index">Point index in Points array.</param>
      <param name="xValue">X value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SetYValue(System.Int32,System.Double)">
      <summary>
            Set Y value of Points array item. 
            </summary>
      <param name="index">Point index in Points array.</param>
      <param name="yValue">Y value.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveNearestDataPointByCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest data point to given X and Y screen coordinate [input in DIP]. 
            </summary>
      <param name="xCoordinate">X screen coordinate as DIP.</param>
      <param name="yCoordinate">Y screen coordinate as DIP.</param>
      <param name="nearestPointXValue">Nearest data point X.</param>
      <param name="nearestPointYValue">Nearest data point Y.</param>
      <param name="nearestIndex">Nearest data point index in the Points or PointsWithErrors array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveNearestDataPointByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest data point to given X and Y value. 
            </summary>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="nearestPointXValue">Nearest data point X.</param>
      <param name="nearestPointYValue">Nearest data point Y.</param>
      <param name="nearestIndex">Nearest data point index in the Points or PointsWithErrors array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYCoordsAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find all instances of FreeformPointLineSeries’ intersection with vertical line going through the given X-coordinate. 
            The intersection point is described by segment of line (pair of LineSeries’ points) it is found. 
            Each intersection point is returned as <see cref="T:Arction.Wpf.ChartingMVVM.LineSeriesCoordinateSolveResult" /> structure, and method returns the list of those structures.
            <para>
            Note that you might be interested in using <see cref="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveNearestDataPointByCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)" />
            for some of the use cases.
            </para><param name="x">X-coordinate in pixels or DIP.</param><param name="useDIP">Use DIP instead of pixels as parameters.</param><returns>Iterable list of solve results.</returns></summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYCoordsAtXCoord(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="useDIP">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useDIP</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYCoordsAtXCoord(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYCoordsAtXCoord(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYValuesAtXValue(System.Double)">
      <summary>
            Find all instances of FreeformPointLineSeries’ intersection with vertical line going through the given X-value. 
            The intersection point is described by segment of line (pair of LineSeries’ points) it is found. 
            Each intersection point is returned as <see cref="T:Arction.Wpf.ChartingMVVM.LineSeriesValueSolveResult" /> structure, and method returns the list of those structures.
            <para>
            Note that you might be interested in using <see cref="M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveNearestDataPointByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)" />
            for some of the use cases.
            </para><param name="x">X-value.</param><returns>Iterable list of solve results.</returns></summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYValuesAtXValue(System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.FreeformPointLineSeries.SolveYValuesAtXValue(System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries">
      <summary>
            HighLow series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.AddValues(Arction.Wpf.ChartingMVVM.HighLowSeriesPoint[])">
      <summary>
            Add values.
            </summary>
      <param name="values">Values array.</param>
      <returns>Total point count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.Clear">
      <summary>
            Clear all data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.CreateLineStyleLow">
      <summary>
            Create low line style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.CreatePointStyleHigh">
      <summary>
            Create high point style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.CreatePointStyleLow">
      <summary>
            Create low point style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.GetPoint(System.Int32,Arction.Wpf.ChartingMVVM.HighLowSeriesPoint@)">
      <summary>
            Get point by given index.
            </summary>
      <param name="index">Index of point to get.</param>
      <param name="point">Point.</param>
      <returns>False if invalid index is given, otherwise true.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineStyleHigh">
      <summary>
            Gets or sets line style for high edge. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineStyleHighProperty">
      <summary>
            Identifies the LineStyleHigh dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineStyleLow">
      <summary>
            Gets or sets line style for low edge. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineStyleLowProperty">
      <summary>
            Identifies the LineStyleLow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineVisibleHigh">
      <summary>
            Gets or sets high line visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineVisibleHighProperty">
      <summary>
            Identifies the LineVisibleHigh dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineVisibleLow">
      <summary>
            Gets or sets low line visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LineVisibleLowProperty">
      <summary>
            Identifies the LineVisibleLow dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.Points">
      <summary>
            Gets or sets points collection. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointStyleHigh">
      <summary>
            Gets or sets point style high. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointStyleHighProperty">
      <summary>
            Identifies the PointStyleHigh dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointStyleLow">
      <summary>
            Gets or sets point style low. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointStyleLowProperty">
      <summary>
            Identifies the PointStyleLow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointsVisibleHigh">
      <summary>
            Gets or sets high points visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointsVisibleHighProperty">
      <summary>
            Identifies the PointsVisibleHigh dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointsVisibleLow">
      <summary>
            Gets or sets low points visibility. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.PointsVisibleLowProperty">
      <summary>
            Identifies the PointsVisibleLow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.ReverseFill">
      <summary>
            Gets or sets reverse fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.ReverseFillProperty">
      <summary>
            Identifies the ReverseFill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file. 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase">
      <summary>
            HighLow series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind. You can give null if X-axis binding is used.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.Antialias">
      <summary>
            Gets or sets if draw antialiased. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.AntialiasProperty">
      <summary>
            Identifies the Antialias dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ciPointInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ContinuousOverScaleBreak">
      <summary>
            Draws a connecting area over ExcludeRange gap, if this flag is set. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ContinuousOverScaleBreakProperty">
      <summary>
            Identifies the ContinuousOverScaleBreak dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CreateFill">
      <summary>
            Create fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CreateLineStyle">
      <summary>
            Create line style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CreateReversedFill">
      <summary>
            Create reverse fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CursorTrackEnabled">
      <summary>
            Gets or sets if cursor tracking is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeceedColor">
      <summary>
            Gets or sets deceed fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeceedColorProperty">
      <summary>
            Identifies the DeceedColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeceedLimit">
      <summary>
            Gets or sets deceed limit (value "of below"). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeceedLimitProperty">
      <summary>
            Identifies the DeceedLimit dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeletePointsBeforeX(System.Double)">
      <summary>
            Delete points having smaller X value than given value
            </summary>
      <param name="xValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.DeletePointsBeforeX(System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ExceedColor">
      <summary>
            Gets or sets exceed color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ExceedColorProperty">
      <summary>
            Identifies the ExceedColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ExceedLimit">
      <summary>
            Gets or sets exceed limit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ExceedLimitProperty">
      <summary>
            Identifies the ExceedLimit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.Fill">
      <summary>
            Gets or sets normal fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get min and max Y value within given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X min</param>
      <param name="xMax">X max</param>
      <returns>True if minimum X and maximum X was obtained successfully</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.IndividualPointColoring">
      <summary>
             Selects how to use the individual point colors. Sets which PointStyle color is replaced with PointColor. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.IndividualPointColoringProperty">
      <summary>
            Identifies the IndividualPointColoring dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.InvalidateData">
      <summary>
            Invalidate data array. Statistics and draw data are recalculated.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.OldDataDropped">
      <summary>
            Occurs when old data points have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ScrollingStabilizing">
      <summary>
            Gets or sets if stabilize scrolling mode by rounding shifting to nearest integer pixel position. This is a dependency property.
            Reduces wobbling of the scrolling waveform, but may show as slight X-dimensional distortion. 
            <remarks>Only applies when XAxis ScrollMode = Scrolling</remarks><seealso cref="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollMode" /></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ScrollingStabilizingProperty">
      <summary>
            Identifies the ScrollingStabilizing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ScrollModePointsKeepLevel">
      <summary>
            Gets or sets how often the draw data is cleared when using X axis scroll mode. This is a dependency property.
            Valid range is 1...100
            1 frees the draw data and the reconstucts the draw data after every 1/10 scroll page.
            Use this when there's not much memory available.
            100 frees the draw data and the reconstucts the draw data after every 100/10 = 10 pages.
            Use this when smooth scroll with high FPS is important. Reserves some extra memory. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.ScrollModePointsKeepLevelProperty">
      <summary>
            Identifies the ScrollModePointsKeepLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.SeekVisibleRangeStartPointIndex(System.Double,System.Int32)">
      <summary>
            Seek visible range first series point index (actually one point before that)
            </summary>
      <param name="startXValue">Start x value</param>
      <param name="currentRangeStartPointIndex">Sweep page index</param>
      <returns>Start point index. If unable to find start point, returns -1</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.SimpleHighlightColor">
      <summary>
            Gets or sets simple highlight color when user interactive device is over. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.SimpleHighlightColorProperty">
      <summary>
            Identifies the SimpleHighlightColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve y-value or range on given x-value.
            </summary>
      <param name="x">x-value</param>
      <returns>Solve status.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.UseLimits">
      <summary>
            Gets or sets if use limits. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.UseLimitsProperty">
      <summary>
            Identifies the UseLimits dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.HighLowSeriesBase.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ILevelTriggable">
      <summary>
            Interface for triggering X axis position from series values 
            The triggering can be done from raising and falling edge. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ILevelTriggable.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data.
            </summary>
      <param name="trigPosX">Output triggered X position</param>
      <param name="trigLevel">Trigger level Y value</param>
      <param name="seekStartX">Minimum X value that is investigated</param>
      <param name="seekEndX">Maximum X value that is investigated</param>
      <param name="edge">Triggering edge</param>
      <returns>True if trigger position was detected, else false.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries">
      <summary>
            Intensity grid series. Evenly spaced intensity value series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.GetMinimumsAndMaximums(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Get minimums and maximums of Series X, Y and data Values. 
            </summary>
      <param name="minX">Minimum X.</param>
      <param name="maxX">Maximum X.</param>
      <param name="minY">Minimum Y.</param>
      <param name="maxY">Maximum Y.</param>
      <param name="minValue">Minimum data value.</param>
      <param name="maxValue">Maximum data value.</param>
      <returns>True if data could be analyzed and output values are valid, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.PixelRendering">
      <summary>
            Gets or sets if render as non-interpolated bitmap, data point in the middle of each cell. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.PixelRenderingProperty">
      <summary>
            Identifies the PixelRendering dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMaxX">
      <summary>
            Gets or sets maximum X range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMaxXProperty">
      <summary>
            Identifies the RangeMaxX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMaxY">
      <summary>
            Gets or sets maximum Y range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMaxYProperty">
      <summary>
            Identifies the RangeMaxY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMinX">
      <summary>
            Gets or sets minimum X range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMinXProperty">
      <summary>
            Identifies the RangeMinX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMinY">
      <summary>
            Gets or sets minimum Y range value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.RangeMinYProperty">
      <summary>
            Identifies the RangeMinY dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityGridSeries.SetRangesXY(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets X and Y range at same time. Very CPU efficient way compared to separately setting
            RangeMinX, RangeMaxX, RangeMinY and RangeMaxY properties. 
            </summary>
      <param name="minX">Minimum X.</param>
      <param name="maxX">Maximum X.</param>
      <param name="minY">Minimum Y.</param>
      <param name="maxY">Maximum Y.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries">
      <summary>
            Intensity mesh series. Nodes can be freely located in X-Y space.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor. 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensityMeshSeries.GetMinimumsAndMaximums(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Get minimums and maximums of Series X, Y and data Values. 
            </summary>
      <param name="minX">Minimum X.</param>
      <param name="maxX">Maximum X.</param>
      <param name="minY">Minimum Y.</param>
      <param name="maxY">Maximum Y.</param>
      <param name="minValue">Minimum data value.</param>
      <param name="maxValue">Maximum data value.</param>
      <returns>True if data could be analyzed and output values are valid, otherwise false.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase">
      <summary>
            Base class for intensity series classes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.CheckSurfaceSizeForGPU(System.Int32,System.Int32)">
      <summary>
            Check if the given surface size can be used with the GPU.
            GPU index buffer capacity is verified. 
            </summary>
      <param name="gridSizeX">X size.</param>
      <param name="gridSizeZ">Z size.</param>
      <returns>True if index buffer size on the GPU is sufficient, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Clear">
      <summary>
            Clears the series. Initializes Data with InitialValues. 
            Sets the data point colors to BaseColor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineLabels">
      <summary>
            Contour Line Label's properties.
            Property tree: if enabled; format, font and color of text. Default state is disabled;
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineLabelsProperty">
      <summary>
            Identifies the ContourLineLabels dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineStyle">
      <summary>
            Gets or sets contour line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineStyleProperty">
      <summary>
            Identifies the ContourLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineType">
      <summary>
            Gets or sets contour line type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ContourLineTypeProperty">
      <summary>
            Identifies the ContourLineType dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.CreateNewDataArray(System.Int32,System.Int32)">
      <summary>
            Create new data array.
            </summary>
      <param name="sizeX">X size.</param>
      <param name="sizeY">Y size.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.CursorTrackEnabled">
      <summary>
            Enable DataCursor tracking. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Data">
      <summary>
            Gets or sets intensity point data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.DataProperty">
      <summary>
            Identifies the Data dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.DisposeStaticBuffers(System.Int32)">
      <summary>
            Free all vertex and index buffer data 
            </summary>
      <param name="sweepPageIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sweepPageIndex</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.DisposeStaticBuffers(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.FastContourZoneRange">
      <summary>
            Gets or sets data value range for fast contour zones. The fast contour zone is a contour line equivalent. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.FastContourZoneRangeProperty">
      <summary>
            Identifies the FastContourZoneRange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Fill">
      <summary>
            Gets or sets fill style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.FullInterpolation">
      <summary>
            Gets or sets if render with full interpolation. If only half interpolation is used, it can give performance increment with large instensity series. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.FullInterpolationProperty">
      <summary>
            Identifies the FullInterpolation dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.GetContourRoutes(System.Collections.Generic.List{System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.PointDouble2D[]}}@,System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Windows.Media.Color}@)">
      <summary>
            Get Contour to the List of levels, which is List of polylines/routes.
            The contour lines are rebuild with current palette steps' value and color.
            </summary>
      <param name="listContourRoutes">The List of list of polylines for each contour step value.</param>
      <param name="lContourLevelValues">The list of contour's step values.</param>
      <param name="lContourLevelColors">The list of contour's step colors.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.GetMinimumsAndMaximums(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Get minimums and maximums of Series X, Y and data Values. 
            </summary>
      <param name="minX">Minimum X.</param>
      <param name="maxX">Maximum X.</param>
      <param name="minY">Minimum Y.</param>
      <param name="maxY">Maximum Y.</param>
      <param name="minValue">Minimum data value.</param>
      <param name="maxValue">Maximum data value.</param>
      <returns>True if data could be analyzed and output values are valid, otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InitialValue">
      <summary>
            Gets or sets initial value for data Y. Clears the series. It is applied when creating or resizing Data array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InitialValueProperty">
      <summary>
            Identifies the InitialValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InvalidateColorsOnly">
      <summary>
            Invalidate colors only. Use this together with Optimization = DynamicValuesData. 
            Does not update the geometry to the GPU when not needed, allowing significantly faster rendering. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InvalidateData">
      <summary>
            Series data has been modified directly by its array. 
            Use this method to notify chart that this series needs a refresh.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InvalidateStencil">
      <summary>
            Invalidate stencil data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.InvalidateValuesDataOnly">
      <summary>
            Invalidate values data only. Use this together with Optimization = DynamicValuesData. 
            Does not update the geometry to the GPU when not needed, allowing significantly faster rendering. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.IsCoordinateOverCell(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
      <summary>
            Check if coordinate is over cell in the series.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="hitColumn">Returned column index.</param>
      <param name="hitRow">Returned row index.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True, if coordinate is over some cell, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxUnits">
      <summary>
            Gets or sets intensity series units, shown in legend box. Use this for intensity data units, not Y axis units. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxUnitsProperty">
      <summary>
            Identifies the LegendBoxUnits dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxValuesFormat">
      <summary>
            Gets or sets numeric format for showing legend box value labels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxValuesFormatProperty">
      <summary>
            Identifies the LegendBoxValuesFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxValueType">
      <summary>
            Gets or sets value type: time, numeric or coordinates. Affects legend box value formatting. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LegendBoxValueTypeProperty">
      <summary>
            Identifies the LegendBoxValueType dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.m_lockData">
      <summary>
            Lock object for data array modification and reading 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Optimization">
      <summary>
            Gets or sets optimization selection for the series usage. This is a dependency property. Use StaticData if data does not changed frequently,
            allowing faster updates when other objects in the chart are updating.  
            DynamicData selection is better when the data is changed many times / second. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.OptimizationProperty">
      <summary>
            Identifies the Optimization dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.RefreshRenderingData(System.Double,System.Double,System.Int32,System.Single,System.Single)">
      <summary>
            Rebuilds rendering data. Expert's method for allowing multi-threaded application to pre-build rendering data before rendering stage. 
            Rendering stage must always be synchronized to main thread, but this call can be called parallel for every series of this type. 
            </summary>
      <param name="xAxisMin">X-axis minimum.</param>
      <param name="xAxisMax">X-axis maximum.</param>
      <param name="sweepPageIndex">X-axis sweeping page index (set 0 if sweeping is not used).</param>
      <param name="graphSegmentTop">Graph segment top.</param>
      <param name="graphSegmentHeight">Graph segment height.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into a CSV file.
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SetColorsData(System.Int32[][],Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder)">
      <summary>
            Sets colors. Doesn't update the Data array contents itself. 
            Very handy to make the chart render fast when the colors are being changed frequently,
            especially with IntensityGridSeries' PixelRendering mode enabled. 
            </summary>
      <param name="colorsArgb">Data. The alignment must be M x N, all rows must be of equal length.</param>
      <param name="order">Jagged array order dimensions order. Is first array dimension columns and second dimension rows, or vice versa.</param>
      <returns>Success status.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SetHeightDataFromBitmap(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Drawing.Bitmap,Arction.Wpf.ChartingMVVM.BitmapAntialiasOptions)">
      <summary>
            Create data based on bitmap file contents. Data array will have dimensions of the bitmap Width X Height.
            Use options to reduce resolution and smooth it if needed. 
            Height data of is calculated for each pixel from R, G, and B sum. 0 (black) will have the minimum value, 
            and maximum value is obtained from 3*255 (white). If bitmap has alpha value of 0, the data is set to -INF,
            and the value is not drawn. 
            </summary>
      <param name="xMin">Minimum X.</param>
      <param name="xMax">Maximum X.</param>
      <param name="yMin">Minimum Y.</param>
      <param name="yMax">Maximum Y.</param>
      <param name="intensityMin">Minimum intensity.</param>
      <param name="intensityMax">Maximum intensity.</param>
      <param name="bitmapIn">Input bitmap.</param>
      <param name="options">Bitmap resolution decrement and smoothing options. Give null to use pure bitmap data only.</param>
      <returns>True if data was successfully filled, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SetSize(System.Int32,System.Int32)">
      <summary>
            Set grid size, both X and Y at same time. If you already have a large existing data,
            using this method is faster than setting SizeX and SizeY separately.
            </summary>
      <param name="sizeX">X size.</param>
      <param name="sizeY">Y size.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SetValuesData(System.Double[][],Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder)">
      <summary>
            Sets values. Doesn't update the Data array contents itself. 
            Very handy to make the chart render fast when the data is being changed frequently,
            especially with IntensityGridSeries' PixelRendering mode enabled. 
            </summary>
      <param name="data">Data. The alignment must be M x N, all rows must be of equal length.</param>
      <param name="order">Jagged array order dimensions order. Is first array dimension columns and second dimension rows, or vice versa.</param>
      <returns>Success status.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SetValuesData(System.Single[][],Arction.Wpf.ChartingMVVM.IntensityGridValuesDataOrder)">
      <summary>
            Sets values. Doesn't update the Data array contents itself. 
            Very handy to make the chart render fast when the data is being changed frequently,
            especially with IntensityGridSeries' PixelRendering mode enabled. 
            </summary>
      <param name="data">Data. The alignment must be M x N, all rows must be of equal length.</param>
      <param name="order">Jagged array order dimensions order. Is first array dimension columns and second dimension rows, or vice versa.</param>
      <returns>Success status.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ShowNodes">
      <summary>
            Gets or sets if nodes are shown. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ShowNodesProperty">
      <summary>
            Identifies the ShowNodes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SizeX">
      <summary>
            Gets or sets grid size in X dimension (Data array columns). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SizeXProperty">
      <summary>
            Identifies the SizeX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SizeY">
      <summary>
            Gets or sets grid size in Y dimension (Data array rows). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.SizeYProperty">
      <summary>
            Identifies the SizeY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Stencil">
      <summary>
            Gets or sets stencil. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.StencilProperty">
      <summary>
            Identifies the Stencil dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ToneColor">
      <summary>
            Gets or sets surface tone color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ToneColorProperty">
      <summary>
            Identifies the ToneColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.TraceCell">
      <summary>
            Gets or sets if tracing the surface cell is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.TraceCellChanged">
      <summary>
            Tracing has been moved to over different intensity series cell.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.TraceCellProperty">
      <summary>
            Identifies the TraceCell dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ValueRangePalette">
      <summary>
            Gets or sets color palette for Y value information. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.ValueRangePaletteProperty">
      <summary>
            Identifies the ValueRangePalette dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.WireframeLineStyle">
      <summary>
            Gets or sets wireframe line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.WireframeLineStyleProperty">
      <summary>
            Identifies the WireframeLineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.WireframeType">
      <summary>
            Gets or sets wireframe type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.WireframeTypeProperty">
      <summary>
            Identifies the WireframeType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.VisibleCursorData">
      <summary>
            Determine DataCursor ResultTable visible data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.VisibleCursorDataProperty">
      <summary>
            Identifies the VisibleCursorData dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase.TraceCellChangedHandler">
      <summary>
            Delegate for TraceCellChanged event
            </summary>
      <param name="sender">Sender</param>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <param name="nearestDataColumnIndex">Nearest data column index at coordinate</param>
      <param name="nearestDataRowIndex">Nearest data row index at coordinate</param>
      <param name="newCellColumn">New column index (X dimension)</param>
      <param name="newCellRow">New row index (Y dimension)</param>
      <param name="nearestCellCorner">Nearest intensity point, in corner of the cell. Not available when PixelRendering is enabled.</param>
      <param name="nearestCellCornerCoordX">Screen X coordinate of nearest data column to mouse coordinate. Not available when PixelRendering is enabled.</param>
      <param name="nearestCellCornerCoordY">Screen Y coordinate of nearest data column to mouse coordinate. Not available when PixelRendering is enabled.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil">
      <summary>
            IntensitySeries stencil. Use to mask drawable regions in/out.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.#ctor(Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.AdditiveAreas">
      <summary>
            Additive stencil areas. Used like positive mask.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.AdditiveAreasProperty">
      <summary>
            Identifies the AdditiveAreas dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.Construct">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.SubtractiveAreas">
      <summary>
            Subtractive stencil areas. Used like negative mask.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.SubtractiveAreasProperty">
      <summary>
            Identifies the SubtractiveAreas dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.IntensitySeriesStencil.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.IRealtimeShiftable">
      <summary>
            Interface flag for series that can be
            - Shifted in real-time, by using incremental rendering data construction,
            with XAxis.ScrollMode == Scrolling/Sweeping/Stepping, and setting XAxis.ScrollPosition periodically. 
            These series implementing this interface are very powerful in rendering of data that is appended in real-time. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ISingleLineSeriesSolveResultReturningSeries">
      <summary>
            Interface for series which return only single LineSeriesSolveResult.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ISingleLineSeriesSolveResultReturningSeries.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ISingleLineSeriesSolveResultReturningSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Find nearest series point of given X-value and get corresponding Y-value.
            </summary>
      <param name="x">X-value.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ITrackable">
      <summary>
            Interface flag for series that can be
            - Tracked with LineSeriesCursor 
            - SeriesEventMarkers can be set to SeriesEventMarkerVerticalPosition can be set to TrackSeries   
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection">
      <summary>
            Line collection. Just a bunch of lines, going from point A to B. This is not a polyline. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Behind">
      <summary>
            LineCollection will be drawn behind bars.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Clear">
      <summary>
            Clear all data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.GetSegmentsAtPoint(System.Double,System.Double,System.Boolean)">
      <summary>
            Get segment indexes for segments under point.
            </summary>
      <param name="x">x-coordinate.</param>
      <param name="y">y-coordinate.</param>
      <param name="useDIP">Use dips instead of pixels.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.GetSegmentsAtPoint(System.Double,System.Double,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh. If this is not called after data has been changed 
            the lines are not drawn correctly.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Lines">
      <summary>
            Gets or sets line segments. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.LinesProperty">
      <summary>
            Identifies the Lines dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary> 
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file.
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Statistics">
      <summary>
            Gets statistics of the series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.StatisticsProperty">
      <summary>
            Identifies the Statistics dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LineCollection.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries">
      <summary>
            Lite freeform line series. Uses arrays of points as input data: double[N,2]. Can be only used with Linear axis and DirectX11 engine.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Series swner.</param>
      <param name="axisX">Attached x-axis.</param>
      <param name="axisY">Attached y-axis.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.AddPoints(System.Double[0:,0:],System.Boolean)">
      <summary>
            Add points to end of series, [N,2] format, where [i,0] is x and [i,1] is y.
            </summary>
      <param name="data">Data array.</param>
      <param name="invalidateChart">Update chart after adding data. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series point count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.Construct">
      <summary>
            Construct some properties.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.GetPointAtIndex(System.Int32)">
      <summary>
            Get point at index.
            </summary>
      <param name="index">Index to point.</param>
      <returns>Point at index.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.Item(System.Int32)">
      <summary>
            Get point at index.
            </summary>
      <param name="index">Index to point.</param>
      <returns>Point at index.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.LimitYToStackSegment">
      <summary>
            Gets or sets line y-axis segment rendering style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.LimitYToStackSegmentProperty">
      <summary>
            Identifies the LimitYToStackSegment dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.OldDataDropped">
      <summary>
            Occurs when old data samples have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCount">
      <summary>
            Gets added point count.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountLimit">
      <summary>
            Point count limit. Series will contain at least this amount of points, but will limit to higher count based on data blocks. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountLimitEnabled">
      <summary>
            Enable/disable point count limiter. See <see cref="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountLimit" />.  This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountLimitEnabledProperty">
      <summary>
            Identifies the PointCountLimitEnabled dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountLimitProperty">
      <summary>
            Identifies the PointCountLimit dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.Points">
      <summary>
            Sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="xValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </param>
      <param name="yValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </param>
      <param name="nearestSampleXValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nearestSampleXValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </param>
      <param name="nearestSampleYValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nearestSampleYValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </param>
      <param name="nearestIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nearestIndex</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve Y value on given X value. Returned value will be interpolated, if X is between sequential points X values.
            </summary>
      <param name="x">X value.</param>
      <returns>Solve status. NearestX will be double.NaN if point is not in the data range.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.LiteFreeformLineSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries">
      <summary>
            Lite line series. Uses arrays of points as input data: double[N,2]. Can be only used with Linear axis and DirectX11 engine.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Series swner.</param>
      <param name="axisX">Attached x-axis.</param>
      <param name="axisY">Attached y-axis.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.AddPoints(System.Double[0:,0:],System.Boolean)">
      <summary>
            Add points to end of series, [N,2] format, where [i,0] is x and [i,1] is y.
            </summary>
      <param name="data">Data array.</param>
      <param name="invalidateChart">Update chart after adding data. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series sample count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.Construct">
      <summary>
            Construct some properties.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.DeletePointsBeforeX(System.Double,System.Boolean)">
      <summary>
            Delete all blocks where the last point in the block has smaller X value than the given value. Note, the block is formed when AddPoints method is called.
            </summary>
      <param name="xValue">X value.</param>
      <param name="compactMemory">Compact memory.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.GetPointAtIndex(System.Int32)">
      <summary>
            Get point at index.
            </summary>
      <param name="index">Index to point.</param>
      <returns>Point at index.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.Item(System.Int32)">
      <summary>
            Get point at index.
            </summary>
      <param name="index">Index to point.</param>
      <returns>Point at index.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.LimitYToStackSegment">
      <summary>
            Gets or sets line y-axis segment rendering style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.LimitYToStackSegmentProperty">
      <summary>
            Identifies the LimitYToStackSegment dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.OldDataDropped">
      <summary>
            Occurs when old data samples have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.PointCount">
      <summary>
            Gets added point count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.Points">
      <summary>
            Sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data.
            </summary>
      <param name="trigPosX">Output triggered X position.</param>
      <param name="trigLevel">Trigger level Y value.</param>
      <param name="seekStartX">Minimum X value that is investigated.</param>
      <param name="seekEndX">Maximum X value that is investigated.</param>
      <param name="edge">Triggering edge.</param>
      <returns>True if trigger position was detected, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve Y value on given X value. Returned value will be interpolated, if X is between sequential points X values.
            </summary>
      <param name="x">X value.</param>
      <returns>Solve status. NearestX will be double.NaN if point is not in the data range.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.LiteLineSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedBarSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedBarSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedBarSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedBarSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedDigitalLineSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedDigitalLineSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedDigitalLineSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedDigitalLineSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedEventArgs">
      <summary>
            Represents an abstract base class for event arguments classes that provide arguments for OldDataDropped events.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedEventArgs.DroppedBeforeX">
      <summary>
            The dropping limit, upper end.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedEventArgs.ExistingDataPointMinX">
      <summary>
            The minimum data point X that was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedHighLowSeriesBaseEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedHighLowSeriesBaseEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedHighLowSeriesBaseEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedHighLowSeriesBaseEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteFreeFormLineSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteFreeFormLineSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedLiteFreeFormLineSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteFreeFormLineSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteLineSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteLineSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedLiteLineSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedLiteLineSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedPointLineSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedPointLineSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedPointLineSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedPointLineSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataBlockSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataBlockSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedSampleDataSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataBlockSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedSampleDataSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedSampleDataSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedStockSeriesEventArgs">
      <summary>
            Represents a class that provides arguments for the OldDataDropped event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedStockSeriesEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of OldDataDroppedSampleDataSeriesEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.OldDataDroppedStockSeriesEventArgs.Series">
      <summary>
            The series whose old data was dropped.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries">
      <summary>
            Point line series. You can define the line style and point style. Add points with AddPoints method. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.#ctor">
      <summary>
            Constructor for Form designer list editor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Owner view</param>
      <param name="axisY">Y axis you want to bind</param>
      <param name="axisX">X axis you want to bind</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.AddPoints(Arction.Wpf.ChartingMVVM.SeriesErrorPoint[],System.Boolean)">
      <summary>
            Add points with error tolerance to end of series
            </summary>
      <param name="points">Points</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.AddPoints(Arction.Wpf.ChartingMVVM.SeriesPoint[],System.Boolean)">
      <summary>
            Add points to end of series
            </summary>
      <param name="points">Points</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after AddPoints method call.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.AddPoints(System.Double[],System.Double[],System.Boolean)">
      <summary>
            Add points to end of series
            </summary>
      <param name="xValues">X values array</param>
      <param name="yValues">Y values array</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.CheckDataPointsAreInAscendingOrder">
      <summary>
            Check that rule X[i+1] &gt;= X[i] is followed
            </summary>
      <returns>True if rule followed, or less than 2 points in the series. Else false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ciPointInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.Clear">
      <summary>
            Clear all points
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ContinuousOverScaleBreak">
      <summary>
            Draws a connecting line over ExcludeRange gap, if this flag is set. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ContinuousOverScaleBreakProperty">
      <summary>
            Identifies the ContinuousOverScaleBreak dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.CursorTrackEnabled">
      <summary>
            Gets or sets if cursor tracking is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.DeletePointsBeforeX(System.Double)">
      <summary>
            Delete points having smaller X value than given value
            </summary>
      <param name="xValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.DeletePointsBeforeX(System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ErrorBars">
      <summary>
            Gets or sets error bars. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ErrorBarsProperty">
      <summary>
            Identifies the ErrorBars dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get min and max Y value within given X range
            </summary>
      <param name="yMin">Minimum Y value</param>
      <param name="yMax">Maximum Y value</param>
      <param name="xRangeMin">X range start</param>
      <param name="xRangeMax">X range end</param>
      <param name="ignoreZeros">Ignore zeros</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetMinMaxFromXRangeIgnoreValue(System.Double@,System.Double@,System.Double,System.Double,System.Double)">
      <summary>
            This is similar to GetMinMaxFromXRange, but tailored for Series wth DataBreaking.
            Get min and max Y value within given X range, but Ignore some values (gap defining value)
            </summary>
      <param name="yMin">Minimum Y value</param>
      <param name="yMax">Maximum Y value</param>
      <param name="xRangeMin">X range start</param>
      <param name="xRangeMax">X range end</param>
      <param name="dIgnoreValue">Gap defining value</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetRegressionFactors">
      <summary>
            Get the factors that are used in regression line plotting 
            </summary>
      <returns>Factors, length = polynomial order+1. For example, when having order 2, you can plot line with equation: Y =  factors[0] + factors[1]*X + factors[2]*X^2</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X min</param>
      <param name="xMax">X max</param>
      <returns>True if minimum X and maximum X was obtained successfully</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetXValues">
      <summary>
            Get X values array. 
            </summary>
      <returns>X values array</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.GetYValues">
      <summary>
            Get Y values array. 
            </summary>
      <returns>Y values array</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.IndividualPointColoring">
      <summary>
             Selects how to use the individual point colors. Sets which PointStyle color is replaced with PointColor.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.IndividualPointColoringProperty">
      <summary>
            Identifies the IndividualPointColoring dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.InvalidateData">
      <summary>
            Invalidate data array. Statistics and draw data are recalculated.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.OldDataDropped">
      <summary>
            Occurs when old data points have been dropped.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.PointsProperty">
      <summary>
            Identifies the BindablePoints dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.PointsType">
      <summary>
            Gets or sets points type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.PointsTypeProperty">
      <summary>
            Identifies the PointsType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.PointsWithErrors">
      <summary>
            Gets or sets series points with error tolerance indicators. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.PointsWithErrorsProperty">
      <summary>
            Identifies the PointsWithErrors dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.RegressionFitting">
      <summary>
            Gets or sets regression fitting to data points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.RegressionFittingProperty">
      <summary>
            Identifies the RegressionFitting dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.RegressionPolyOrder">
      <summary>
            Gets or sets polynomial regression order. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.RegressionPolyOrderProperty">
      <summary>
            Identifies the RegressionPolyOrder dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SaveToCsv">
      <summary>
            Save to Csv.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ScrollingStabilizing">
      <summary>
            Gets or sets if stabilize scrolling mode by rounding shifting to nearest integer pixel position. This is a dependency property.
            Reduces wobbling of the scrolling waveform, but may show as slight X-dimensional distortion. 
            <remarks>Only applies when XAxis ScrollMode = Scrolling</remarks><seealso cref="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollMode" /></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ScrollingStabilizingProperty">
      <summary>
            Identifies the ScrollingStabilizing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ScrollModePointsKeepLevel">
      <summary>
            Gets or sets how often the draw data is cleared when using X axis scroll mode. This is a dependency property.
            Valid range is 1...100
            1 frees the draw data and the reconstructs the draw data after every 1/10 scroll page.
            Use this when there's not much memory available.
            100 frees the draw data and the reconstructs the draw data after every 100/10 = 10 pages.
            Use this when smooth scroll with high FPS is important. Reserves some extra memory. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.ScrollModePointsKeepLevelProperty">
      <summary>
            Identifies the ScrollModePointsKeepLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data
            </summary>
      <param name="trigPosX">Output triggered X position</param>
      <param name="trigLevel">Trigger level Y value</param>
      <param name="seekStartX">Minimum X value that is investigated</param>
      <param name="seekEndX">Maximum X value that is investigated</param>
      <param name="edge">Triggering edge</param>
      <returns>True if trigger position was detected, else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SeekVisibleRangeStartPointIndex(System.Double,System.Int32)">
      <summary>
            Seek visible range first series point index (actually one point before that)
            </summary>
      <param name="startXValue">Start x value</param>
      <param name="currentRangeStartPointIndex">Current start point index</param>
      <returns>Start point index. If unable to find start point, returns -1</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SetXValue(System.Int32,System.Double)">
      <summary>
            Set X value of Points array item. 
            </summary>
      <param name="index">Point index in Points array</param>
      <param name="xValue">X value</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SetYValue(System.Int32,System.Double)">
      <summary>
            Set Y value of Points array item. 
            </summary>
      <param name="index">Point index in Points array</param>
      <param name="yValue">Y value</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SolveNearestDataPointByCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest data point to given X and Y screen coordinate [input in DIP]. 
            </summary>
      <param name="xCoordinate">X screen coordinate as DIP</param>
      <param name="yCoordinate">Y screen coordinate as DIP</param>
      <param name="nearestPointXValue">Nearest data point X</param>
      <param name="nearestPointYValue">Nearest data point Y</param>
      <param name="nearestIndex">Nearest data point index in the Points or PointsWithErrors array</param>
      <returns>True if successfully solved</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SolveNearestDataPointByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest data point to given X and Y value. 
            </summary>
      <param name="xValue">X value</param>
      <param name="yValue">Y value</param>
      <param name="nearestPointXValue">Nearest data point X</param>
      <param name="nearestPointYValue">Nearest data point Y</param>
      <param name="nearestIndex">Nearest data point index in the Points or PointsWithErrors array.</param>
      <returns>True if successfully solved</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve y-value or range on given x-value.
            </summary>
      <param name="x">x-value</param>
      <returns>Solve status.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeries.OldDataDroppedHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase">
      <summary>
            Base class for point line series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.Clear">
      <summary>
            Clear the series data
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.CreateLineStyle">
      <summary>
            Create line style.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.CreateTitle">
      <summary>
            Create title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.CustomLinePointColoringAndShaping">
      <summary>
            Custom line coloring and line coordinates event. Event handler must give color for each data point received in the handler. 
            The coordinates can be adjusted as well and new line points can be inserted. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.DataBreaking">
      <summary>
            Data breaking options. Defines, if gaps are enabled on series data and by which value.
            Default state is disabled and default gap value is Double.NaN;
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.DataBreakingProperty">
      <summary>
            Identifies the DataBreaking dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value within given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.GetMinMaxFromXRangeIgnoreValue(System.Double@,System.Double@,System.Double,System.Double,System.Double)">
      <summary>
            This is similar to GetMinMaxFromXRange, but tailored for Series with DataBreaking.
            Get minimum and maximum Y value within given X range, but Ignore some values (gap defining value).
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="dIgnoreValue">Gap defining.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>
            Render chart if item list changed.
            </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.LineVisible">
      <summary>
            Gets or sets if line is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.LineVisibleProperty">
      <summary>
            Identifies the LineVisible dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.m_lockCursorResolverData">
      <summary>
            Lock object for cursor y-value resolver data 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)">
      <summary>
            On Point Style Changed
            </summary>
      <param name="oNew">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oNew</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointStyleChanged(Arction.Wpf.ChartingMVVM.PointShapeStyle)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointsVisibleChanged(System.Boolean)">
      <summary>
            On Points Visible Changed
            </summary>
      <param name="bNew">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bNew</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointsVisibleChanged(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.OnPointsVisibleChanged(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointCount">
      <summary>
            Gets point count stored in the Points array. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointsOptimization">
      <summary>
            Gets or sets points rendering optimization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointsOptimizationProperty">
      <summary>
            Identifies the PointsOptimization dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointStyle">
      <summary>
            Gets or sets point style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointStyleProperty">
      <summary>
            Identifies the PointStyle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointsVisible">
      <summary>
            Gets or sets are points visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.PointsVisibleProperty">
      <summary>
            Identifies the PointsVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.SeriesEventMarkers">
      <summary>
            Gets or sets series event markers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.SeriesEventMarkersProperty">
      <summary>
            Identifies the SeriesEventMarkers dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.SetProperCursor">
      <summary>
            Set proper drag cursor. Default is hand.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.Statistics">
      <summary>
            Gets statistics of the series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.StatisticsProperty">
      <summary>
            Identifies the Statistics dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.UsePalette">
      <summary>
            Gets or sets if use palette for line coloring. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.UsePaletteProperty">
      <summary>
            Identifies the UsePalette dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.ValueRangePalette">
      <summary>
            Gets or sets color palette for Y value range. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.ValueRangePaletteProperty">
      <summary>
            Identifies the ValueRangePalette dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase.CustomLinePointColoringAndShapingEventHandler">
      <summary>
            The delegate to use for handlers that receive the CustomLinePointColoringAndShaping event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the CustomLinePointColoringAndShaping event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries">
      <summary>
            Polygon series. Points must be in clockwise order.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">X-axis you want to bind.</param>
      <param name="axisY">Y-axis you want to bind.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Antialias">
      <summary>
            Gets or sets if antialias area is drawn. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.AntialiasProperty">
      <summary>
            Identifies the Antialias dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Behind">
      <summary>
            Gets or sets if draw behind series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Border">
      <summary>
            Gets or sets border style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.BorderVisible">
      <summary>
            Gets or sets if show border. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.BorderVisibleProperty">
      <summary>
            Identifies the BorderVisible dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Clear">
      <summary>
            Clear all data.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Fill">
      <summary>
            Gets or sets polygon fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.GetMinMaxValues(System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Get minimum and maximum X and Y values.
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <param name="yMin">Y minimum.</param>
      <param name="yMax">Y maximum.</param>
      <returns>True if point count is greater than 0</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.IntersectionsAllowed">
      <summary>
            Intersections of poligon lines is allowed
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.IntersectionsAllowedProperty">
      <summary>
            Intersections of poligon lines is allowed
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.SimpleHighlightColor">
      <summary>
            Gets or sets simple highlight color when user interactive device over. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.SimpleHighlightColorProperty">
      <summary>
            Identifies the SimpleHighlightColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Statistics">
      <summary>
            Gets statistics of the series. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.StatisticsProperty">
      <summary>
            Identifies the Statistics dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.ConversionProgress">
      <summary>
            Triangulation conversion progress indication.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.ConversionProgress.Running">
      <summary>
            Conversion is running.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.PolygonSeries.ConversionProgress.Done">
      <summary>
            Conversion is done.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase">
      <summary>
            Base class for single line series which are progressive by X-value.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ProgressiveSingleLineSeriesBase.SolveYValueAtXValue(System.Double)">
      <summary>
            Find nearest series point of given X-value and get corresponding Y-value.
            </summary>
      <param name="x">X-value.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries">
      <summary>
            Block sample data series class. Can be only used with Linear axis and DirectX11 engine.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
      <param name="axisY">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisY</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.AddSamples(System.Single[],System.Boolean)">
      <summary>
            Add samples to end of series, float format.
            </summary>
      <param name="samples">Samples array.</param>
      <param name="invalidateChart">Update chart after adding samples. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series sample count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.DeleteSamplesBeforeX(System.Double,System.Boolean)">
      <summary>
            Delete all blocks where the last point in the block has smaller X value than the given value. Note, the block is formed when AddPoints method is called.
            </summary>
      <param name="xValue">X value.</param>
      <param name="compactMemory">Compact memory.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.FirstSampleTimeStamp">
      <summary>
            Gets or sets first sample time stamp, usually 1/SamplingFrequency. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.FirstSampleTimeStampProperty">
      <summary>
            Identifies the FirstSampleTimeStamp dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.GetMinMaxFromXRangeIgnoreValue(System.Double@,System.Double@,System.Double,System.Double,System.Double)">
      <summary>
            This is similar to GetMinMaxFromXRange, but tailored for Series with DataBreaking.
            Get minimum and maximum Y value within given X range, but Ignore some values (gap defining value).
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="dIgnoreValue">Gap defining value.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.GetSampleAtIndex(System.Int32)">
      <summary>
            Get sample at index.
            </summary>
      <param name="index">Sample index for whole data.</param>
      <returns>Y-value at index</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values.
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.Item(System.Int32)">
      <summary>
            Get point at index.
            </summary>
      <param name="index">Index to data.</param>
      <returns>Data point at index.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.LimitYToStackSegment">
      <summary>
            Gets or sets line y-axis segment rendering style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.LimitYToStackSegmentProperty">
      <summary>
            Identifies the LimitYToStackSegment dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.OldDataDropped">
      <summary>
            Occurs when old data samples have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.PointCount">
      <summary>
            Gets added sample count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.PointCountProperty">
      <summary>
            Identifies the PointCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.Samples">
      <summary>
            Sets series samples. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SamplesProperty">
      <summary>
            Identifies the Samples dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SamplingFrequency">
      <summary>
            Gets or sets sampling frequency, in Hz. (sample interval is 1/SamplingFrequency). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SamplingFrequencyProperty">
      <summary>
            Identifies the SamplingFrequency dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves sample data into CSV file.
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data.
            </summary>
      <param name="trigPosX">Output triggered X position.</param>
      <param name="trigLevel">Trigger level Y value.</param>
      <param name="seekStartX">Minimum X value that is investigated.</param>
      <param name="seekEndX">Maximum X value that is investigated.</param>
      <param name="edge">Triggering edge.</param>
      <returns>True if trigger position was detected, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest sample to given X and Y value. 
            </summary>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="nearestSampleXValue">Nearest sample X.</param>
      <param name="nearestSampleYValue">Nearest sample Y.</param>
      <param name="nearestIndex">Nearest sample index in the SampleSingle or SamplesDouble array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SolveYCoordAtXCoord(System.Single,System.Boolean)">
      <summary>
            Find nearest series point of given X-coordinate and get corresponding Y-coordinate.
            </summary>
      <param name="x">X-coordinate in pixels or DIP.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>Solve result.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve Y value on given X value. Returned value will be interpolated, if X is between sequential points X values.
            </summary>
      <param name="x">X value.</param>
      <returns>Solve status. NearestX will be double.NaN if point is not in the data range.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataBlockSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries">
      <summary>
            Sample data series class. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.#ctor">
      <summary>
            Constructor for Form designer list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisY">Y-axis you want to bind.</param>
      <param name="axisX">X-axis you want to bind.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.AddOffsetToSamples(System.Double)">
      <summary>
            Adds offset to all samples (Increments all samples by given value).
            </summary>
      <param name="offset">Offset.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.AddSamples(System.Double[],System.Boolean)">
      <summary>
            Add samples to end of series, double format.
            </summary>
      <param name="samples">Samples array</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series sample count after adding.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.AddSamples(System.Single[],System.Boolean)">
      <summary>
            Add samples to end of series, float format.
            </summary>
      <param name="samples">Samples array.</param>
      <param name="invalidateChart">Update chart after adding samples. Updating will raise CPU load, 
            which is why usage of this method is not recommended with every call if points are added many times per second.</param>
      <returns>Series sample count after adding.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.ciSamplesInitialSize">
      <summary>
            Initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.Clear">
      <summary>
            Clear all samples.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.DeleteSamplesBeforeX(System.Double,System.Boolean)">
      <summary>
            Delete samples having smaller X value than given value.
            </summary>
      <param name="xValue">X value.</param>
      <param name="compactMemory">Compact memory.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.FirstSampleTimeStamp">
      <summary>
            Gets or sets first sample time stamp, usually 1/SamplingFrequency. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.FirstSampleTimeStampProperty">
      <summary>
            Identifies the FirstSampleTimeStamp dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get minimum and maximum Y value withing given X range.
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="ignoreZeros">Ignore zeros.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.GetMinMaxFromXRangeIgnoreValue(System.Double@,System.Double@,System.Double,System.Double,System.Double)">
      <summary>
            This is similar to GetMinMaxFromXRange, but tailored for Series with DataBreaking.
            Get minimum and maximum Y value within given X range, but Ignore some values (gap defining value).
            </summary>
      <param name="yMin">Minimum Y value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="xRangeMin">X range start.</param>
      <param name="xRangeMax">X range end.</param>
      <param name="dIgnoreValue">Gap defining value.</param>
      <returns>True if values were successfully detected.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values.
            </summary>
      <param name="xMin">X minimum.</param>
      <param name="xMax">X maximum.</param>
      <returns>True if minimum X and maximum X was obtained successfully.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file name. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.MultiplySamples(System.Double)">
      <summary>
            Multiplies the samples in the samples array with given factor.
            </summary>
      <param name="factor">Factor.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.OldDataDropped">
      <summary>
            Occurs when old data samples have been dropped.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SampleFormat">
      <summary>
            Gets or sets sample format. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SampleFormatProperty">
      <summary>
            Identifies the SampleFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplesDouble">
      <summary>
            Gets or sets series samples, Double format. This is a dependency property.
            </summary>
      <exception cref="T:Arction.Wpf.ChartingMVVM.ChartException">Thrown when trying to set samples that are not
            compatible with chosen SampleFormat.</exception>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplesDoubleProperty">
      <summary>
            Identifies the SamplesDouble dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplesSingle">
      <summary>
            Gets or sets series samples, Single format. This is a dependency property.
            </summary>
      <exception cref="T:Arction.Wpf.ChartingMVVM.ChartException">Thrown when trying to set samples that are not
            compatible with chosen SampleFormat.</exception>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplesSingleProperty">
      <summary>
            Identifies the SamplesSingle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplingFrequency">
      <summary>
            Gets or sets sampling frequency, in Hz. (sample interval is 1/SamplingFrequency). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SamplingFrequencyProperty">
      <summary>
            Identifies the SamplingFrequency dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves sample data into CSV file.
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.ScrollingStabilizing">
      <summary>
            Gets or sets if stabilize scrolling mode by rounding shifting to nearest integer pixel position. This is a dependency property.
            Reduces wobbling of the scrolling waveform, but may show as slight X-dimensional distortion. 
            <remarks>Only applies when XAxis ScrollMode = Scrolling</remarks><seealso cref="P:Arction.Wpf.ChartingMVVM.Axes.AxisX.ScrollMode" /></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.ScrollingStabilizingProperty">
      <summary>
            Identifies the ScrollingStabilizing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.ScrollModePointsKeepLevel">
      <summary>
            Tells how often the draw data is cleared when using X axis scroll mode.
            Valid range is 1...100
            1 frees the draw data and the reconstructs the draw data after every 1/10 scroll page.
            Use this when there's not much memory available.
            100 frees the draw data and the reconstructs the draw data after every 100/10 = 10 pages.
            Use this when smooth scroll with high FPS is important. Reserves some extra memory. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SeekTriggerPos(System.Double@,System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.TriggeringEdge)">
      <summary>
            Detect triggering position from series data.
            </summary>
      <param name="trigPosX">Output triggered X position.</param>
      <param name="trigLevel">Trigger level Y value.</param>
      <param name="seekStartX">Minimum X value that is investigated.</param>
      <param name="seekEndX">Maximum X value that is investigated.</param>
      <param name="edge">Triggering edge.</param>
      <returns>True if trigger position was detected, otherwise false.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SeekVisibleRangeStartPointIndex(System.Double)">
      <summary>
            Seek visible range first series point index (actually one point before that)
            </summary>
      <param name="startXValue">Start x value</param>
      <returns>Start point index. If unable to find start point, returns -1</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SolveNearestSampleByCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest sample to given X and Y screen coordinate.
            </summary>
      <param name="xCoordinate">X screen coordinate.</param>
      <param name="yCoordinate">Y screen coordinate.</param>
      <param name="nearestSampleXValue">Nearest sample X.</param>
      <param name="nearestSampleYValue">Nearest sample Y.</param>
      <param name="nearestIndex">Nearest sample index in the SampleSingle or SamplesDouble array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SolveNearestSampleByValue(System.Double,System.Double,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Solve nearest sample to given X and Y value. 
            </summary>
      <param name="xValue">X value.</param>
      <param name="yValue">Y value.</param>
      <param name="nearestSampleXValue">Nearest sample X.</param>
      <param name="nearestSampleYValue">Nearest sample Y.</param>
      <param name="nearestIndex">Nearest sample index in the SampleSingle or SamplesDouble array.</param>
      <returns>True if successfully solved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.SolveYValueAtXValue(System.Double)">
      <summary>
            Solve Y value on given X value. Returned value will be interpolated, if X is between sequential points X values.
            </summary>
      <param name="x">X value.</param>
      <returns>Solve status. NearestX will be double.NaN if point is not in the data range.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SampleDataSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY">
      <summary>
            Base class for all series 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.AssignXAxisIndex">
      <summary>
            Gets or sets index of X axis assigned to this series. Give -1 when you don't want to assign it yet to any X axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.AssignXAxisIndexProperty">
      <summary>
            Identifies the AssignXAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.AssignYAxisIndex">
      <summary>
            Gets or sets index of Y axis assigned to this series. Give -1 when you don't want to assign it yet to any Y axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.AssignYAxisIndexProperty">
      <summary>
            Identifies the AssignYAxisIndex dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.BeforeSeriesRendering">
      <summary>
            Occurs just before the rendering of the series takes place.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.Clear">
      <summary>
            Clear the series
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.DisableDragToAnotherAxis">
      <summary>
            Gets or sets if disable dragging from Y axis to another Y axis or from chart to another chart. This is a dependency property.
            Set this true if you want to zoom in the series area, and keep other user interactive device interactivity features available. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.DisableDragToAnotherAxisProperty">
      <summary>
            Identifies the DisableDragToAnotherAxis dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.GetClipAreas">
      <summary>
            Get clipping areas. 
            </summary>
      <returns>Array reference to ClipAreas. If you modify the array, notify the chart with SetClipAreas method.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.IncludeInAutoFit">
      <summary>
            Gets or sets if includes series values in automatic fit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.IncludeInAutoFitProperty">
      <summary>
            Identifies the IncludeInAutoFit dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.InvalidateData">
      <summary>
            Series data has been modified directly by it's array. 
            Use this method to notify chart that this series needs a refresh
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is mouse over item.
            </summary>
      <param name="x">mouse x-coordinate</param>
      <param name="y">mouse y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>false if mouse is not inside graph, true otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LegendBoxIndex">
      <summary>
            Gets or sets legendbox index. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LegendBoxIndexProperty">
      <summary>
            Identifies the LegendBoxIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LimitYToStackSegment">
      <summary>
            Gets or sets if limit Y draw range to segment area when y-axes are stacked. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LimitYToStackSegmentProperty">
      <summary>
            Identifies the LimitYToStackSegment dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="fileName">Full path to the CSV file.</param>
      <param name="separator">Value separator that is used in the CSV file.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            Get item as LegendBoxMouseObject.
            </summary>
      <param name="s">related object</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.op_Implicit(Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.OwnerView">
      <summary>
            Owner view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if export is successful</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.SetClipAreas(Arction.Wpf.ChartingMVVM.ClipArea[])">
      <summary>
            Set clipping areas. Give null to disable all clip areas. 
            </summary>
      <param name="clipAreas">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clipAreas</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.SetClipAreas(Arction.Wpf.ChartingMVVM.ClipArea[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.ShowInLegendBox">
      <summary>
            Gets or sets if enlists the series title text in Legend box of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.ShowInLegendBoxProperty">
      <summary>
            Identifies the ShowInLegendBox dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.Visible">
      <summary>
            Gets or sets series visible state. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.SeriesBaseXY.BeforeSeriesRenderingEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforeSeriesRendering event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the BeforeSeriesRendering event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries">
      <summary>
            CandleStick series 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX,Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisY">Y axis you want to bind</param>
      <param name="axisX">X axis you want to bind</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.AddPoints(Arction.Wpf.ChartingMVVM.StockSeriesData[],System.Boolean)">
      <summary>
            Add points to end of series
            </summary>
      <param name="points">Series points</param>
      <param name="invalidateChart">Update chart after adding. Updating will raise CPU load, 
            so you maybe don't want to use this with every call if points are added many times per second.</param>
      <returns>Point count after adding</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Behind">
      <summary>
            Gets or sets if stockSeries is drawn behind line series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ciDataPointsInitialSize">
      <summary>
            Points initial size
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Clear">
      <summary>
            Clear all points
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ColorStickDown">
      <summary>
            Gets or sets stick color, when series Close value less than Open. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ColorStickDownProperty">
      <summary>
            Identifies the ColorStickDown dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ColorStickUp">
      <summary>
            Gets or sets stick color, when series Close value greater than Open. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ColorStickUpProperty">
      <summary>
            Identifies the ColorStickUp dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.CustomStockDataAppearance">
      <summary>
            Stock data appearance coloring delegate.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.DataCount">
      <summary>
            Gets series data count. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.DataCountProperty">
      <summary>
            Identifies the DataCount dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.DataPoints">
      <summary>
            Gets or sets series data points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.DataPointsProperty">
      <summary>
            Identifies the DataPoints dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.DeletePointsBeforeX(System.Double,Arction.Wpf.ChartingMVVM.Axes.AxisX,System.Boolean)">
      <summary>
            Delete Points having smaller X value than given value.
            </summary>
      <param name="xValue">X value.</param>
      <param name="axis">x axis what to check</param>
      <param name="compactMemory">Compact memory.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillBorder">
      <summary>
            Gets or sets fill border. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillBorderProperty">
      <summary>
            Identifies the FillBorder dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillDown">
      <summary>
            Gets or sets fill, when series Close value less than Open. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillDownProperty">
      <summary>
            Identifies the FillDown dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillUp">
      <summary>
            Gets or sets fill, when series Close value greater than Open. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.FillUpProperty">
      <summary>
            Identifies the FillUp dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.GetItemOnUserInteractiveDeviceLocation(Arction.Wpf.ChartingMVVM.StockSeriesData@)">
      <summary>
            Get item which the user interactive device is over.
            </summary>
      <param name="item">Item on user interactive device location</param>
      <returns>True if info found, false otherwise.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.GetMinMaxFromXRange(System.Double@,System.Double@,System.Double,System.Double,System.Boolean)">
      <summary>
            Get min and max Y value withing given X range
            </summary>
      <param name="yMin">Minimum Y value</param>
      <param name="yMax">Maximum Y value</param>
      <param name="xRangeMin">X range start</param>
      <param name="xRangeMax">X range end</param>
      <param name="ignoreZeros">Ignore zeros</param>
      <returns>True if values were successfully detected</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.GetXMinMax(System.Double@,System.Double@)">
      <summary>
            Get minimum X and maximum X of series X values
            </summary>
      <param name="dXMin">X min</param>
      <param name="dXMax">X max</param>
      <returns>True if minimum X and maximum X was obtained successfully</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over series.
            </summary>
      <param name="y">Y coordinate</param>
      <param name="x">X coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if is over series. Else false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ItemWidth">
      <summary>
            Gets or sets item width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ItemWidthProperty">
      <summary>
            Identifies the ItemWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.LoadFromCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Loads series data from a CSV file.
            </summary>
      <param name="file">CSV file. If file does not exist, LoadFromCSV returns false.</param>
      <param name="separator">Value and floating point number separator.</param>
      <returns>True if import succeeds. Otherwise false.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Name">
      <summary>
            Gets or sets name of series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.NameProperty">
      <summary>
            Identifies the Name dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.OldDataDropped">
      <summary>
            Occurs when old data points have been dropped.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.PackingProperty">
      <summary>
            Identifies the Packing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.SaveToCSV(System.String,Arction.Wpf.ChartingMVVM.SeparatorCSV)">
      <summary>
            Saves series data into CSV file 
            </summary>
      <param name="file">Target file. If file already exists, it will be overwritten.</param>
      <param name="separator">Value and floating point number separator definition</param>
      <returns>True if save is successful</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ScrollModePointsKeepLevel">
      <summary>
            Gets or sets how often the draw data is cleared when using X axis scroll mode. This is a dependency property.
            Valid range is 1...100
            1 frees the draw data and the reconstucts the draw data after every 1/10 scroll page.
            Use this when there's not much memory available.
            100 frees the draw data and the reconstucts the draw data after every 100/10 = 10 pages.
            Use this when smooth scroll with high FPS is important. Reserves some extra memory. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.ScrollModePointsKeepLevelProperty">
      <summary>
            Identifies the ScrollModePointsKeepLevel dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.SeriesEventMarkers">
      <summary>
            Gets or sets series event markers. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.SeriesEventMarkersProperty">
      <summary>
            Identifies the SeriesEventMarkers dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Statistics">
      <summary>
            Gets statistics of the series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.StatisticsProperty">
      <summary>
            Identifies the Statistics dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.StickWidth">
      <summary>
            Gets or sets stick width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.StickWidthProperty">
      <summary>
            Identifies the StickWidth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Style">
      <summary>
            Gets or sets stock style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.Title">
      <summary>
            Gets or sets series title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.CustomStockDataAppearanceEventHandler">
      <summary>
            The delegate to use for handlers that receive the CustomStockDataAppearance event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the CustomStockDataAppearance event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.StockSeries.OldDataDroppedEventHandler">
      <summary>
            The delegate to use for handlers that receive the OldDataDropped event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the OldDataDropped event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ValueChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the ValueChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ValueChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of ConstantLineValueChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValueChangedEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValueChangedEventArgs.ConstantLine">
      <summary>
            The ConstantLine object whose value was changed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValueChangedEventArgs.NewValue">
      <summary>
            New value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the ValuesChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BandValuesChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs.Band">
      <summary>
            Sender.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs.CancelRendering">
      <summary>
            Set 'true' to prevent flickering if you update the chart in the event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs.NewBeginValue">
      <summary>
            New begin value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.SeriesXY.ValuesChangedEventArgs.NewEndValue">
      <summary>
            New end value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.AxisTitle">
      <summary>
            Axis title. Shows title text for axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.AlignToValue">
      <summary>
            Gets or sets alignment value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.AlignToValueProperty">
      <summary>
            Identifies the AlignToValue dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.DistanceToAxis">
      <summary>
            Gets or sets title distance from axis line. Value is ignored, if AxisTitleAutoPlacement is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.DistanceToAxisProperty">
      <summary>
            Identifies the DistanceToAxis dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>Item as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D">
      <summary>
            3D axis title. Shows title text for axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constuctor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.Alignment">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.AlignmentProperty">
      <summary>
            Identifies the Alignment dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.AllowDragging">
      <summary>
            Moving of title not supported in 3D view.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.AllowUpsideDown">
      <summary>
            Gets or sets if allow title to be upside down. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.AllowUpsideDownProperty">
      <summary>
            Identifies the AllowUpsideDown dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.DistanceToAxis">
      <summary>
            Gets or sets title distance from axis line, in 3D world space. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.DistanceToAxisProperty">
      <summary>
            Identifies the DistanceToAxis dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.AxisTitle3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle">
      <summary>
            X-axis title. Shows title text for X-axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. Value is ignored, if XAxisTitleAutoPlacement is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisXTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle">
      <summary>
            Y-axis title. Shows title text for Y-axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment. Value is ignored, if YAxisTitleAutoPlacement is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.AxisYTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle">
      <summary>
            Bar series bars title style
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.Distance">
      <summary>
            Gets or sets label distance from bar edge. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.DistanceProperty">
      <summary>
            Identifies the Distance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.HorizAlign">
      <summary>
            Gets or sets horizontal alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.HorizAlignProperty">
      <summary>
            Identifies the HorizAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.Offset">
      <summary>
            Gets or sets label shift from it's align origin. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.Outside">
      <summary>
            Gets or sets if you want to draw text outside the bar / graph segment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.OutsideProperty">
      <summary>
            Identifies the Outside dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.Text">
      <summary>
            Title text
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BarLabelsStyle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle">
      <summary>
            Bordered, filled title. Used for creating titles with borders and fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.Border">
      <summary>
            Gets or sets border around the object. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.CreateBorder">
      <summary>
            Create border.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.CreateFill">
      <summary>
            Create fill.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.BorderedFilledTitle.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.ChartTitle">
      <summary>
            Chart title. Shows title text for the chart.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.Align">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.AlignProperty">
      <summary>
            Identifies the Align dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.Offset">
      <summary>
            Gets or sets title shift from it's align origin. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ChartTitle.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle">
      <summary>
            Event marker title. Shows text near an event marker.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.String,Arction.Wpf.ChartingMVVM.AlignmentHorizontal,Arction.Wpf.ChartingMVVM.AlignmentVertical,Arction.Wpf.ChartingMVVM.WpfFont,System.Windows.Media.Color,System.Double,System.Int32,Arction.Wpf.ChartingMVVM.TextShadow)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="text">Text.</param>
      <param name="horizAlign">Horizontal alignment.</param>
      <param name="vertAlign">Vertical alignment.</param>
      <param name="font">Font.</param>
      <param name="color">Color.</param>
      <param name="angle">RotateAngle in degrees.</param>
      <param name="distance">Distance from symbol.</param>
      <param name="shadow">Shadow.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.Distance">
      <summary>
            Gets or sets text distance from symbol. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.DistanceProperty">
      <summary>
            Identifies the Distance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.EventMarkerTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle">
      <summary>
            LegendBox item title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.Font">
      <summary>
            Gets or sets title font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.FontProperty">
      <summary>
            Identifies the Font dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.Text">
      <summary>
            Gets or sets title text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.LegendBoxItemTitle.TextProperty">
      <summary>
            Identifies the Text dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle">
      <summary>
            Mini scale title. Shows text near mini scale axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.Align">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.AlignProperty">
      <summary>
            Identifies the Align dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.Distance">
      <summary>
            Gets or sets label distance from dimension line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.MiniScaleTitle.DistanceProperty">
      <summary>
            Identifies the Distance dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle">
      <summary>
            Overlay elements title style
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.CutOnEdges">
      <summary>
            Is the text clipped on element edges
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.Distance">
      <summary>
            Text distance from element edge, if aligned to edge
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.HorizAlign">
      <summary>
            Horizontal alignment
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.Offset">
      <summary>
            Text shift from it's align origin
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.OverlayElementTextStyle.VerticalAlign">
      <summary>
            Vertical alignment
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle">
      <summary>
            Polar sector title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.Offset">
      <summary>
            Gets or sets offset. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.RadialOffsetPercentage">
      <summary>
            Gets or sets radial offset of title as percentage. 0 = axis begin, 100 = axis end. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolarSectorTitle.RadialOffsetPercentageProperty">
      <summary>
            Identifies the RadialOffsetPercentage dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle">
      <summary>
            Polygon series title class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.AutoPlacement">
      <summary>
            Gets or sets if place title automatically on chart near the series data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.AutoPlacementProperty">
      <summary>
            Identifies the AutoPlacement dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment within X axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.LimitInsideGraphMargins">
      <summary>
            Gets or sets if limits text inside graph margins area. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.LimitInsideGraphMarginsProperty">
      <summary>
            Identifies the LimitInsideGraphMargins dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.LockAutoPosition">
      <summary>
            Gets or sets if lock title position to current X and Y data values. Prevent automatic title placement routine from relocating the title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.LockAutoPositionProperty">
      <summary>
            Identifies the LockAutoPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.Offset">
      <summary>
            Gets or sets offset of its aligned position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment within Y axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.PolygonSeriesTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle">
      <summary>
            Round axes title. Shows title text for axis.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.DistanceToAxis">
      <summary>
            Gets or sets title distance from axis line. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.DistanceToAxisProperty">
      <summary>
            Identifies the DistanceToAxis dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if position is over item, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.RadialOffsetPercentage">
      <summary>
            Gets or sets radial offset of title as percentage. 0 = axis begin, 100 = axis end. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.RadialOffsetPercentageProperty">
      <summary>
            Identifies the RadialOffsetPercentage dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.RadialOffsetPixels">
      <summary>
            Radial offset of title as pixels. 0 = axis begin, 100 = axis end.
            RadialOffsetPercentage affects first, then this. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.RadialOffsetPixelsProperty">
      <summary>
            Identifies the RadialOffsetPixels dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.RoundAxisTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle">
      <summary>
            Round series title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.Offset">
      <summary>
            Gets or sets offset. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.RoundSeriesTitle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle">
      <summary>
            Series title class. It's a base class for most of series titles 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.AutoPlacement">
      <summary>
            Gets or sets if place title automatically on chart near the series data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.AutoPlacementProperty">
      <summary>
            Identifies the AutoPlacement dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment within X axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.LimitInsideGraphMargins">
      <summary>
            Gets or sets if limits text inside graph margins area. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.LimitInsideGraphMarginsProperty">
      <summary>
            Identifies the LimitInsideGraphMargins dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.LockAutoPosition">
      <summary>
            Gets or sets if lock title position to current X and Y data values. Prevent automatic title placement routine from relocating the title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.LockAutoPositionProperty">
      <summary>
            Identifies the LockAutoPosition dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.Offset">
      <summary>
            Gets or sets offset of its aligned position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.VerticalAlign">
      <summary>
            Gets or sets vertical alignment within Y axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D">
      <summary>
            Series3D title base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.WorldOffset">
      <summary>
            Gets or sets offset as world values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3D.WorldOffsetProperty">
      <summary>
            Identifies the WorldOffset dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar">
      <summary>
            Series3DBar title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.WorldOffset">
      <summary>
            Gets or sets offset as world values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBar.WorldOffsetProperty">
      <summary>
            Identifies the WorldOffset dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase">
      <summary>
            Series3D title base class. It's a base class for all 3D-series titles 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase.AllowDragging">
      <summary>
            Allow user to move title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.SeriesTitle3DBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.TitleBase">
      <summary>
            Base class for titles.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Angle">
      <summary>
            Gets or sets text rotation angle, in degrees. The rotation is applied around text center point. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.AngleProperty">
      <summary>
            Identifies the Angle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.CreateFont">
      <summary>
            Create font.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.CreateShadow">
      <summary>
            Create shadow.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.DrawRectangle">
      <summary>
            Gets title draw rectangle. Note, accurate only for Angle=0. Otherwise, reliable only Width, Height and central point.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.DrawRectangleProperty">
      <summary>
            Identifies the DrawRectangle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Font">
      <summary>
            Gets or sets title font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.FontProperty">
      <summary>
            Identifies the Font dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.TitleBase.SetItemDragStartPosition">
      <summary>
            Item center position when dragging starts.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Shadow">
      <summary>
            Gets or sets shadow below the text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.ShadowProperty">
      <summary>
            Identifies the Shadow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Text">
      <summary>
            Gets or sets title text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.TextProperty">
      <summary>
            Identifies the Text dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.TitleBase.Visible">
      <summary>
            Gets or sets if title is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.TitleBase.VisibleProperty">
      <summary>
            Identifies the Visibility dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar">
      <summary>
            3DBar value title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.#ctor">
      <summary>
            Constructor, for serialization purposes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.Text">
      <summary>
            Title text. Not applicable with value title!
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.WorldOffset">
      <summary>
            Gets or sets offset as world values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Titles.ValueTitle3DBar.WorldOffsetProperty">
      <summary>
            Identifies the WorldOffset dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter">
      <summary>
            General type converter. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if conversion is possible.
            <para>If special byte[] serialization is enabled, this reports it possible to convert byte[] to LC types.</para></summary>
      <param name="context">Context.</param>
      <param name="sourceType">Source type.</param>
      <returns>True, if conversion can be done.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if conversions to requested type can happen.
            <para>If special byte[] serialization is enabled, this reports it possible to convert LC types to byte[].</para></summary>
      <param name="context">Context.</param>
      <param name="destinationType">Destination type.</param>
      <returns>True, if conversion can be done.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
             Converts given object to the type of this converter. 
            </summary>
      <param name="context">Context.</param>
      <param name="culture">Culture.</param>
      <param name="value">Value.</param>
      <returns>Deserialized object, if it was successful.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
             Converts object to the requested type. 
             <para>Conversion to byte[] is handled by TreeBinarySerializer by calling ConvertToBytes.</para></summary>
      <param name="context">Context.</param>
      <param name="culture">Culture.</param>
      <param name="value">Value.</param>
      <param name="destinationType">Destination type.</param>
      <returns>Object converted to the requested type, if supported.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Returns a collection of properties for the type of array specified by the value parameter,
            using the specified context and attributes. 
            </summary>
      <param name="attributes">Attributes.</param>
      <param name="value">Value.</param>
      <param name="context">Context.</param>
      <returns>Property descriptors.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.GeneralTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether this object supports properties, using the specified context. 
            </summary>
      <param name="context">Context.</param>
      <returns>Are properties supported.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter">
      <summary>
            String to double converter.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Convert value string to double.
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="culture">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>culture</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Convert double to string.
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="culture">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>culture</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.TypeConverters.StringToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.CheckBoxStateChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the CheckBoxStateChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.CheckBoxStateChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of CheckBoxStateChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.CheckBoxStateChangedEventArgs.IsChecked">
      <summary>
            Is the check box checked.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.CheckBoxStateChangedEventArgs.Series">
      <summary>
            The series whose check box state was changed.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase">
      <summary>
            LegendBox shows the series names and line/point styles in a box.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.AllowResize">
      <summary>
            Gets or sets whether the legend box can be resized by user interactive device. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.AllowResizeProperty">
      <summary>
            Identifies the AllowResize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.AutoSize">
      <summary>
            Gets or sets whether the legend box resizes itself. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.AutoSizeProperty">
      <summary>
            Identifies the AutoSize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.BorderColor">
      <summary>
            Gets or sets border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.BorderColorProperty">
      <summary>
            Identifies the BorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.BorderWidth">
      <summary>
            Gets or sets border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.BorderWidthProperty">
      <summary>
            Identifies the BorderWidth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxColor">
      <summary>
            Gets or sets checkbox color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxColorProperty">
      <summary>
            Identifies the CheckBoxColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxSize">
      <summary>
            Gets of sets checkbox size in DPI
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxSizeProperty">
      <summary>
            Identifies the CheckBoxSize [DPI] dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxStateChanged">
      <summary>
            Occurs when the state of a series title check box has changed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckMarkColor">
      <summary>
            Gets or sets checkbox mark color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckMarkColorProperty">
      <summary>
            Identifies the CheckMarkColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CreateOffset">
      <summary>
            Create offset. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Fill">
      <summary>
            Gets or sets fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.GetRenderedRect">
      <summary>
            Get rendered rectangle.
            </summary>
      <returns>Rendered rectangle.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Height">
      <summary>
            Gets or sets the height of the legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.HighlightSeriesOnTitle">
      <summary>
            Gets or sets highlight series, if user interactive device is over it or title on legendbox. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.HighlightSeriesOnTitleProperty">
      <summary>
            Identifies the HighlightSeriesOnTitle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.HighlightSeriesTitleColor">
      <summary>
            Gets or sets highlighted series title color on legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.HighlightSeriesTitleColorProperty">
      <summary>
            Identifies the HighlightSeriesTitleColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is mouse over item.
            </summary>
      <param name="x">Mouse X-coordinate. Units depend on useDIP parameter value.</param>
      <param name="y">Mouse Y-coordinate.</param>
      <param name="useDIP">Use DIP instead of pixels as parameters.</param>
      <returns>True if mouse is over item, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Layout">
      <summary>
            Gets or sets layout. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LayoutCoerceValue(System.Windows.DependencyObject,System.Object)">
      <summary>
            New layout coerce value
            </summary>
      <param name="d">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>d</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LayoutCoerceValue(System.Windows.DependencyObject,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="baseValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseValue</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LayoutCoerceValue(System.Windows.DependencyObject,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LayoutCoerceValue(System.Windows.DependencyObject,System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LayoutProperty">
      <summary>
            Identifies the Layout dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxTitleStateUpdateEnabled">
      <summary>
            Check if LegendBox series title highlight state can be updated. Used in user interactive device event.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxTitleStateUpdateEnabled</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.MoveFromSeriesTitle">
      <summary>
            Gets or sets if allow legendbox moving from series title, which prevents sending messages from the series title clicks. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.MoveFromSeriesTitleProperty">
      <summary>
            Identifies the MoveFromSeriesTitle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Offset">
      <summary>
            Gets or sets offset from location calculated by Position property. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ScrollBarVisibility">
      <summary>
            Scroll bar visibility setting. This is a Dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ScrollBarVisibilityProperty">
      <summary>
            Identifies the ScrollBarVisibility dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleColor">
      <summary>
            Gets or sets series title color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleColorProperty">
      <summary>
            Identifies the SeriesTitleColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleFont">
      <summary>
            Gets or sets series title font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleFontProperty">
      <summary>
            Identifies the SeriesTitleFont dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseClick">
      <summary>
            Series title mouse click event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseClickEvent">
      <summary>
            Occurs when a user interactive device button is clicked on a series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseDoubleClick">
      <summary>
            Series title mouse double click event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseDoubleClickEvent">
      <summary>
            Occurs when a mouse button is double-clicked on a series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseDown">
      <summary>
            Series title mouse down event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseDownEvent">
      <summary>
            Occurs when a user interactive device is pressed down on a series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseUp">
      <summary>
            Series title mouse up event handler.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleMouseUpEvent">
      <summary>
            Occurs when a user interactive device button is released over a series title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set item drag end position
            </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="FinalPosition">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FinalPosition</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetItemDragPosition(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetItemDragStartPosition">
      <summary>
            Item draw position when dragging starts.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SetProperCursor">
      <summary>
            Set cursor.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Shadow">
      <summary>
            Gets or sets shadow beneath the legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ShadowProperty">
      <summary>
            Identifies the Shadow dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ShowCheckboxes">
      <summary>
            Gets or sets if show checkboxes for selecting visibility of series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ShowCheckboxesProperty">
      <summary>
            Identifies the ShowCheckboxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ShowIcons">
      <summary>
            Gets or sets if show icons. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ShowIconsProperty">
      <summary>
            Identifies the ShowIcons dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UnitsColor">
      <summary>
            Gets or sets units text color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UnitsColorProperty">
      <summary>
            Identifies the UnitsColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UnitsFont">
      <summary>
            Gets or sets units text font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UnitsFontProperty">
      <summary>
            Identifies the UnitsFont dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UseSeriesTitlesColors">
      <summary>
            Gets or sets if use series title color. If false, uses Items color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.UseSeriesTitlesColorsProperty">
      <summary>
            Identifies the UseSeriesTitlesColors dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ValueLabelColor">
      <summary>
            Gets or sets series value color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ValueLabelColorProperty">
      <summary>
            Identifies the ValueLabelColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ValueLabelFont">
      <summary>
            Gets or sets series value text font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.ValueLabelFontProperty">
      <summary>
            Identifies the ValueLabelFont dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Width">
      <summary>
            Gets or sets the width of the legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.WidthProperty">
      <summary>
            Identifies the Width dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.Visible">
      <summary>
            Gets or sets if legend box is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.CheckBoxStateChangedHandler">
      <summary>
            The delegate to use for handlers that receive the CheckBoxStateChanged event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the CheckBoxStateChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxScrollBarVisibility">
      <summary>
            Scroll Bar visibility.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxScrollBarVisibility.None">
      <summary>
            No scroll bars.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxScrollBarVisibility.Horizontal">
      <summary>
            Horizontal bar.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxScrollBarVisibility.Vertical">
      <summary>
            Vertical bar.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.LegendBoxScrollBarVisibility.Both">
      <summary>
            Both scroll bars.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxBase.SeriesTitleUserActionEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseAction event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseAction event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            LegendBox object. Actually checkbox and title region area container to handle user interactive device events.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxObject.Dispose">
      <summary>
            Dispose
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxObject.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxObject.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces">
      <summary>
            LegendBox shows the series names and drawing styles in a box.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.#ctor(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase)">
      <summary>
            Constructor.
            </summary>
      <param name="legendBox">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legendBox</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.#ctor(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleBorderColor">
      <summary>
            Gets or sets scale border color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleBorderColorProperty">
      <summary>
            Identifies the ScaleBorderColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleBorderWidth">
      <summary>
            Gets or sets scale border width. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleBorderWidthProperty">
      <summary>
            Identifies the ScaleBorderWidth dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleSizeDim1">
      <summary>
            Gets or sets scale size in pixels, primary dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleSizeDim1Property">
      <summary>
            Identifies the ScaleSizeDim1 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleSizeDim2">
      <summary>
            Gets or sets scale size in pixels, secondary dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ScaleSizeDim2Property">
      <summary>
            Identifies the ScaleSizeDim2 dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.SizeGrid">
      <summary>
            Gets or sets scale grid size in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.SizeGridProperty">
      <summary>
            Identifies the SizeGrid dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.TitlePosition">
      <summary>
            Gets or sets scale title position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.TitlePositionProperty">
      <summary>
            Identifies the TitlePosition dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.Visible">
      <summary>
            Show/hide scale. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.LegendBoxSurfaces.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the Margins changed event for views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of MarginsChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.NewMarginBottom">
      <summary>
            Bottom margin new value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.NewMarginLeft">
      <summary>
            Left margin new value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.NewMarginRight">
      <summary>
            Right margin new value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.NewMarginTop">
      <summary>
            Top margin new value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.OldMarginBottom">
      <summary>
            Bottom margin old value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.OldMarginLeft">
      <summary>
            Left margin old value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.OldMarginRight">
      <summary>
            Right margin old value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.MarginsChangedEventArgs.OldMarginTop">
      <summary>
            Top margin old value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon">
      <summary>
            View rendering options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.AntiAliasLevel">
      <summary>
            Anti-aliasing factor. 0 and 1 = No anti-aliasing. This is a dependency property.
            The larger the value, the smoother the image will be, but at steep cost of performance on some display adapters.
            Only objects having <see cref="F:Arction.Wpf.ChartingMVVM.LineAntialias.Normal" /> will be anti-aliased.
            <para>
            Note that with DX11 thicker (triangle) lines cannot be rendered without 
            anti-aliasing unless this property's value is set to be lower than 1.
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.AntiAliasLevelProperty">
      <summary>
            Identifies the AntiAliasLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.D2DEnabled">
      <summary>
             Determines if the D2D system is used or not. Text rendering does not work on DX11 without D2D. This is intended only as Debug measure at this time, and the property will be removed later.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.DeviceType">
      <summary>
            Gets or sets rendering device type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.DeviceTypeProperty">
      <summary>
            Identifies the DeviceType dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.FontsQuality">
      <summary>
            Gets or sets fonts rendering quality. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.FontsQualityProperty">
      <summary>
            Identifies the FontQuality dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.ForceDeviceCreateOnResize">
      <summary>
            Gets or sets if force device create on control resize. Some virtual machine environment require this to be set to true. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.ForceDeviceCreateOnResizeProperty">
      <summary>
            Identifies the ForceDeviceCreateOnResize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.FrameRateLimit">
      <summary>
            Maximum frames to present in second. 
            <para>This is a dependency property</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.FrameRateLimitProperty">
      <summary>
            Identifies the FrameRateLimit property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.GPUPreference">
      <summary>
            Gets or sets GPU preference setting. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.GPUPreferenceProperty">
      <summary>
            Identifies the GPUPreference dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.HeadlessMode">
      <summary>
            Defines if the LightningChart expects to have a graphical interface or not. 
            This allows the LC to be used in the background, without connections to interface.
            
            This has effect on multiple different things. For instance device type selection will cause 
            the engine to change instantly on selection, not when LC is connected to visual tree.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.HeadlessModeProperty">
      <summary>
            Identifies the HeadlessMode property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.InvokeRenderingInUIThread">
      <summary>
            Gets or sets if use thread safe updates to force the control draw itself though Invoke. This is a dependency property.
            Enabling this may cause slower updates, and should not be used in applications running without auxiliary threads updating the chart data or properties.
            Alternatively, you can use Invoke method of your parent form or control.
            You should always update the chart data from by Invoking in application side. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.InvokeRenderingInUIThreadProperty">
      <summary>
            Identifies the InvokeRenderingInUIThread dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineAAType2D">
      <summary>
            Anti-aliasing type of single pixel width anti-aliased lines for 2D Views. Applicable only on DX11 and when 
            AntiAliasLevel is above 1. 
            Lines thicker than 1 pixel are rendered using triangles, and use triangle drawing AA system. 
            ALAA option produces generally best looking line and is faster than QLAA. There is some problems with ALAA
            with Warp though.
            <para>
            Note that on DX11, the usage of alpha-line anti-aliasing can be also controlled through
            <see cref="F:SharpDX.Direct3D11.RasterizerStateDescription.IsMultisampleEnabled" /></para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineAAType2DProperty">
      <summary>
            Identifies the LineAAType dependency property for 2D views.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineAAType3D">
      <summary>
            Anti-aliasing type of single pixel width anti-aliased lines for 3D Views. Applicable only on DX11 and when 
            AntiAliasLevel is above 1. 
            Lines thicker than 1 pixel are rendered using triangles, and use triangle drawing AA system. 
            ALAA option produces generally best looking line and is faster than QLAA. There is some problems with ALAA
            with Warp though.
            <para>
            Note that on DX11, the usage of quadrilateral-line anti-aliasing can be also controlled through
            <see cref="F:SharpDX.Direct3D11.RasterizerStateDescription.IsMultisampleEnabled" /></para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineAAType3DProperty">
      <summary>
            Identifies the LineAAType dependency property for 3D views.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineOffset">
      <summary>
            Debug Line offset of the DX11 line drawing. 
            LightningChart internally uses coordinate system where the coordinate 
            points to the center of the pixel. Meaning that screen coordinate (0,0) 
            is at the center of the top-left pixel. In DX9 this is the same. In DX11 
            the point (0,0) is at the top-left corner of the top-left pixel, and the
            center of the pixel is at point (0.5, 0.5). 
            The points are moved by this offset in DX11 engine, so that the chart can 
            use the same coordinate system with all engines. The default value of 
            (0.5, 0.5) is the "correct" one, but it can be modified by this property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.LineOffsetProperty">
      <summary>
            Identifies the LineOffset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.RemoteDesktopVendorId">
      <summary>
            Gets or sets RemoteDeskTop graphics card id. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.RemoteDesktopVendorIdProperty">
      <summary>
            Identifies the RemoteDesktopVendorId dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateOnResize">
      <summary>
            Gets or sets if update chart always when resizing control. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateOnResizeProperty">
      <summary>
            Identifies the UpdateOnResize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateOnResizeTimeInterval">
      <summary>
            Gets or sets chart update interval (ms) after resizing ends, if UpdateAlwaysOnResize is false. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateOnResizeTimeIntervalProperty">
      <summary>
            Identifies the UpdateOnResizeTimeInterval dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.UpdateTypeProperty">
      <summary>
            Identifies the ChartUpdateStyle property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.WaitForVSync">
      <summary>
            Gets or sets if wait for next refresh, V-Sync. This is a dependency property.
            If the computer is fast enough, disabling this can give higher refresh rate than the screen refresh rate is. 
            By disabling this, rendering does not wait next screen refresh turn. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.WaitForVSyncProperty">
      <summary>
            Identifies the WaitForVSync dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.ViewXY">
      <summary>
            Gets or sets rendering options for ViewXY. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.RenderOptionsCommon.ViewXYProperty">
      <summary>
            Identifies the ViewXY dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.SeriesTitleUserActionEventArgs">
      <summary>
            Represents a class that provides arguments for the SeriesTitleMouseAction event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.SeriesTitleUserActionEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SeriesTitleMouseActionEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.SeriesTitleUserActionEventArgs.Series">
      <summary>
            The series that was manipulated with a user.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.SeriesTitleUserActionEventArgs.UserEventArguments">
      <summary>
            General stucture for UserEventArguments.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ThinBorder">
      <summary>
            Border rendered around graph area
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ThinBorder.#ctor">
      <summary>
            Constructor for Form editor/xaml.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ThinBorder.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Boolean)">
      <summary>
            Constructor
            </summary>
      <param name="Owner">View owner</param>
      <param name="Visible">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Visible</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ThinBorder.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ThinBorder.Color">
      <summary>
            Gets or sets bar Color values in View. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ThinBorder.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ThinBorder.ToString">
      <summary>
            Override ToString
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ThinBorder.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ThinBorder.Visible">
      <summary>
            Gets or sets bar Visible values in View. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ThinBorder.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View2D">
      <summary>
            XY graph view. Allows super-fast drawing of lines and bars.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View2D.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.CreateZoomPanOptions">
      <summary>
            Create zoom pan options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.FreeZoomDrawData">
      <summary>
            Free Zoom data
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.GetMarginsRect(System.Boolean)">
      <summary>
            Gets a rectangle defining the area inside margins in DIPs.
            </summary>
      <param name="useDIP">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useDIP</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View2D.GetMarginsRect(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>Surrounding rectangle.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View2D.GraphBackground">
      <summary>
            Gets or sets graph background fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View2D.GraphBackgroundProperty">
      <summary>
            Identifies the GraphBackground dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View2D.SetGraphBackground(Arction.Wpf.ChartingMVVM.Fill)">
      <summary>
            Graph background filling
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View2D.SetGraphBackground(Arction.Wpf.ChartingMVVM.Fill)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType">
      <summary>
            Object types.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType.Axis">
      <summary>
            Type of Axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType.Series">
      <summary>
            Type of Series.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType.LegendBox">
      <summary>
            Type of LegendBox.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType.Sectors">
      <summary>
            Type of Sectors.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewBase">
      <summary>
            View base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.#ctor">
      <summary>
            Protected constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.CalcMarginEffects">
      <summary>
             Handler of margin / size based items. Should be called after either size or margins changes. 
             Should update all values that depend on those. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewBase.cMargins">
      <summary>
            Paddings
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            user interactive device button has been clicked.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been double clicked.
            For double click the behaviour is almost similar to single click, only raised event differs.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been pressed down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been released.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.GetZoomPadding">
      <summary>
             Getter of the ZoomPadding, supported by Round and 3D Views
             ZoomPanOptions. 
            </summary>
      <returns>ZoomPadding of the given view, if supported. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Occurs when a user interactive device button is clicked over the legend box scroll bars
            </summary>
      <param name="legendBox">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legendBox</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonClickedOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device button down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Occurs when a user interactive device button is down on the legend box scroll bars
            </summary>
      <param name="legendBox">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legendBox</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonDownOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device button up event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="interactedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>interactedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)">
      <summary>
            Occurs when a user interactive device button is up over the legend box scroll bars.
            </summary>
      <param name="legendBox">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legendBox</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="mousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="exit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceButtonUpOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device move.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean)">
      <summary>
            Occurs when a user interactive device is moved over the legend box scroll bars
            </summary>
      <param name="legendBox">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legendBox</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleDeviceMoveOnLegendBoxScrollBars(Arction.Wpf.ChartingMVVM.Views.LegendBoxBase,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Handle ScrollBar user interactive device button clicked event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Handle ScrollBar user interactive device button down event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)">
      <summary>
            Handle horizontal scroll bars interactive device button up event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="mousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="exit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle ScrollBar user interactive device move on different views.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleHorizontalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleMarginsChanged">
      <summary>
            Handle margins changed
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Occurs when vertical scroll bars were clicked by device button.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)">
      <summary>
            Handle ScrollBar user interactive device button down event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)">
      <summary>
            Handle vertical scroll bars user interactive device button up event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="mousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="exit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle vertical scroll bar user interactive device move on different views.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.HandleVerticalScrollBarsDeviceMove(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>
            Render chart if item list changed.
            </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.ItemListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewBase.m_bUserInteractiveDeviceIsOverGraph">
      <summary>
            User interactive device over graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewBase.m_pfMarginCenter">
      <summary>
             Precalculated center of the margin area in PX, not DIPs.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewBase.Margins">
      <summary>
            Gets or sets margins between control's edges and for example graph area borders in DIPs. 
            If using ViewXY, AxisLayout.AutoAdjustMargins must be disabled this to apply. This is a dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewBase.MarginsChanged">
      <summary>
            Margins changed.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewBase.MarginsProperty">
      <summary>
            Identifies the Margins dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.MoveOnSameCoordinate(System.Int32,System.Int32)">
      <summary>
            Don't deal with mouse move if the coordinate has not changed. It causes massive 
            CPU load when having lots of data and effect timer is running. 
            </summary>
      <param name="iMouseX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iMouseX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.MoveOnSameCoordinate(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="iMouseY">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iMouseY</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.MoveOnSameCoordinate(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.MoveOnSameCoordinate(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewBase.OwnerChart">
      <summary>
            Gets Owner chart of the view. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)">
      <summary>
            Check is position is over graph.
            </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="coord">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.SetInteractiveObjectToIdle(Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Reset interactive object state to idle.
            </summary>
      <param name="mib">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mib</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.SetInteractiveObjectToIdle(Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse wheel has been scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewBase.MarginsChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Margins changed event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Margins changed event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase">
      <summary>
            Zoom, pan and auto-fitting options base for ViewXY.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DevicePrimaryButtonAction">
      <summary>
            Gets or sets user interactive device primary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DevicePrimaryButtonActionProperty">
      <summary>
            Identifies the DevicePrimaryButtonAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DeviceSecondaryButtonAction">
      <summary>
            Gets or sets user interactive device secondary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DeviceSecondaryButtonActionProperty">
      <summary>
            Identifies the DeviceSecondaryButtonAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DeviceTertiaryButtonAction">
      <summary>
            Gets or sets user interactive device tertiary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.DeviceTertiaryButtonActionProperty">
      <summary>
            Identifies the DeviceTertiaryButtonAction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.PanThreshold">
      <summary>
            Gets or sets user interactive device panning threshold in pixels. This is a dependency property. Pan occurs only when device button is pressed down and the device
            movement equals the given pixel value or is more. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.PanThresholdProperty">
      <summary>
            Identifies the PanThreshold dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.RailAngle">
      <summary>
            Gets or sets multitouch rail angle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.RailAngleProperty">
      <summary>
            Identifies the RailAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.RectangleZoomingThreshold">
      <summary>
            Gets or sets rectangle zooming threshold. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.RectangleZoomingThresholdProperty">
      <summary>
            Identifies the RectangleZoomingThreshold dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomFactor">
      <summary>
            Gets or sets zoom factor. This is a dependency property. It's used when zooming in with a user interactive device click combined with Shift and/or Ctrl key.
            Shift key makes zooming in X dimension, Ctrl in Y dimension. Device primary button zooms in, secondary zooms out.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomFactorProperty">
      <summary>
            Identifies the ZoomFactor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomOutRectFill">
      <summary>
            Gets or sets zoom out rectangle fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomOutRectFillProperty">
      <summary>
            Identifies the ZoomOutRectFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomOutRectLine">
      <summary>
            Gets or sets zoom out rectangle line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomOutRectLineProperty">
      <summary>
            Identifies the ZoomOutRectLine dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomRectFill">
      <summary>
            Gets or sets zoom rectangle fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomRectFillProperty">
      <summary>
            Identifies the ZoomRectFill dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomRectLine">
      <summary>
            Gets or sets zoom rectangle line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase.ZoomRectLineProperty">
      <summary>
            Identifies the ZoomRectLine dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Annotation3DCollection">
      <summary>
            Represents a collection of Annotation3D objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Annotation3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D">
      <summary>
            Bar view options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.BarSpacing">
      <summary>
            Gets or sets space between bars in same group as world values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.BarSpacingProperty">
      <summary>
            Identifies the BarSpacing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.IndexGroupingFitGroupDistance">
      <summary>
            Gets or sets space between bar groups as world values, when grouping is fitted. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.IndexGroupingFitGroupDistanceProperty">
      <summary>
            Identifies the IndexGroupingFitGroupDistance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.IndexGroupingFitGroupSideMargins">
      <summary>
            Gets or sets space between edge and nearest groups as world values, when grouping is fitted. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.IndexGroupingFitGroupSideMarginsProperty">
      <summary>
            Identifies the IndexGroupingFitGroupSideMargins dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.StackSum">
      <summary>
            Gets or sets stack sum. This is a dependency property. The series values amongst different series are stacked 
            and stretched to make this sum. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.StackSumProperty">
      <summary>
            Identifies the StackSum dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.ViewGrouping">
      <summary>
            Gets or sets grouping series to view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BarViewOptions3D.ViewGroupingProperty">
      <summary>
            Identifies the ViewGrouping dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D">
      <summary>
            Bitmap fill for 3D surface mesh.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.Antialias">
      <summary>
            Gets or sets if antialias. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.AntialiasProperty">
      <summary>
            Identifies the Antialias dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.Image">
      <summary>
            Gets or sets image object. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.ImageAlpha">
      <summary>
            Gets or sets image alpha. 0 is transparent, 255 fully visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.ImageAlphaProperty">
      <summary>
            Identifies the ImageAlpha dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.ImageProperty">
      <summary>
            Identifies the Image dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.MirrorHorizontal">
      <summary>
            Gets or sets if flip image horizontally. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.MirrorHorizontalProperty">
      <summary>
            Identifies the MirrorHorizontal dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.MirrorVertical">
      <summary>
            Gets or sets if mirror bitmap vertically. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.MirrorVerticalProperty">
      <summary>
            Identifies the MirrorVertical dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.ToString">
      <summary>
            Convert object to string.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.BitmapFill3D.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D">
      <summary>
            Camera in 3D view.
            <para>Defines how and from what direction the world is seen from.</para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Camera owner view.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.DistanceToOrthographicViewArea(System.Double)">
      <summary>
            Converts view distance value into a orthographic view area.
            Used for building projection matrix.
            </summary>
      <param name="distance">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>distance</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.DistanceToOrthographicViewArea(System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>Orthographic view area.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.FieldOfViewAngle">
      <summary>
            Field of view, that is, perspective angle. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.FieldOfViewAngleProperty">
      <summary>
            Identifies the FieldOfViewAngle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.GetFarClipDistance">
      <summary>
             Getter of the far clipping distance for the 3D projection. 
             This is an advanced setting that is not supported in normal use and should not be modified. 
            </summary>
      <returns>Current far clipping distance.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.GetLocationAs3DWorldCoord">
      <summary>
            Gets camera location in 3D world space. 
            </summary>
      <returns>Camera location.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.GetNearClipDistance">
      <summary>
             Getter of the near clipping distance for the 3D projection. 
             This is an advanced setting that is not supported in normal use and should not be modified. 
            </summary>
      <returns>Current near clipping distance.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.LockPointerDeviceHorizRotationAxis">
      <summary>
            Locks user pointer device (mouse etc) based rotation to use current 
            camera orientation settings for rotation axis. 
            This affects the way horizontal rotation behaves on certain 
            <see cref="T:Arction.Wpf.ChartingMVVM.OrientationModes" /> values. 
            <para>
            This has no effect when <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode" /> is 
            <see cref="F:Arction.Wpf.ChartingMVVM.OrientationModes.XYZ_Mixed" />.
            </para><para>
            This method is intended mostly as internal operation of LC. It's run
            when <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" />, <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> or 
            <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" /> properties are changed, causing horizontal 
            rotation axis to be locked based on the current rotation settings. 
            The method has been left as public for special cases, where users 
            need to make the same operation without modifying the rotation 
            parameters. 
            </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.MinimumViewDistance">
      <summary>
            Gets or sets minimum View distance. This is a dependency property. Limits the adjust range of ViewDistance.
            In some cases, you don't want to let the user set the camera too near. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.MinimumViewDistanceProperty">
      <summary>
            Identifies the MinimumViewDistance dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode">
      <summary>
             Type of orientation angle definition used in camera orientation. 
             This is a Dependency Property.
             <para>
             This affects how on the orientation angles (<see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" />, 
             <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> and <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" />) are interpreted 
             and how do they affect the camera orientation / position. 
             </para><para>
             See <see cref="T:Arction.Wpf.ChartingMVVM.OrientationModes" /> for more detailed description of options.
             </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationModeProperty">
      <summary>
            Identifies the OrientationMode dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrthographicViewAreaToDistance(Arction.Wpf.ChartingMVVM.SizeFloat)">
      <summary>
            Converts orthographic view's area into a view distance value.
            </summary>
      <param name="ViewArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ViewArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrthographicViewAreaToDistance(Arction.Wpf.ChartingMVVM.SizeFloat)</parameter>
          </include>
        </markup>
      </param>
      <returns>Orthographic view's area as view distance.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrthographicViewAreaToDistance(Arction.Wpf.ChartingMVVM.SizeFloat,System.Double,System.Double)">
      <summary>
            Converts orthographic view's area into a view distance value.
            </summary>
      <param name="viewArea">Orthographic view area.</param>
      <param name="aspectRatio">Aspect ratio.</param>
      <param name="fov">Field of view, in radians.</param>
      <returns>Orthographic view's area as view distance.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.Projection">
      <summary>
            Gets or sets camera projection type. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.ProjectionProperty">
      <summary>
            Identifies the Projection dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX">
      <summary>
            Part of defining camera orientation and position, by setting its 
            looking direction 
            rotation around X-axis (pitch, elevation) in degrees. 
            This is a dependency property. 
            <para>Selected Orientation mode (<see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode" />) defines
            how the value affects camera orientation and position.
            See <see cref="T:Arction.Wpf.ChartingMVVM.OrientationModes" /> enumeration for more information. 
            <para><see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> and 
            <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" /> needs to be set as well for defining 
            camera orientation. The rotation values are taken into 
            account on a specific order, NOT on the order they are set. </para></para><para>
            In some orientation modes setting this value 
            causes user device horizontal rotation axis to be set.
            </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationXMaximum">
      <summary>
            Maximum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationXMaximumProperty">
      <summary>
            Identifies the RotationXMaximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationXMinimum">
      <summary>
            Minimum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationXMinimumProperty">
      <summary>
            Identifies the RotationXMinimum dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationXProperty">
      <summary>
            Identifies the RotationX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY">
      <summary>
            Part of defining camera orientation and position, by setting its 
            looking direction 
            rotation around Y-axis (Yaw, Heading, Bearing) in degrees. 
            This is a dependency property. 
            <para>Selected Orientation mode (<see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode" />) defines
            how the value affects camera orientation and position.
            See <see cref="T:Arction.Wpf.ChartingMVVM.OrientationModes" /> enumeration for more information. 
            <para><see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" /> and 
            <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" /> needs to be set as well for defining 
            camera orientation. The rotation values are taken into 
            account on a specific order, NOT on the order they are set. </para></para><para>
            In some orientation modes setting this value 
            causes user device horizontal rotation axis to be set.
            </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationYMaximum">
      <summary>
            Maximum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationYMaximumProperty">
      <summary>
            Identifies the RotationYMaximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationYMinimum">
      <summary>
            Minimum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationYMinimumProperty">
      <summary>
            Identifies the RotationYMinimum dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationYProperty">
      <summary>
            Identifies the RotationY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ">
      <summary>
            Part of defining camera orientation and position, by setting its 
            looking direction 
            rotation around Z-axis (pitch, elevation) in degrees. 
            This property has highly different effects on different 
            orientation modes. 
            This is a dependency property. 
            <para>Selected Orientation mode (<see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.OrientationMode" />) defines
            how the value affects camera orientation and position.
            See <see cref="T:Arction.Wpf.ChartingMVVM.OrientationModes" /> enumeration for more information. 
            <para><see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationY" /> and 
            <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationX" /> needs to be set as well for defining 
            camera orientation. The rotation values are taken into 
            account on a specific order, NOT on the order they are set. </para></para><para>
            In some orientation modes setting this value 
            causes user device horizontal rotation axis to be set.
            </para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZMaximum">
      <summary>
            Maximum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZMaximumProperty">
      <summary>
            Identifies the RotationZMaximum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZMinimum">
      <summary>
            Minimum allowed value of <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZ" /> property.
            <para>This can be used to limit camera orientation / location 
            to some specific area. 
            </para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZMinimumProperty">
      <summary>
            Identifies the RotationZMinimum dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.RotationZProperty">
      <summary>
            Identifies the RotationZ dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetEulerAngles(System.Double,System.Double,System.Double)">
      <summary>
             Same as setting RotationX, RotationY and RotationZ properties 
             separately. Allows easier setting of the properties and 
             is faster than separate setting of the properties. 
            </summary>
      <param name="X">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>X</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetEulerAngles(System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="Y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Y</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetEulerAngles(System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="Z">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Z</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetEulerAngles(System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetFarClipDistance(System.Single)">
      <summary>
             Setter of the far clipping distance for the 3D projection. 
             This is an advanced setting that is not supported in normal use and should not be modified. 
            </summary>
      <param name="farClipDist">New far clipping distance.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetNearClipDistance(System.Single)">
      <summary>
             Setter of the near clipping distance for the 3D projection. 
             This is an advanced setting that is not supported in normal use and should not be modified. 
            </summary>
      <param name="nearClipDist">New near clipping distance.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.SetPredefinedCamera(Arction.Wpf.ChartingMVVM.PredefinedCamera)">
      <summary>
            Sets camera orientation angles to values based given predefined orientation setting. 
            </summary>
      <param name="predefinedCamera">Predefined camera orientation setting to be used.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.Target">
      <summary>
            Gets or sets target 3D world coordinate. Camera is targeted towards this coordinate. This is a dependency property.
            Use (0,0,0) to center in the 3D view. 
            View distance is calculated from this target. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.TargetProperty">
      <summary>
            Identifies the Target dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.ViewDistance">
      <summary>
            Gets or sets view distance. This is a dependency property. You should use values in range 10...1000.
            Distance is calculated from Target 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Camera3D.ViewDistanceProperty">
      <summary>
            Identifies the ViewDistance dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox">
      <summary>
            On View3D a certain area is selected that axes are shown around. In effect the axes form a cube that the axes are drawn on three edges of.
            The area is further specified by drawing walls on some of it's faces. The area can also be visualized by drawing a framebox around it. 
            The FrameBox consists of lines drawn along the edges of the cube. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.LineColor">
      <summary>
            Color of the FrameBox line color. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.LineColorProperty">
      <summary>
            Identifies the LineColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.Style">
      <summary>
            Style that defines how the FrameBox is presented. 
            <para>This is a DependencyProperty</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.StyleProperty">
      <summary>
            Identifies the Categorization dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.FrameBoxStyle">
      <summary>
             Style to present the framebox with. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.FrameBoxStyle.Off">
      <summary>
             Framemebox is not shown. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.FrameBox.FrameBoxStyle.AllEdges">
      <summary>
            Framebox is shown on all of the edges of the cube.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs">
      <summary>
            Represents a class that provides arguments for the GeometryConstructed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of GeometryConstructedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs.Mesh">
      <summary>
            MeshModel object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs.X">
      <summary>
            X-coordinate array.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs.Y">
      <summary>
            Y-coordinate array.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.GeometryConstructedEventArgs.Z">
      <summary>
            Z-coordinate array.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D">
      <summary>
            Legend box for 3D series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.Categorization">
      <summary>
            Gets or sets categorization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CategorizationProperty">
      <summary>
            Identifies the Categorization dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CategoryColor">
      <summary>
            Gets or sets category title color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CategoryColorProperty">
      <summary>
            Identifies the CategoryColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CategoryFont">
      <summary>
            Gets or sets category font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CategoryFontProperty">
      <summary>
            Identifies the CategoryFont dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SeriesTitleMouseMoveOverOff">
      <summary>
            Occurs when the mouse pointer moves out over the series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SeriesTitleMouseMoveOverOn">
      <summary>
            Occurs when the mouse pointer moves in over the series title.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SurfaceScales">
      <summary>
            Gets or sets surface scales. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SurfaceScalesProperty">
      <summary>
            Identifies the SurfaceScales dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SeriesTitleMouseMoveOverOffEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOff event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOff event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3D.SeriesTitleMouseMoveOverOnEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOn event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOn event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase">
      <summary>
            Base class for 3D view LegendBox.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase.Position">
      <summary>
            Gets or sets position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.LegendBox3DBase.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D">
      <summary>
            Light in 3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.#ctor">
      <summary>
            Constructor. Don't use from code. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AmbientColor">
      <summary>
            Gets or sets ambient color of the light. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AmbientColorProperty">
      <summary>
            Identifies the AmbientColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationConstant">
      <summary>
            Gets or sets lighting attenuation, constant. This is a dependency property.
            Atten = 1 / (att0 + att1 * d + att2 * d2)
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationConstantProperty">
      <summary>
            Identifies the AttenuationConstant dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationLinear">
      <summary>
            Gets or sets lighting attenuation, linear factor. This is a dependency property.
            Atten = 1 / (att0 + att1 * d + att2 * d2)
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationLinearProperty">
      <summary>
            Identifies the AttenuationLinear dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationQuadratic">
      <summary>
            Gets or sets lighting attenuation, quadratic factor. This is a dependency property.
            Atten = 1 / (att0 + att1 * d + att2 * d2)
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.AttenuationQuadraticProperty">
      <summary>
            Identifies the AttenuationQuadratic dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.DiffuseColor">
      <summary>
            Gets or sets diffuse color of the light. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.DiffuseColorProperty">
      <summary>
            Identifies the DiffuseColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.Enabled">
      <summary>
            Gets or sets if the light is switched on. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.Location">
      <summary>
            Gets or sets light location. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.LocationFromCamera">
      <summary>
            Gets or sets if use the view camera location as the location of the light. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.LocationFromCameraProperty">
      <summary>
            Identifies the LocationFromCamera dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.SpecularColor">
      <summary>
            Gets or sets specular color of the light. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.SpecularColorProperty">
      <summary>
            Identifies the SpecularColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.Target">
      <summary>
            Gets or sets target coordinates. Applies to Directional light and Spotlight types. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.TargetProperty">
      <summary>
            Identifies the Target dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.Type">
      <summary>
            Gets or sets palette coloring type. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Light3D.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Light3DCollection">
      <summary>
            Represents a collection of 3D lights
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Light3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D">
      <summary>
            Material for 3D objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.AmbientColor">
      <summary>
            Gets or sets ambient color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.AmbientColorProperty">
      <summary>
            Identifies the AmbientColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.DiffuseColor">
      <summary>
            Gets or sets material main color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.DiffuseColorProperty">
      <summary>
            Identifies the DiffuseColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.EmissiveColor">
      <summary>
            Gets or sets emissive color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.EmissiveColorProperty">
      <summary>
            Identifies the EmissiveColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.SpecularColor">
      <summary>
            Gets or sets specular color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.SpecularColorProperty">
      <summary>
            Identifies the SpecularColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.SpecularPower">
      <summary>
            Gets or sets specular power. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.SpecularPowerProperty">
      <summary>
            Identifies the SpecularPower dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Material3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel">
      <summary>
            Mesh model.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)">
      <summary>
            Constructor. Use primary axis for axis binding.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis binding.</param>
      <param name="yAxis">Y-axis binding.</param>
      <param name="zAxis">Z-axis binding.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Construct">
      <summary>
            Construct object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Create(Arction.Wpf.ChartingMVVM.PointFloat3D[],Arction.Wpf.ChartingMVVM.PointFloat[],System.Windows.Media.Imaging.BitmapFrame,Arction.Wpf.ChartingMVVM.TextureWrapMode,System.Int32[])">
      <summary>
            Create a mesh model from positions, texture coordinates, bitmap and optional indices.
            </summary>
      <param name="positions">Vertex array.</param>
      <param name="textureCoordinates">Texture coordinate array.</param>
      <param name="bitmap">Bitmap.</param>
      <param name="textureWrapMode">Texture wrapping mode.</param>
      <param name="indices">Optional index array.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Create(Arction.Wpf.ChartingMVVM.PointFloat3D[],Arction.Wpf.ChartingMVVM.PointFloat3D[],Arction.Wpf.ChartingMVVM.PointFloat[],System.Windows.Media.Imaging.BitmapFrame,Arction.Wpf.ChartingMVVM.TextureWrapMode,System.Int32[])">
      <summary>
            Create a mesh model from positions, normals, texture coordinates, bitmap and optional indices.
            </summary>
      <param name="positions">Vertex array.</param>
      <param name="normals">Vertex normals array.</param>
      <param name="textureCoordinates">Texture coordinate array.</param>
      <param name="bitmap">Bitmap.</param>
      <param name="textureWrapMode">Texture wrapping mode.</param>
      <param name="indices">Optional index array.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Create(Arction.Wpf.ChartingMVVM.PointFloat3D[],System.Int32[])">
      <summary>
            Create a mesh model from positions and optionally colors.
            </summary>
      <param name="positions">Vertex array.</param>
      <param name="colors">Color array, optional.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Create(Arction.Wpf.ChartingMVVM.PointFloat3D[],System.Int32[],Arction.Wpf.ChartingMVVM.PointFloat3D[],System.Int32[])">
      <summary>
            Create a mesh model from positions, colors, normals and optional indices.
            </summary>
      <param name="positions">Vertex array.</param>
      <param name="colors">Color array.</param>
      <param name="normals">Vertex normals array.</param>
      <param name="indices">Optional index array.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateFromTriangles(Arction.Wpf.ChartingMVVM.PointFloat3D[],System.Int32[],Arction.Wpf.ChartingMVVM.PointFloat3D[])">
      <summary>
            Create a mesh model from positions and colors. Positions must be triplets of triangle points and each color in input is color of each triangle. 
            </summary>
      <param name="positions">Triangle position array.</param>
      <param name="colors">Color per triangle (array of Int32).</param>
      <param name="normals">Optional normal array.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateFromTriangles(Arction.Wpf.ChartingMVVM.PointFloat3D[],System.Windows.Media.Color[],Arction.Wpf.ChartingMVVM.PointFloat3D[])">
      <summary>
            Create a mesh model from positions and colors. Positions must be triplets of triangle points and each color in input is color of each triangle. 
            </summary>
      <param name="positions">Triangle position array.</param>
      <param name="colors">Color per triangle (array of Color).</param>
      <param name="normals">Optional normal array.</param>
      <returns>Success code.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Cull">
      <summary>
            Face culling determines which faces are not rendered based on their winding order. If model show wrong faces, culling may be an issue. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CullingProperty">
      <summary>
            Identifies the Cull dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Fill">
      <summary>
            Render as filled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.GeometryConstructed">
      <summary>
            Geometry has been constructed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>True if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.LoadFromFile(System.String)">
      <summary>
            Load from obj format file (.obj).
            </summary>
      <param name="fileName">Filename.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.LoadFromResource(System.String)">
      <summary>
            Load from obj format resource.
            </summary>
      <param name="resourceName">Resource name.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.LoadFromStream(System.IO.Stream)">
      <summary>
            Load from obj file stream (.obj).
            </summary>
      <param name="objStream">Source stream (obj file formatted).</param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.MeshModelRenderingOrderProperty">
      <summary>
            Identifies the MeshModelRenderingOrderProperty
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ModelFile">
      <summary>
            Gets or sets model file name. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ModelFileProperty">
      <summary>
            Identifies the ModelFile dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Position">
      <summary>
            Gets or sets position (offset), in axis values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.RenderingOrder">
      <summary>
            Sets MeshModel's rendering order in relation to other series.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Rotation">
      <summary>
            Gets or sets rotating angles, in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.RotationProperty">
      <summary>
            Identifies the Rotation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ShadeMode">
      <summary>
            MeshModel shading mode. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ShadeModeProperty">
      <summary>
            Identifies the ShadeModeProperty
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Size">
      <summary>
            Gets or sets scaling factor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.TrackTriangle">
      <summary>
            Enable sending events of model face tracking. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.TrackTriangleProperty">
      <summary>
            Identifies the TrackTriangle dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.TriangleTraced">
      <summary>
            User has traced a triangle of mesh with user interactive device.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.UpdateFillBitmap(System.Windows.Media.Imaging.BitmapFrame)">
      <summary>
            Update mesh bitmap, without reconstructing the geometry. 
            </summary>
      <param name="bitmap">Bitmap image.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.UpdateFillColors(System.Int32[])">
      <summary>
            Update mesh colors. The color order must be identical with <see cref="E:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.GeometryConstructed" /> event vertex array.
            </summary>
      <param name="colors">Array of colors.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.UpdateWireframeColors(System.Int32[])">
      <summary>
            Update mesh wireframe colors. The color order must be identical with <see cref="E:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.GeometryConstructed" /> event vertex array.
            </summary>
      <param name="colors">Array of colors.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Wireframe">
      <summary>
            Render as wireframe. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.WireframeLineColor">
      <summary>
            Wireframe color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.WireframeLineColorProperty">
      <summary>
            Identifies the WireframeLineColor dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.WireframeProperty">
      <summary>
            Identifies the Wireframe dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.Visible">
      <summary>
            Gets or sets if model is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.XAxisBinding">
      <summary>
            Gets or sets X axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.YAxisBinding">
      <summary>
            Gets or sets Y axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ZAxisBinding">
      <summary>
            Gets or sets Z axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode">
      <summary>
            Return value of various Create() methods.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.OK">
      <summary>
            Success.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.NoVertices">
      <summary>
            No vertexes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.NormalCountMismatchVertexCount">
      <summary>
            Normal count does not match vertex count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.TextureCoordinateCountMismatchVertexCount">
      <summary>
            Texture coordinate count does not match vertex count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.ColorCountMismatchVertexCount">
      <summary>
            Color count does not match vertex count.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.NoColors">
      <summary>
            No colors.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.CreateReturnCode.NormalCountMismatchColorCount">
      <summary>
            Normal and color count do not match.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.GeometryConstructedEventHandler">
      <summary>
            The delegate to use for handlers that receive the GeometryConstructed event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the GeometryConstructed event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModel.TriangleTracedEventHandler">
      <summary>
            The delegate to use for handlers that receive the TriangleTraced event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the TriangleTraced event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelCollection">
      <summary>
            Represents a collection of MeshModell objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs">
      <summary>
            Represents a class that provides arguments for the TriangleTracedEventArgs event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of MouseTraceTriangleChanged class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.IntersectionPointAxisValues">
      <summary>
            Axis values of traced triangle intersection point.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.MeshModel">
      <summary>
            MeshModel object.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.ModelSpaceTriangleCoordinates">
      <summary>
            Model spaced coordinates of traced triangle.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.NearestCoordinateIndex">
      <summary>
            Index to nearest coordinate of traced triangle. Value is in range 0..2.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.MeshModelTriangleTracedEventArgs.WorldSpaceTriangleCoordinates">
      <summary>
            World spaced coordinates of traced triangle. Position, sizing and rotation affect this value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D">
      <summary>
            Orientation Arrows 3D Options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.#ctor">
      <summary>
            Constructor, for serialization purposes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ArrowLength">
      <summary>
            Orientation Arrow's length in screen pixels, maximum projection. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ArrowLengthProperty">
      <summary>
            Identifies the ArrowLength dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ArrowWidth">
      <summary>
            Orientation Arrow's width in screen pixels. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ArrowWidthProperty">
      <summary>
            Identifies the ArrowWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowX">
      <summary>
            Gets or sets x-axis orientation arrow color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowXProperty">
      <summary>
            Identifies the ColorArrowX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowY">
      <summary>
            Gets or sets y-axis orientation arrow color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowYProperty">
      <summary>
            Identifies the ColorArrowY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowZ">
      <summary>
            Gets or sets z-axis orientation arrow color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ColorArrowZProperty">
      <summary>
            Identifies the ColorArrowZ dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.Visible">
      <summary>
            Gets or sets if orientation arrows visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.OrientationArrowsOptions3D.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D">
      <summary>
            Point style in 3D
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.#ctor">
      <summary>
            Constructor 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.DetailLevel">
      <summary>
            Gets or sets detail level effecting some shape styles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.DetailLevelProperty">
      <summary>
            Identifies the DetailLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Rotation3D">
      <summary>
            Gets or sets rotating angles of 3D shape, in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Rotation3DProperty">
      <summary>
            Identifies the Rotation3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Shape2D">
      <summary>
            Shape type for 2D type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Shape2DProperty">
      <summary>
            Identifies the Shape2DProperty dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Shape3D">
      <summary>
            Gets or sets shape. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Shape3DProperty">
      <summary>
            Identifies the Shape dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.ShapeType">
      <summary>
            Shape type.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.ShapeTypeProperty">
      <summary>
            Identifies the ShapeTypeProperty dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Size3D">
      <summary>
            Gets or sets point size, for 3D shape. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.Size3DProperty">
      <summary>
            Identifies the Size3D dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyle3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D">
      <summary>
            Basic point style in 3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.#ctor">
      <summary>
            Constructor 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D)">
      <summary>
            Comparison method to check if given instance refers to this.
            </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(System.Object)">
      <summary>
            Comparison method to check if given instance refers to this.
            </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CompareTo(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.DetailLevel">
      <summary>
            Gets or sets detail level effecting some shape styles. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.DetailLevelProperty">
      <summary>
            Identifies the DetailLevel dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.Rotation3D">
      <summary>
            Gets or sets rotating angles of 3D shape, in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.Rotation3DProperty">
      <summary>
            Identifies the Rotation3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.Shape3D">
      <summary>
            Gets or sets shape. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.ShapeProperty">
      <summary>
            Identifies the Shape dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.Size3D">
      <summary>
            Gets or sets point size, for 3D shape. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.SizeProperty">
      <summary>
            Identifies the Size3D dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.PointStyleBasic3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D">
      <summary>
            Polygon in 3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis binding.</param>
      <param name="yAxis">Y-axis binding.</param>
      <param name="zAxis">Z-axis binding.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Clear">
      <summary>
            Clears the Points array.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.CursorTrackEnabled">
      <summary>
            Cursor tracking enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.CursorTrackEnabledProperty">
      <summary>
            Identifies the CursorTrackEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over polygon.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y  coordinate</param>
      <param name="useDIP">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useDIP</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Material">
      <summary>
            Gets or sets material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Points">
      <summary>
            Gets or sets series points. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.PointsProperty">
      <summary>
            Identifies the Points dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Rotation">
      <summary>
            Gets or sets rotation of polygon. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.RotationProperty">
      <summary>
            Identifies the Rotation dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.ToString">
      <summary>
            Object as string.
            </summary>
      <returns>Object as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.Visible">
      <summary>
            Gets or sets if polygon is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.XAxisBinding">
      <summary>
            Gets or sets X axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YAxisBinding">
      <summary>
            Gets or sets Y axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YMax">
      <summary>
            Gets or sets YMax. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YMaxProperty">
      <summary>
            Identifies the YMax dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YMin">
      <summary>
            Gets or sets YMin. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.YMinProperty">
      <summary>
            Identifies the YMin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.ZAxisBinding">
      <summary>
            Gets or sets Z axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3D.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3DCollection">
      <summary>
            Represents a collection of Polygon3D objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Polygon3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D">
      <summary>
            Rectangle in 3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis binding.</param>
      <param name="yAxis">Y-axis binding.</param>
      <param name="zAxis">Z-axis binding.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Center">
      <summary>
            Gets or sets center of rectangle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.CenterProperty">
      <summary>
            Identifies the Center dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Construct">
      <summary>
            Create member.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Fill">
      <summary>
            Gets or sets rectangle fill. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.FreeDrawData">
      <summary>
            Free DrawData.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is Mouse Over.
            </summary>
      <param name="x">Mouse X-coordinate.</param>
      <param name="y">Mouse Y-coordinate.</param>
      <param name="useDIP">Use DIP.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.IsPositionOver(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Rotation">
      <summary>
            Gets or sets rotation of rectangle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.RotationProperty">
      <summary>
            Identifies the Rotation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Size">
      <summary>
            Gets or sets rectangle size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.ToString">
      <summary>
            Object as string.
            </summary>
      <returns>Object as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.Visible">
      <summary>
            Gets or sets if rectangle is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.XAxisBinding">
      <summary>
            Gets or sets X axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.YAxisBinding">
      <summary>
            Gets or sets Y axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.ZAxisBinding">
      <summary>
            Gets or sets Z axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3DCollection">
      <summary>
            Represents a collection of 3D Rectangles
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3DCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill">
      <summary>
            Rectangle3D visual properties.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.Rectangle3D)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.CreateMaterial">
      <summary>
            Create material.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.Image">
      <summary>
            Gets or sets image object. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.ImageAlpha">
      <summary>
            Gets or sets image alpha. 0 is transparent, 255 fully visible (opaque). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.ImageAlphaProperty">
      <summary>
            Identifies the ImageAlpha dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.ImageProperty">
      <summary>
            Identifies the Image dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.Layout">
      <summary>
            Gets or sets fill layout. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.LayoutProperty">
      <summary>
            Identifies the Layout dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.Material">
      <summary>
            Gets or sets series material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.TileCountHeight">
      <summary>
            Gets or sets tile count on height dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.TileCountHeightProperty">
      <summary>
            Identifies the TileCountHeight dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.TileCountWidth">
      <summary>
            Gets or sets tile count on width dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.TileCountWidthProperty">
      <summary>
            Identifies the TileCountWidth dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.ToString">
      <summary>
            Convert class description to string
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.UseImage">
      <summary>
            Gets or sets use Image when drawing. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.RectangleFill.UseImageProperty">
      <summary>
            Identifies the UseImage dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.SeriesTitleUserInteractiveDeviceMovedEventArgs">
      <summary>
            Represents a class that provides arguments for the SeriesTitleUserInteractiveDeviceMoved event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.SeriesTitleUserInteractiveDeviceMovedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SeriesTitleUserInteractiveDeviceMoved class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.SeriesTitleUserInteractiveDeviceMovedEventArgs.Series">
      <summary>SeriesTitleMoved
            The series over which the user interactive device was moved in or out.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions">
      <summary>
            User interaction based rotation snapping options for View3D and especially Camera3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.#ctor">
      <summary>
            Simple constructor for Form designer's list editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.Dispose(System.Boolean)">
      <summary>
            Disposes the object
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.m_bDefaultSnapEnabled">
      <summary>
            Snap enabled
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.m_dDefaultSnapTolerance">
      <summary>
            Snap Tolerance
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.m_eDefaultEnabledVertAngles">
      <summary>
            Snap angle
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapEnabled">
      <summary>
             Defines if the snapping is enabled or not.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapEnabledProperty">
      <summary>
             Defines if the snapping is enabled or not.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapTolerance">
      <summary>
             Angle as degrees that the view direction can be away from the 
             defined snap angle for the snapping to happen. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapToleranceProperty">
      <summary>
             Angle as degrees that the view direction can be away from the 
             defined snap angle for the snapping to happen. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapToVertAngle0">
      <summary>
             Snap to vertical plane of angle 0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapToVertAngle0Property">
      <summary>
             Snap to vertical plane of angle 0.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapToVertAngle45">
      <summary>
             Snap to vertical plane of angle 45.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapToVertAngle45Property">
      <summary>
             Snap to vertical plane of angle 45.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapAngles">
      <summary>
            Enum of possible angles to control through interface. 
            These can be converted to angles using GetAngle() method.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapAngles.none">
      <summary>
            No angle
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapAngles.a0">
      <summary>
            Zero angle
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.UserInteractionRotateSnappingOptions.SnapAngles.a45">
      <summary>
            45 degree angle
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase">
      <summary>
            Wall base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">Owner of wall</param>
      <param name="type">Wall type</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.AutoHide">
      <summary>
            Gets or sets if hides the wall if it gets between the camera and chart contents. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.AutoHideProperty">
      <summary>
            Identifies the AutoHide dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.Construct">
      <summary>
            Create members.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.FullTransparent">
      <summary>
            Gets or sets if the wall is FullTransparent or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.FullTransparentProperty">
      <summary>
            Identifies the FullTransparency dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.GetGridStripColor1">
      <summary>
            Get grid strip color for first dimension
            </summary>
      <returns>Grid strip color</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.GetGridStripColor2">
      <summary>
            Get grid strip color for second dimension
            </summary>
      <returns>Grid strip color</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.GetWallType">
      <summary>
            Get wall type
            </summary>
      <returns>Wall type</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over wall.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over series. Else false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.m_cfMajorGridShiftTowardsCamera">
      <summary>
            Major grid shift towards camera.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.m_cfMinorGridShiftTowardsCamera">
      <summary>
            Minor grid shift towards camera.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.Material">
      <summary>
            Gets or sets wall material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.SetGridStripColor1(System.Windows.Media.Color)">
      <summary>
            Set grid strip color for first dimension
            </summary>
      <param name="color">Color</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.SetGridStripColor2(System.Windows.Media.Color)">
      <summary>
            Set grid strip color for second dimension
            </summary>
      <param name="color">Color</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.Thickness">
      <summary>
            Gets or sets thickness of the wall. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.ThicknessProperty">
      <summary>
            Identifies the Thickness dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.UpdateCustomTickIndex(System.Int32[],System.Int32@,System.Double,System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick})">
      <summary>
            Update Custom Tick
            </summary>
      <param name="aCatDimIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aCatDimIndex</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.UpdateCustomTickIndex(System.Int32[],System.Int32@,System.Double,System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick})</parameter>
          </include>
        </markup>
      </param>
      <param name="catIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>catIndex</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.UpdateCustomTickIndex(System.Int32[],System.Int32@,System.Double,System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick})</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.UpdateCustomTickIndex(System.Int32[],System.Int32@,System.Double,System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick})</parameter>
          </include>
        </markup>
      </param>
      <param name="list">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.UpdateCustomTickIndex(System.Int32[],System.Int32@,System.Double,System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Axes.CustomAxisTick})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.Visible">
      <summary>
            Gets or sets if the wall is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallBase.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY">
      <summary>
            XY plane wall.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="type">Wall type.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStripColorX">
      <summary>
            Gets or sets grid strip color for X dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStripColorXProperty">
      <summary>
            Identifies the GridStripColorX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStripColorY">
      <summary>
            Gets or sets grid strip color for Y dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStripColorYProperty">
      <summary>
            Identifies the GridStripColorY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStrips">
      <summary>
            Gets or sets grid color strips. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.GridStripsProperty">
      <summary>
            Identifies the GridStrips dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.XGridAxis">
      <summary>
            Gets or sets source axis for X grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.XGridAxisProperty">
      <summary>
            Identifies the XGridAxis dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.YGridAxis">
      <summary>
            Gets or sets source axis for Y grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXY.YGridAxisProperty">
      <summary>
            Identifies the YGridAxis dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ">
      <summary>
            XZ plane wall.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="type">Wall type.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStripColorX">
      <summary>
            Gets or sets grid strip color for X dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStripColorXProperty">
      <summary>
            Identifies the GridStripColorX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStripColorZ">
      <summary>
            Gets or sets grid strip color for Z dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStripColorZProperty">
      <summary>
            Identifies the GridStripColorZ dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStrips">
      <summary>
            Gets or sets grid color strips. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.GridStripsProperty">
      <summary>
            Identifies the GridStrips dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.XGridAxis">
      <summary>
            Gets or sets source axis for X grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.XGridAxisProperty">
      <summary>
            Identifies the XGridAxis dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.ZGridAxis">
      <summary>
            Gets or sets source axis for Z grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallXZ.ZGridAxisProperty">
      <summary>
            Identifies the ZGridAxis dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ">
      <summary>
            YZ plane wall
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)</parameter>
          </include>
        </markup>
      </param>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.#ctor(Arction.Wpf.ChartingMVVM.IChartNode,Arction.Wpf.ChartingMVVM.WallType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStripColorY">
      <summary>
            Gets or sets grid strip color for Y dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStripColorYProperty">
      <summary>
            Identifies the GridStripColorY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStripColorZ">
      <summary>
            Gets or sets grid strip color for Z dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStripColorZProperty">
      <summary>
            Identifies the GridStripColorZ dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStrips">
      <summary>
            Gets or sets grid color strips. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.GridStripsProperty">
      <summary>
            Identifies the GridStrips dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.YGridAxis">
      <summary>
            Gets or sets source axis for Y grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.YGridAxisProperty">
      <summary>
            Identifies the YGridAxis dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.ZGridAxis">
      <summary>
            Gets or sets source axis for Z grid. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.WallYZ.ZGridAxisProperty">
      <summary>
            Identifies the ZGridAxis dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.View3D">
      <summary>
            3D view class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Annotations">
      <summary>
            Gets or sets list of annotations. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.AnnotationsProperty">
      <summary>
            Identifies the Annotations dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.BarSeries3D">
      <summary>
            Gets or sets BarSeries list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.BarSeries3DProperty">
      <summary>
            Identifies the BarSeries3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.BarViewOptions">
      <summary>
            Gets or sets bar view options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.BarViewOptionsProperty">
      <summary>
            Identifies the BarViewOptions dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.CameraViewChanged">
      <summary>
            Camera viewpoint has changed.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ClipContents">
      <summary>
            Gets or sets if clip series and Meshmodel inside space limited axis ranges. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ClipContentsProperty">
      <summary>
            Identifies the ClipContents dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Convert3DWorldCoordsToScreenCoords(Arction.Wpf.ChartingMVVM.CoordXYZ[])">
      <summary>
            Convert 3D world coordinates into screen coordinates.
            </summary>
      <param name="coordsW">3D world coordinates.</param>
      <returns>Screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Convert3DWorldCoordToSeriesValue(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,System.Double,System.Double,System.Double)">
      <summary>
            Converts 3D world space coordinate to series value, using the axes bound to the series.
            </summary>
      <param name="series">Series</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <returns>Series value</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsTo3DWorldCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPoint3D[])">
      <summary>
            Converts series points to 3D world space coordinates, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="points">Points to convert.</param>
      <returns>3D world space coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsTo3DWorldCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPointCompact3D[])">
      <summary>
            Converts series points to 3D world space coordinates, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="points">Array of SeriesPointCompact3D to convert.</param>
      <returns>3D world space coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsTo3DWorldCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D[])">
      <summary>
            Converts series points to 3D world space coordinates, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="points">Array of SeriesPointCompactColored3D to convert.</param>
      <returns>3D world space coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsToScreenCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPoint3D[])">
      <summary>
            Converts series points to screen coordinates, using the axes bound to the series.
            </summary>
      <param name="series">3D series.</param>
      <param name="points">Array of SeriesPoint3D to convert.</param>
      <returns>Array of screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsToScreenCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPointCompact3D[])">
      <summary>
            Converts compact series points to screen coordinates, using the axes bound to the series.
            </summary>
      <param name="series">3D series.</param>
      <param name="points">Array of SeriesPointCompact3D to convert.</param>
      <returns>Array of screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesPointsToScreenCoords(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,Arction.Wpf.ChartingMVVM.SeriesPointCompactColored3D[])">
      <summary>
            Converts compact colored series points to screen coordinates, using the axes bound to the series.
            </summary>
      <param name="series">3D series.</param>
      <param name="points">Array of SeriesPointCompactColored3D to convert.</param>
      <returns>Array of screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesValueRangesTo3DWorldRanges(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,System.Double,System.Double,System.Double)">
      <summary>
            Converts series value range to 3D world space range, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="xValueRange">X-range.</param>
      <param name="yValueRange">Y-range.</param>
      <param name="zValueRange">Z-range.</param>
      <returns>3D world space ranges.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesValueTo3DWorldCoord(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,System.Double,System.Double,System.Double)">
      <summary>
            Converts series value to 3D world space coordinate, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="x">X-value.</param>
      <param name="y">Y-value.</param>
      <param name="z">Z-value.</param>
      <returns>3D world space coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ConvertSeriesValueToScreenCoord(Arction.Wpf.ChartingMVVM.Series3D.SeriesBase3D,System.Double,System.Double,System.Double)">
      <summary>
            Converts series value to screen coordinate, using the axes bound to the series.
            </summary>
      <param name="series">Series.</param>
      <param name="x">X-value.</param>
      <param name="y">Y-value.</param>
      <param name="z">Z-value.</param>
      <returns>Screen coordinate.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been clicked.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse button has been clicked down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse button has been released.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DimensionsChanged">
      <summary>
            3D world dimensions have changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.FrameBox">
      <summary>
            Framebox that shows the graph area, in extension to walls.
            This is a DependencyProperty.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.FrameBoxProperty">
      <summary>
            Identifies the FrameBox property. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Get3DSeriesOfAxis(Arction.Wpf.ChartingMVVM.Axes.Axis3DBase)">
      <summary>
            Get list of series having this axis bound as X-, Y- or Z-axis, primary or secondary.
            </summary>
      <param name="axis">3D axis.</param>
      <returns>List of series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.GetAll3DSeries">
      <summary>
            Get all 3D series.
            </summary>
      <returns>List of 3D series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.GetAll3DSurfaceSeries">
      <summary>
            Get all 3D surface series. 
            </summary>
      <returns>List of 3D surface series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.GetAllBut3DSurfaceSeries">
      <summary>
            Get all 3D but surface series.
            </summary>
      <returns>List of all 3D but surface series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.GetAxes">
      <summary>
            Get list of axes. 
            </summary>
      <returns>List of axes.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.GetWalls">
      <summary>
            Get list of walls.
            </summary>
      <returns>List of walls.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle mouse down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.HandleMarginsChanged">
      <summary>
            Handler gets Graph segment information
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.IsPositionOverGraphArea(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Finds out if the given position is over graph area.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="useDIP">Use DIP for input point.</param>
      <returns>True if is over</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.LegendBox">
      <summary>
            Gets or sets legend box for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.LegendBoxProperty">
      <summary>
            Identifies the LegendBox dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Lights">
      <summary>
            Gets or sets the list of lights. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.LightsProperty">
      <summary>
            Identifies the Lights dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.MakeBoxBordersDrawData(Arction.RenderingDefinitions.RectFloat3D,System.Int32)">
      <summary>
            Generates DrawData for axis aligned framebox of a given 3D rectangle (somebody would call it box or cube). 
            </summary>
      <param name="rect">Rectangle to draw the box of.</param>
      <param name="color">Color to use with the lines.</param>
      <returns>DrawData of the edges of the box drawn using given color and AntiAliased hairline.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.MeshModels">
      <summary>
            Gets or sets MeshModel list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.MeshModelsProperty">
      <summary>
            Identifies the MeshModels dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.MovePoint(Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.PointDouble3D,Arction.Wpf.ChartingMVVM.PointFloatXY,Arction.Wpf.ChartingMVVM.MovementDimension,System.Boolean)">
      <summary>
            Move 3D point to screen coordinate on directions based on the basis.
            </summary>
      <param name="axisBinding">Tell which axises to use for moving: Primary or Secondary.</param>
      <param name="startPoint">Point with axis values.</param>
      <param name="destinationScreenCoordinate">Point in screen coordinates to which direction startPoint will be moved.</param>
      <param name="dimension">Tells dimension on which to move the point.</param>
      <param name="useDIP">Use DIPs as coordinates.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.MovePoint(Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.PointDouble3D,Arction.Wpf.ChartingMVVM.PointFloatXY,Arction.Wpf.ChartingMVVM.MovementDimension,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.OrientationArrows">
      <summary>
            Gets or sets orientation arrows options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.OrientationArrowsProperty">
      <summary>
            Identifies the OrientationArrows dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.PointLineSeries3D">
      <summary>
            Gets or sets PointLineSeries list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.PointLineSeries3DProperty">
      <summary>
            Identifies the PointLineSeries3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Polygons">
      <summary>
            Gets or sets list of polygons. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.PolygonsProperty">
      <summary>
            Identifies the Polygons dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)">
      <summary>
            Position over Graph.
            </summary>
      <param name="coord">Position</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.RaiseCameraViewChangedEvent">
      <summary>
            Raise camera view changed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.RaiseDimensionsChangedEvent">
      <summary>
            Raise dimension changed event.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.Rectangles">
      <summary>
            Gets or sets Rectangle3D list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.RectanglesProperty">
      <summary>
            Identifies the Rectangles dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.SortingDirty">
      <summary>
             Virtual method that is called when walls sorting becomes dirty. 
             Before this the sorting dirtiness was kept  (and still is) using m_bSortingDirty.
             We need to know when the sorting becomes dirty so that we can mark the FrameBox dirty, 
             as there is little point doing the check on every frame.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.SurfaceGridSeries3D">
      <summary>
            Gets or sets SurfaceGridSeries list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.SurfaceGridSeries3DProperty">
      <summary>
            Identifies the SurfaceGridSeries3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.SurfaceMeshSeries3D">
      <summary>
            Gets or sets SurfaceMeshSeries list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.SurfaceMeshSeries3DProperty">
      <summary>
            Identifies the SurfaceMeshSeries3D dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnBack">
      <summary>
            Gets or sets back wall. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnBackProperty">
      <summary>
            Identifies the WallOnBack dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnBottom">
      <summary>
            Gets or sets bottom wall (floor). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnBottomProperty">
      <summary>
            Identifies the WallOnBottom dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnFront">
      <summary>
            Gets or sets front wall. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnFrontProperty">
      <summary>
            Identifies the WallOnFront dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnLeft">
      <summary>
            Gets or sets left wall. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnLeftProperty">
      <summary>
            Identifies the WallOnLeft dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnRight">
      <summary>
            Gets or sets right wall. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnRightProperty">
      <summary>
            Identifies the WallOnRight dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnTop">
      <summary>
            Gets or sets top wall (ceiling). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WallOnTopProperty">
      <summary>
            Identifies the WallOnTop dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WaterfallSeries3D">
      <summary>
            Gets or sets WaterfallSeries list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WaterfallSeries3DProperty">
      <summary>
            Identifies the WaterfallSeries3D dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Wheel scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.VolumeModels">
      <summary>
            Gets or sets VolumeModel list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.VolumeModelsProperty">
      <summary>
            Identifies the VolumeModels dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.XAxisPrimary3D">
      <summary>
            Gets or sets primary X axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.XAxisPrimary3DProperty">
      <summary>
            Identifies the XAxisPrimary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.XAxisSecondary3D">
      <summary>
            Gets or sets secondary X axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.XAxisSecondary3DProperty">
      <summary>
            Identifies the XAxisSecondary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.YAxisPrimary3D">
      <summary>
            Gets or sets primary Y axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.YAxisPrimary3DProperty">
      <summary>
            Identifies the YAxisPrimary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.YAxisSecondary3D">
      <summary>
            Gets or sets secondary Y axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.YAxisSecondary3DProperty">
      <summary>
            Identifies the YAxisSecondary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZAxisPrimary3D">
      <summary>
            Gets or sets primary Z axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZAxisPrimary3DProperty">
      <summary>
            Identifies the ZAxisPrimary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZAxisSecondary3D">
      <summary>
            Gets or sets secondary Z axis for 3D view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZAxisSecondary3DProperty">
      <summary>
            Identifies the ZAxisSecondary3D dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZoomPanOptions">
      <summary>
            Gets or sets zoom, pan and rotation options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.ZoomPanOptionsProperty">
      <summary>
            Identifies the ZoomPanOptions dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.CameraViewChangedHandler">
      <summary>
            Delegate for CameraViewChanged event.
            </summary>
      <param name="newCameraViewPoint">New camera view point.</param>
      <param name="view">View containing the camera.</param>
      <param name="chart">Chart where the error occurred.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.View3D.DimensionsChangedHandler">
      <summary>
            Delegate for DimensionsChanged event.
            </summary>
      <param name="newWidth">New width.</param>
      <param name="newHeight">New height.</param>
      <param name="newDepth">New depth.</param>
      <param name="view">View3D containing the camera.</param>
      <param name="chart">Chart where the error occurred.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase">
      <summary>
            3D view base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.AdjustSelectedAnnotationTargetZ(System.Int32)">
      <summary>
            Adjust selected annotation target z value.
            </summary>
      <param name="zChange">z change</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.AutoSizeMargins">
      <summary>
            Automatically size margins based on LegendBox position and size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.AutoSizeMarginsProperty">
      <summary>
            Identifies the dependency property for automatically sizing margins of the chart.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Border">
      <summary>
            Gets or sets Border of the 3D chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CalcMarginEffects">
      <summary>
             re-calculates the margin area and drawcenter, marks
             all affected to dirty.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Camera">
      <summary>
            Gets or sets camera (point of view). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CameraProperty">
      <summary>
            Identifies the Camera dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Convert3DWorldCoordToScreenCoord(System.Double,System.Double,System.Double)">
      <summary>
            Convert a 3D point to screen coordinate.
            </summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="z">Z-coordinate.</param>
      <returns>Point in screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CreateCamera">
      <summary>
            Create camera.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CreateDefaultLights">
      <summary>
            Create default lights.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CreateDefaultLights</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.CreateDimensions">
      <summary>
            Create dimensions.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been double clicked.
            For double click the behavior is almost similar to single click, only raised event differs.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DeviceButtonDoubleClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Dimensions">
      <summary>
            Gets or sets dimensions (size) of the 3D chart view. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.DimensionsProperty">
      <summary>
            Identifies the Dimensions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.GetPanSensitivity">
      <summary>
            Get Pan Sensitivity
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.GetPanSensitivity</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.GetRotationSensitivity">
      <summary>
            Get Rotation Sensitivity set as public property. 
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.GetRotationSensitivity</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.GetZoomPadding">
      <summary>
             Getter of the ZoomPadding, supported by Round and 3D Views
             ZoomPanOptions. 
            </summary>
      <returns>ZoomPadding of the given view, if supported. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.LightsListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>
            Lights list changed
            </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.LightsListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.LightsListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.m_dCamRotationXOnStart">
      <summary>
            Camera rotation on X axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.m_dCamRotationYOnStart">
      <summary>
            Camera rotation on Y axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.m_dCamRotationZOnStart">
      <summary>
            Camera rotation on Z axis.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.m_vPanZoomStartCamLocation">
      <summary>
            Panning and zooming start camera location.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.m_vPanZoomStartCamTarget">
      <summary>
            Panning and zooming start camera target.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Point3DToCoordW(System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase)">
      <summary>
            Convert 3D point coordinates to world coordinates.
            </summary>
      <param name="x">X-value.</param>
      <param name="y">Y-value.</param>
      <param name="z">Z-value.</param>
      <param name="xAxis">X-axis.</param>
      <param name="yAxis">Y-axis.</param>
      <param name="zAxis">Z-axis.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.Point3DToCoordW(System.Double,System.Double,System.Double,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase,Arction.Wpf.ChartingMVVM.Axes.Axis3DBase)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)">
      <summary>
            Check is position is over graph.
            </summary>
      <param name="coord">Position</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.RaiseCameraViewChangedEvent">
      <summary>
            Raise camera view changed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.RaiseDimensionsChangedEvent">
      <summary>
            Raise dimension changed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.SetPredefinedLightingScheme(Arction.Wpf.ChartingMVVM.LightingScheme)">
      <summary>
            Set a predefined lighting scheme.
            </summary>
      <param name="scheme">Lighting scheme.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.SetPredefinedLightingSchemeWithoutRefresh(Arction.Wpf.ChartingMVVM.LightingScheme)">
      <summary>
            Set predefined lighting scheme without refresh.
            </summary>
      <param name="scheme">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scheme</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.SetPredefinedLightingSchemeWithoutRefresh(Arction.Wpf.ChartingMVVM.LightingScheme)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.SortingDirty">
      <summary>
            Sorting Dirty
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse wheel scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.ZoomToFit(Arction.Wpf.ChartingMVVM.ZoomArea3D)">
      <summary>
             Zooms the view so that the data is visible at maximum possible size.
             <para>
            Area is either the full drawing area inside <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewBase.Margins" /> 
            or area which is further limited by <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPadding" />, depending 
            on case. For more information, see options at <see cref="T:Arction.Wpf.ChartingMVVM.ZoomArea3D" />.
            </para></summary>
      <param name="area">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>area</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase.ZoomToFit(Arction.Wpf.ChartingMVVM.ZoomArea3D)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel">
      <summary>
            Volume model.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart,System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
      <param name="data">Texture map.</param>
      <param name="width">Texture map width.</param>
      <param name="height">Texture map height.</param>
      <param name="slicesAmount">Amount of slices.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart,System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
      <param name="folderPath">Path to the folder with slices.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart,System.String,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
      <param name="filePath">Path to the texture map.</param>
      <param name="amountOfSlices">Amount of slices on texture map.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart,System.Windows.Media.Imaging.BitmapFrame,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
      <param name="img">Texture map.</param>
      <param name="amountOfSlices">Amount of slices on texture map.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.LightningChart,System.Windows.Media.Imaging.BitmapFrame[])">
      <summary>
            Constructor.
            </summary>
      <param name="chart">Parent.</param>
      <param name="imgs">An array of slices.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D)">
      <summary>
            Constructor. Use primary axis for axis binding.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3D,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding,Arction.Wpf.ChartingMVVM.Axis3DBinding)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="xAxis">X-axis binding.</param>
      <param name="yAxis">Y-axis binding.</param>
      <param name="zAxis">Z-axis binding.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="folderPath">Path to the folder with slices.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.#ctor(System.String,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="filePath">Path to the texture map.</param>
      <param name="AmountOfSlices">Amount of slices on texture map.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Brightness">
      <summary>
            Brightness option of the transfer function
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.BrightnessProperty">
      <summary>
            Identifies the Brightness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ClipColorRange">
      <summary>
            Enables color clipping ability
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ClipColorRangeProperty">
      <summary>
            Enables Color clipping ability
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ColorRangeToClip">
      <summary>
            Color clip settings, to cut away range of colors
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ColorRangeToClipProperty">
      <summary>
            Identifies the Color clipping range
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Construct">
      <summary>
            Construct object.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Darkness">
      <summary>
            Darkness option of the transfer function
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.DarknessProperty">
      <summary>
            Identifies the Darkness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Data">
      <summary>
            Gets or sets BitmapFrameCollection. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.EmptySpaceSkipping">
      <summary>
            Sampling rate for empty space skipping settings. Low level increases performance, but can reveal some artifacts.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.EmptySpaceSkippingProperty">
      <summary>
            Identifies the EmptySpaceSkipping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.IsPositionOver(System.Int32,System.Int32)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.LoadFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
             Receive a texture map as byte array and assigns it to the volume data.
            </summary>
      <param name="data">Slice map data.</param>
      <param name="width">Slice map width.</param>
      <param name="height">Slice map height.</param>
      <param name="slicesAmount">Amount of slices in the slice map.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.LoadFromSliceMap(System.String,System.Int32)">
      <summary>
            Receive a texture map and set assigns it to the volume data.
            </summary>
      <param name="filePath">Path to the texture map.</param>
      <param name="amountOfSlices">Amount of slices per side.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.LoadFromSliceMap(System.Windows.Media.Imaging.BitmapFrame,System.Int32)">
      <summary>
            Receive a texture map and assigns it to the volume data.
            </summary>
      <param name="img">Texture map.</param>
      <param name="AmountOfSlices">Amount of slices on texture map.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.LoadFromSlices(System.String)">
      <summary>
            Receive an array of slices and assign it to the volume data.
            </summary>
      <param name="folderPath">Path to the folder with slices.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.LoadFromSlices(System.Windows.Media.Imaging.BitmapFrame[])">
      <summary>
            Receive an array of slices and assign it to the volume data.
            </summary>
      <param name="imgs">An array of slices.</param>
      <returns>True, if can load data, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Opacity">
      <summary>
            Opacity for semi-transparent volume rendering functions
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.OpacityProperty">
      <summary>
            Identifies the Opacity dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Position">
      <summary>
            Gets or sets position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.RayFunction">
      <summary>
            Enum specifies Ray Function, which is used to render the model.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.RayFunctionProperty">
      <summary>
            Identifies the RayFunction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Rotation">
      <summary>
            Gets or sets rotating angles, in degrees. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.RotationProperty">
      <summary>
            Identifies the Rotation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SamplingRateOptions">
      <summary>
            Set of setting for Sampling Rate Manager
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SamplingRateOptionsProperty">
      <summary>
            Identifies the SamplingRateOptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SetChart(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Set Chart.
            </summary>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SetChart(Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Size">
      <summary>
            Gets or sets size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SliceRange">
      <summary>
            Slice Range settings per every dimension
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SliceRangeProperty">
      <summary>
            Identifies the SliceRange dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Smoothness">
      <summary>
            Smoothness factor for Iso-Surface rendering 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.SmoothnessProperty">
      <summary>
            Identifies the Smoothness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Threshold">
      <summary>
            Threshold settings, to cut away unaccepted part of the model
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ThresholdProperty">
      <summary>
            Identifies the Threshold dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.Visible">
      <summary>
            Gets or sets if model is visible. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.XAxisBinding">
      <summary>
            Gets or sets X axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.XAxisBindingProperty">
      <summary>
            Identifies the XAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.YAxisBinding">
      <summary>
            Gets or sets Y axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.YAxisBindingProperty">
      <summary>
            Identifies the YAxisBinding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ZAxisBinding">
      <summary>
            Gets or sets Z axis binding. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModel.ZAxisBindingProperty">
      <summary>
            Identifies the ZAxisBinding dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModelCollection">
      <summary>
            Represents a collection of VolumeModel objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.VolumeModelCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D">
      <summary>
            Zoom, pan and rotation options for View3D.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.AutoFit">
      <summary>
            Gets or sets if auto fit axis ranges to added series data values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.AutoFitProperty">
      <summary>
            Identifies the AutoFit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.AxisWheelAction">
      <summary>
            Gets or sets wheel action on axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.AxisWheelActionProperty">
      <summary>
            Identifies the AxisWheelAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.BoxZoomingOutCrossVisible">
      <summary>
            Draw cross at zoom box front face when zooming out.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.BoxZoomingOutCrossVisibleProperty">
      <summary>
            Identifies the ZoomingOutCrossVisible dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.BoxZoomOutFactor">
      <summary>
            Zoom out factor. It's used when box-zooming out. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.BoxZoomOutFactorProperty">
      <summary>
            Identifies the BoxZoomOutFactor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DevicePrimaryButtonAction">
      <summary>
            Gets or sets user interactive device primary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DevicePrimaryButtonActionProperty">
      <summary>
            Identifies the DevicePrimaryButtonAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DeviceSecondaryButtonAction">
      <summary>
            Gets or sets user interactive device secondary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DeviceSecondaryButtonActionProperty">
      <summary>
            Identifies the DeviceSecondaryButtonAction dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DeviceTertiaryButtonActionProperty">
      <summary>
            Identifies the DeviceTertiaryButtonAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.DeviceTertiaryButtonButtonAction">
      <summary>
            Gets or sets user interactive device tertiary button action. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.GetAutoFitRange(Arction.Wpf.ChartingMVVM.PointDouble3D@,Arction.Wpf.ChartingMVVM.PointDouble3D@)">
      <summary>
            Get Auto-Fit range, two opposite corner points of drawing region as axis values.
            </summary>
      <param name="minimum">Minimum axis coordinates.</param>
      <param name="maximum">Maximum axis coordinates.</param>
      <returns>True, if range could be fetched, false otherwise.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.LimitBoxZoomInsideGraph">
      <summary>
            Limit box zooming inside graph.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.LimitBoxZoomInsideGraphProperty">
      <summary>
            Identifies the LimitZoomInsideGraph dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.MultiTouchSensitivity">
      <summary>
            Gets or sets touch sensitivity. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.MultiTouchSensitivityProperty">
      <summary>
            Identifies the MultiTouchSensitivity dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.RectangleZoomingThreshold">
      <summary>
            Gets or sets rectangle zooming threshold. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.RectangleZoomingThresholdProperty">
      <summary>
            Identifies the RectangleZoomingThreshold dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.RightToLeftZoomAction">
      <summary>
            Gets or sets right-to-left zoom action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.RightToLeftZoomActionProperty">
      <summary>
            Identifies the RightToLeftZoomAction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.WheelAreaThickness">
      <summary>
            Gets or sets wheel reactive axis thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.WheelAreaThicknessProperty">
      <summary>
            Identifies the WheelAreaThickness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomBoxColor">
      <summary>
            Gets or sets zoom box color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomBoxColorProperty">
      <summary>
            Identifies the ZoomBoxColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomInBoxLineStyle">
      <summary>
            Gets or sets zoom in box line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomInBoxLineStyleProperty">
      <summary>
            Identifies the LineStyleZoomIn dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomOutBoxLineStyle">
      <summary>
            Gets or sets zoom out box line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3D.ZoomOutBoxLineStyleProperty">
      <summary>
            Identifies the ZoomOutBoxLineStyle dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase">
      <summary>
            Zoom, pan and rotation options for 3D Views
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.#ctor(Arction.Wpf.ChartingMVVM.Views.View3D.View3DBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">View owner</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.AllowWheelZoom">
      <summary>
            Gets or sets if allow zoom in / out with user interactive device wheel. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.AllowWheelZoomProperty">
      <summary>
            Identifies the AllowWheelZoom dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.DevicePrimaryButtonDoubleClickAction">
      <summary>
            User interactive device primary button double click action. 
            <para>Determines what zoom / pan operation to do at double click of device primary button. </para><para>This is a dependency property</para></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.DevicePrimaryButtonDoubleClickActionProperty">
      <summary>
            Identifies the DevicePrimaryButtonDoubleClickAction dependency property.
            <para>For more information <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.DevicePrimaryButtonDoubleClickAction" /> property</para></summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.MultiTouchPanEnabled">
      <summary>
            Gets or sets if enable multitouch panning. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.MultiTouchPanEnabledProperty">
      <summary>
            Identifies the MultiTouchPanEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.MultiTouchZoomEnabled">
      <summary>
            Gets or sets if enable multitouch zooming. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.MultiTouchZoomEnabledProperty">
      <summary>
            Identifies the MultiTouchZoomEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.PanSensitivity">
      <summary>
            Gets or sets pan sensitivity. 1 = normal sensitivity. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.PanSensitivityProperty">
      <summary>
            Identifies the PanSensitivity dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.RotationSensitivity">
      <summary>
            Gets or sets rotation sensitivity. 1 = normal sensitivity. This is a dependency property.  
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.RotationSensitivityProperty">
      <summary>
            Identifies the RotationSensitivity dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.WheelZoomFactor">
      <summary>
            Gets or sets user interactive device wheel zoom factor. This is a dependency property. It's used when zooming with wheel (moving camera closer to 3D model center) in or out. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.WheelZoomFactorProperty">
      <summary>
            Identifies the WheelZoomFactor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPadding">
      <summary>
            Padding affecting zooming operations. The empty space left between the zoom area and the margins.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPaddingProperty">
      <summary>
            Identifies the <see cref="P:Arction.Wpf.ChartingMVVM.Views.View3D.ZoomPanOptions3DBase.ZoomPadding" /> dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.Annotation3DPieCollection">
      <summary>
            Represents a collection of Annotation3DPie objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.Annotation3DPieCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D">
      <summary>
            LegendBox for 3D pie.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.#ctor">
      <summary>
            Constructor for editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.SeriesTitleMouseMoveOverOff">
      <summary>
            Occurs when the mouse pointer moves out over the series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.SeriesTitleMouseMoveOverOn">
      <summary>
            Occurs when the mouse pointer moves in over the series title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.ToString">
      <summary>
            Item to string.
            </summary>
      <returns>Item as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.SeriesTitleMouseMoveOverOffEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOff event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOff event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.LegendBoxPie3D.SeriesTitleMouseMoveOverOnEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOn event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOn event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D">
      <summary>
            Material for 3D pie objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor 
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.AmbientColor">
      <summary>
            Gets or sets ambient color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.AmbientColorProperty">
      <summary>
            Identifies the AmbientColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.EmissiveColor">
      <summary>
            Gets or sets emissive color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.EmissiveColorProperty">
      <summary>
            Identifies the EmissiveColor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.SpecularColor">
      <summary>
            Gets or sets specular color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.SpecularColorProperty">
      <summary>
            Identifies the SpecularColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.SpecularPower">
      <summary>
            Gets or sets specular power. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.SpecularPowerProperty">
      <summary>
            Identifies the SpecularPower dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.MaterialPie3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice">
      <summary>
            Pie slice.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.#ctor(System.String,System.Windows.Media.Color,System.Double,Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="value">Value of the pie slice.</param>
      <param name="addToOwner">Add to owner view's Values list.</param>
      <param name="color">Color.</param>
      <param name="owner">Parent.</param>
      <param name="title">Title text.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.BlinkOnOver">
      <summary>
            Gets or sets if blinks the pie color when user interactive device is over it. This is a dependency property. If this is false, only simple highlight 
            will be shown. 		
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.BlinkOnOverProperty">
      <summary>
            Identifies the BlinkOnOver dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.Color">
      <summary>
            Gets or sets pie slice color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.Explode">
      <summary>
            Gets or sets if expand slice a bit further from center. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ExplodeProperty">
      <summary>
            Identifies the Explode dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.op_Implicit(Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject">
      <summary>
            Get item as LegendBoxMouseObject.
            </summary>
      <param name="s">related object</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.op_Implicit(Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice)~Arction.Wpf.ChartingMVVM.Views.LegendBoxObject</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ShowInLegendBox">
      <summary>
            Gets or sets if enlists the series title text in Legend box of the chart. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ShowInLegendBoxProperty">
      <summary>
            Identifies the ShowInLegendBox dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.Title">
      <summary>
            Gets or sets pie slice title. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.TitleAlignment">
      <summary>
            Gets or sets name alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.TitleAlignmentProperty">
      <summary>
            Identifies the TitleAlignment dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.TitleProperty">
      <summary>
            Identifies the SpecularPower dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.Value">
      <summary>
            Gets or sets pie slice value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSlice.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSliceCollection">
      <summary>
            Represents a collection of PieSlice objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.PieSliceCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.SeriesTitleDeviceMovedEventArgs">
      <summary>
            Represents a class that provides arguments for the SeriesTitleDeviceMoved event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.SeriesTitleDeviceMovedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SeriesTitleDeviceMovedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.SeriesTitleDeviceMovedEventArgs.Series">
      <summary>
            The series over which the mouse pointer was moved in or out.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D">
      <summary>
            3D pie view class
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Annotations">
      <summary>
            Gets or sets list of annotations. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.AnnotationsProperty">
      <summary>
            Identifies the Annotations dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.CameraViewChanged">
      <summary>
            Camera viewpoint has changed
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.CreateCamera">
      <summary>
            Create camera.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.CreateDimensions">
      <summary>
            Create dimensions.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button clicked.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button up.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Dimensions">
      <summary>
            Dimensions (size) of the 3D chart view
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DimensionsChanged">
      <summary>
            3D world dimensions have changed
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DonutInnerPercents">
      <summary>
            Gets or sets donut inner diameter, in percents. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DonutInnerPercentsProperty">
      <summary>
            Identifies the DonutInnerPercents dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ExplodePercents">
      <summary>
            Gets or sets explode percent. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ExplodePercentsProperty">
      <summary>
            Identifies the ExplodePercents dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.HandleMarginsChanged">
      <summary>
            Handler gets Graph segment information
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.LegendBox3DPie">
      <summary>
            Gets or sets pie legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.LegendBox3DPieProperty">
      <summary>
            Identifies the LegendBox3DPie dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.LightingScheme">
      <summary>
            Gets or sets lighting scheme. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.LightingSchemeProperty">
      <summary>
            Identifies the LightingScheme dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Material">
      <summary>
            Gets or sets pie material. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.MaterialProperty">
      <summary>
            Identifies the Material dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.RaiseCameraViewChangedEvent">
      <summary>
            Raise camera view changed event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.RaiseDimensionsChangedEvent">
      <summary>
            Raise dimension changed event.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Rounding">
      <summary>
            Gets or sets edge rounding percentage. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.RoundingProperty">
      <summary>
            Identifies the Rounding dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.SetPieSize(System.Single)">
      <summary>
            Set pie size.
            </summary>
      <param name="size">Size. Default is 150</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.StartAngle">
      <summary>
            Gets or sets pie first item start angle. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.StartAngleProperty">
      <summary>
            Identifies the StartAngle dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Style">
      <summary>
            Gets or sets 3D pie draw style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Thickness">
      <summary>
            Gets or sets pie thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ThicknessProperty">
      <summary>
            Identifies the Thickness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.TitlesNumberFormat">
      <summary>
            Gets or sets number formatting string used when a numeric titles style is selected. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.TitlesNumberFormatProperty">
      <summary>
            Identifies the TitlesNumberFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.TitlesStyle">
      <summary>
            Gets or sets titles style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.TitlesStyleProperty">
      <summary>
            Identifies the TitlesStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.Values">
      <summary>
            Gets or sets pie slice values. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ValuesProperty">
      <summary>
            Identifies the Values dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device wheel scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ZoomPanOptions">
      <summary>
            Gets or sets zoom, pan and rotation options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.ZoomPanOptionsProperty">
      <summary>
            Identifies the ZoomPanOptions dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.CameraViewChangedHandler">
      <summary>
            Delegate for CameraViewChanged event
            </summary>
      <param name="newCameraViewPoint">New camera view point</param>
      <param name="view">View containing the camera</param>
      <param name="chart">Chart where the error occurred</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D.DimensionsChangedHandler">
      <summary>
            Delegate for DimensionsChanged event
            </summary>
      <param name="newWidth">New width</param>
      <param name="newHeight">New height</param>
      <param name="newDepth">New depth</param>
      <param name="view">View3D containing the camera</param>
      <param name="chart">Chart where the error occurred</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D">
      <summary>
            Zoom, pan and rotation options for View3D
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.#ctor">
      <summary>   
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ViewPie3D)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.DevicePrimaryButtonAction">
      <summary>
            Gets or sets user device primary button action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.DevicePrimaryButtonActionProperty">
      <summary>
            Identifies the DevicePrimaryButtonAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.DeviceSecondaryButtonAction">
      <summary>
            Gets or sets user device secondary button action. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.DeviceTertiaryButtonAction">
      <summary>
            Gets or sets user device tertiary button action. This is a dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.GetAutoFitRange(Arction.Wpf.ChartingMVVM.PointDouble3D@,Arction.Wpf.ChartingMVVM.PointDouble3D@)">
      <summary>
            Get Auto-Fit range, two opposite corner points of drawing region as axis values.
            </summary>
      <param name="minimum">Minimum axis coordinates.</param>
      <param name="maximum">Maximum axis coordinates.</param>
      <returns>True, if range could be fetched. Otherwise false.</returns>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.TertiaryDeviceButtonActionProperty">
      <summary>
            Identifies the DeviceTertiaryButtonAction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPie3D.ZoomPanOptionsPie3D.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AnnotationPolarCollection">
      <summary>
            AnnotationPolar collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AnnotationPolarCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AnnotationPolarCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Annotations.AnnotationPolar})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AreaSeriesPolarCollection">
      <summary>
            AreaSeriesPolar collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AreaSeriesPolarCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AreaSeriesPolarCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.SeriesPolar.AreaSeriesPolar})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AxisPolarCollection">
      <summary>
            Represents a collection of Polar axes
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.AxisPolarCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar">
      <summary>
            LegendBox for polar series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.Categorization">
      <summary>
            Gets or sets categorization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CategorizationProperty">
      <summary>
            Identifies the Categorization dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CategoryColor">
      <summary>
            Gets or sets category title color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CategoryColorProperty">
      <summary>
            Identifies the CategoryColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CategoryFont">
      <summary>
            Gets or sets category font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CategoryFontProperty">
      <summary>
            Identifies the CategoryFont dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.Scale">
      <summary>
            Gets or sets scale. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.ScaleProperty">
      <summary>
            Identifies the Scales dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.LegendBoxPolar.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PointLineSeriesPolarCollection">
      <summary>
            PointLineSeriesPolar collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PointLineSeriesPolarCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PointLineSeriesPolarCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.SeriesPolar.PointLineSeriesPolar})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarCollectionBase`1">
      <summary>
            AnnotationPolar collection.
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarCollectionBase`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarCollectionBase`1.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarCollectionBase`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarEventMarkerCollection">
      <summary>
            Represents a collection of PolarEventMarker objects
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.PolarEventMarkerCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.SectorCollection">
      <summary>
            Represents a collection of Sectors.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.SectorCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar">
      <summary>
            ViewPolar class inherits ViewPolarBase.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.#ctor">
      <summary>
             Constructs new ViewPolar.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
             Constructs new ViewPolar.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.Axes">
      <summary>
            Gets or sets pan polar axis list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.AxesProperty">
      <summary>
            Identifies the Axes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.AxisAutoPlacement">
      <summary>
            Placement of Amplitude Axis is done automatically. If false, it will consider start angle as 0.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.AxisAutoPlacementProperty">
      <summary>
            Identifies the Amplitude Axis dependency property.
            Placement of Amplitude Axis is done automatically. If false, it will consider start angle as 0.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.CalcRadius(System.Double)">
      <summary>
            Calculates radius in pixels for given zoom factor.
            </summary>
      <param name="zoomFactor">
        <see cref="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_dZoomScale" />
      </param>
      <returns>Radius in pixels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.Construct">
      <summary>
             Common construct method, called from the base class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.CreateDefaultPolarAxes">
      <summary>
            Create Polar Axes.
            </summary>
      <returns>Defaul Polar Axes.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DataCursor">
      <summary>
            Axis value indicator length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DataCursorProperty">
      <summary>
            Identifies the IndicatorLength dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)">
      <summary>
            Check if user interactive device button was clicked
            </summary>
      <param name="Type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="Front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)">
      <summary>
            Check if user interactive device button is down.
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
            Check if user interactive device button is up.
            </summary>
      <param name="Type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bMousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bMousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="Front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.FreeMarkersDrawData(System.Boolean)">
      <summary>
            Free markers.
            </summary>
      <param name="creatingDeviceOrDisposing">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatingDeviceOrDisposing</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.FreeMarkersDrawData(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.GetViewCornerValues(System.Int32,Arction.Wpf.ChartingMVVM.PointPolar@,Arction.Wpf.ChartingMVVM.PointPolar@)">
      <summary>
             Gets the current view's top-left and bottom-right corner axis values for the given axis. 
            </summary>
      <param name="AxisIndex">Axis index to get the view values of.</param>
      <param name="leftTopCorner">Views top-left corner axis values.</param>
      <param name="rightBottomCorner">Views bottom-right corner axis values.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.GetViewCornerValues(System.Int32,Arction.Wpf.ChartingMVVM.PointPolar@,Arction.Wpf.ChartingMVVM.PointPolar@,Arction.Wpf.ChartingMVVM.PointPolar@,Arction.Wpf.ChartingMVVM.PointPolar@)">
      <summary>
             Gets the current view's top-left, bottom-left, top-right and bottom-right corner axis values for the given axis. 
            </summary>
      <param name="AxisIndex">Index of the axis to get the corner values in relation to.</param>
      <param name="leftTopCorner">Views top-left corner axis values.</param>
      <param name="rightTopCorner">Views top-right corner axis values.</param>
      <param name="rightBottomCorner">Views bottom-right corner axis values.</param>
      <param name="leftBottomCorner">Views bottom-left corner axis values.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)">
      <summary>
            Occurs when user interactive device is moved.
            </summary>
      <param name="Type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="Front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleMarginsChanged">
      <summary>
            Handler gets Graph segment information
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.HandleViewChanged">
      <summary>
             Virtual method that is called when zoom or panning properties have changed. The Chart update cycle has not 
             been ended yet. 
             Implement to react to the event. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.m_iAxisCount">
      <summary>
             Number of axes on last SetSubnodeOwners call.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.UserDeviceCheckStarting">
      <summary>
             To be called as beginingn of user interactive device move and click checks / handling to cleanup states.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse wheel has been scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolar.Zoom(Arction.Wpf.ChartingMVVM.PointPolar,Arction.Wpf.ChartingMVVM.PointPolar,System.Int32)">
      <summary>
             Zooms the view to given rectangle, defined by the axis values of the diagonal corners of the rectangle. 
             If the rectangle is of wrong aspect ratio, center point of the given rectangle is followed. 
            </summary>
      <param name="AxisIndex">Index of the axis to set the corner values in relation to.</param>
      <param name="Corner1">One corner axis values.</param>
      <param name="Corner2">One corner axis values.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase">
      <summary>
            Polar chart view's base class. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.Annotations">
      <summary>
            Gets or sets pan annotations list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.AnnotationsProperty">
      <summary>
            Identifies the Annotations dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.AreaSeries">
      <summary>
            Gets or sets pan polar area series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.AreaSeriesProperty">
      <summary>
            Identifies the AreaSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.CalcMarginEffects">
      <summary>
             re-calculates the margin area and drawcenter, marks
             all affected to dirty.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.Construct">
      <summary>
            Call base constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.CreateLegendBox">
      <summary>
             Creates the legend box.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.CreateZoomPanOptions">
      <summary>
            Create new Zoom Pan Options for Polar
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)">
      <summary>
            Check if mouse was clicked
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)">
      <summary>
             Virtual method to override if the class wants to handle 
             user interactive device down event of axis on proper time. 
            </summary>
      <param name="type">Type of an object</param>
      <param name="eventArguments">Event</param>
      <param name="bIsOutsideGraphArea">Check if device is outside or inside the Graph area</param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if the event was consumed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
             Checks if the user interactive device up event applies to the given item. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="interactedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>interactedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.FreeZoomDrawData">
      <summary>
             Free DD of the zoom system. Rects etc. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.GetDataBounds">
      <summary>
            Get Data Bounds in PX.
            </summary>
      <returns>rect defining the rectangle that fully encompasses all of the visible (non clipped) datapoints. Rect is defined in actual pixels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.GetZoomPadding">
      <summary>
             Getter of the ZoomPadding, supported by Round and 3D Views
             ZoomPanOptions. 
             <para>
            Returns empty (default) value if ZoomPanOptions is not set. 
            </para></summary>
      <returns>ZoomPadding of the given view, if supported. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device button down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonDownAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device up event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bMousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bMousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)">
      <summary>
            Occurs when the mouse is moved
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.LegendBox">
      <summary>
            Gets or sets pan legend box. Shows description of series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.LegendBoxProperty">
      <summary>
            Identifies the LegendBox dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.m_zoomPanOptions">
      <summary>
             ZoomPanOptions, that contains settings for Zooming and panning and 
             similar operations. 
             <para>
            Controlled through <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.ZoomPanOptions" /></para><para>
            Can be internally requested at base classes through <see cref="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.GetZoomPanOptions" /></para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.Markers">
      <summary>
            Gets or sets pan polar markers. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.MarkersProperty">
      <summary>
            Identifies the Markers dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.PointLineSeries">
      <summary>
            Gets or sets pan polar point line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.PointLineSeriesProperty">
      <summary>
            Identifies the PointLineSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.Sectors">
      <summary>
            Gets or sets pan sector list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.SectorsProperty">
      <summary>
            Identifies the Sectors dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.SetZoomPanOptions(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar)">
      <summary>
            Set zoom pan options for Polar
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.SetZoomPanOptions(Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelPanOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)">
      <summary>
            Pan of user interactive device wheel on Axis.
            </summary>
      <param name="zoomIn">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>zoomIn</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelPanOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)</parameter>
          </include>
        </markup>
      </param>
      <param name="axis">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axis</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelPanOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelZoomOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,System.Int32,System.Int32)">
      <summary>
            Zoom on Axis using user interactive device wheel.
            </summary>
      <param name="zoomIn">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>zoomIn</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelZoomOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="axis">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axis</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelZoomOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="iCoordX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iCoordX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelZoomOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="iCoordY">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iCoordY</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.WheelZoomOnAxis(System.Boolean,Arction.Wpf.ChartingMVVM.Axes.AxisPolar,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.ZoomPanOptions">
      <summary>
            Gets or sets zoom, pan and auto-fit options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ViewPolarBase.ZoomPanOptionsProperty">
      <summary>
            Identifies the ZoomPanOptions dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar">
      <summary>
            Zoom, pan and auto-fitting options for Polar view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.AxisWheelAction">
      <summary>
            Gets or sets pan user interactive device wheel action on amplitude axis. This is a dependency property.
            Affects the circuimfence axis line rotation so that if the value is none, the rotation is disabled. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.AxisWheelActionProperty">
      <summary>
            Identifies the AxisWheelAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.WheelRotateAction">
      <summary>
            Gets or sets pan user interactive device wheel action on circumference. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewPolar.ZoomPanOptionsPolar.WheelRotateActionProperty">
      <summary>
            Identifies the WheelRotateAction dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.AfterPropChangeEventArgs`1">
      <summary>
            Represents a class that provides arguments for the AfterPropChanged event for round view.
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.Views.ViewRound.AfterPropChangeEventArgs`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.AfterPropChangeEventArgs`1.CancelRendering">
      <summary>
            Cancel rendering after the property change event has been handled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.AfterPropChangeEventArgs`1.NewValue">
      <summary>
            New value of the property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.AfterPropChangeEventArgs`1.OldValue">
      <summary>
            Old value of the property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePanningRoundEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforePanning event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePanningRoundEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePanningRoundEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePropChangeEventArgs`1">
      <summary>
            Represents a class that provides arguments for the BeforePropChange event for round view.
            </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePropChangeEventArgs`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePropChangeEventArgs`1.Cancel">
      <summary>
            Cancel property modification.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePropChangeEventArgs`1.NewValue">
      <summary>
             New value.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforePropChangeEventArgs`1.OldValue">
      <summary>
             Old value.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforeZoomingRoundEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforeZooming event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforeZoomingRoundEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewRound.BeforeZoomingRoundEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound">
      <summary>
            LegendBox for round views.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.Position">
      <summary>
            Gets or sets position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.SeriesTitleMouseMoveOverOff">
      <summary>
            Occurs when the mouse pointer moves out over the series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.SeriesTitleMouseMoveOverOn">
      <summary>
            Occurs when the mouse pointer moves in over the series title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.UnitsColor">
      <summary>
            Units text color 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.UnitsFont">
      <summary>
            Units text font. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.ValueLabelColor">
      <summary>
            Series value label color.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.ValueLabelFont">
      <summary>
            Series value label font. 
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.SeriesTitleMouseMoveOverOffEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOff event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOff event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound.SeriesTitleMouseMoveOverOnEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOn event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOn event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.PannedRoundEventArgs">
      <summary>
            Represents a class that provides arguments for the Panned event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.PannedRoundEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewRound.PannedRoundEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.SeriesTitleDeviceMovedEventArgs">
      <summary>
            Represents a class that provides arguments for the SeriesTitleDeviceMoved event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.SeriesTitleDeviceMovedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SeriesTitleDeviceMovedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.SeriesTitleDeviceMovedEventArgs.Series">
      <summary>
            The series over which the user interactive device pointer was moved in or out.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase">
      <summary>
            Base class for all round views. These are Smith -and Polar views.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.AutoSizeMargins">
      <summary>
            Automatically size margins based on LegendBox position and size. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.AutoSizeMarginsProperty">
      <summary>
            Identifies the dependency property for automatically sizing margins of the chart.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.BeforePanning">
      <summary>
            Panning is about to start.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.BeforeZooming">
      <summary>
            Zooming is about to start.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Border">
      <summary>
            Border options
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.BorderProperty">
      <summary>
            Identifies the dependency property for Border.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CalcMarginEffects">
      <summary>
             re-calculates the margin area and drawcenter, marks
             all affected to dirty.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CalcRadius(System.Double)">
      <summary>
            Calculates radius in pixels for given zoom factor.
            </summary>
      <param name="zoomFactor">
        <see cref="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_dZoomScale" />
      </param>
      <returns>Radius in pixels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CalcRadius(System.Double,Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase)">
      <summary>
            Calculates radius in pixels for given zoom factor.
            </summary>
      <param name="zoomFactor">
        <see cref="!:ViewRound.ViewRoundBase.m_fZoomScale" />
      </param>
      <param name="axis">
        <see cref="T:Arction.Wpf.ChartingMVVM.Axes.AxisRoundBase" />
      </param>
      <returns>Radius in pixels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Construct">
      <summary>
             Virtual construction / initialization method. Called by all constructors.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CoordsToUCValue(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)">
      <summary>
             Convert absolute screen coordinates to relative unit circle coordinates.
            </summary>
      <param name="screenCoords">Coords in screen space.</param>
      <param name="useDip">Use DIPs instead of pixels as parameters.</param>
      <returns>Given coordinates in relative unit circle space, with origo at the center of the circle.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CoordsToUCValue(Arction.Wpf.ChartingMVVM.PointFloat@,System.Boolean)">
      <summary>
             Convert absolute screen coordinates to relative unit circle coordinates.
             The given pointfloat is modified. 
            </summary>
      <param name="screenCoords">Coordinates in screen space on entry. On exit contains matching unit circle coordinates.</param>
      <param name="useDip">Use DIPs instead of pixels as parameters.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CreateLegendBox">
      <summary> 
             Required method that creates proper legend box and sets the m_LegendBox property
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.CreatetbMarginBorder">
      <summary>
            Create Border
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)">
      <summary>
             User interactive device click handler for given object types. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been clicked.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse button has been clicked down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)">
      <summary>
             Virtual method to override if the class wants to handle 
             mouse down event of axis on proper time. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">Determines if the object is considered being in front or in back. 
            Actual meaning differs between ObjectTypes</param>
      <returns>True if the event was consumed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
             Mouse button has been released.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
             Checks if the user interactive device up event applies to the given item. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="interactedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>interactedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FireAfterZoomingEvent(System.Single)">
      <summary>
             Event launcher for zoom scale changes. Called after the zooming. 
             Suits like this for polar, override for smith
            </summary>
      <param name="OldScale">Old zoom scale</param>
      <returns>True if rendering frame should be stopped.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FireBeforePanningEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)">
      <summary>
             Event launcher for zoom center changes. 
             Suits like this for polar, override for smith
            </summary>
      <param name="NewCenter">New zoom center as UC</param>
      <returns>True if zoom was successful. False if canceled.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FireBeforeZoomingEvent(System.Single)">
      <summary>
             Event launcher for zoom scale changes. Called before the zooming. 
             Suits like this for polar, override for smith
            </summary>
      <param name="NewScale">New zoom scale</param>
      <returns>True if value change is ok, false if zoom should not happen.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FirePannedEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)">
      <summary>
             Event launcher for zoom center changes. Called after the pan. 
             Suits like this for polar, override for smith
            </summary>
      <param name="OldCenter">Old center as UC</param>
      <returns>True if rendering should be canceled.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FixAspectRatio(Arction.Wpf.ChartingMVVM.RectangleXYF@,System.Boolean)">
      <summary>
             Fixes aspect ratio to match the view aspect ratio. 
             Keeps X,Y coords if Center property is false (default), 
             negative sizes allowed (suggested in some cases).
             Does not reduce the rect size, only increases it. 
            </summary>
      <param name="center">If true, keep the rect center in place. 
            Otherwise the X/Y is kept in place (which is not necessarily 
            the left/top)</param>
      <param name="rect">Increases the size same amount on both directions.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FreeMarkersDrawData(System.Boolean)">
      <summary>
            Free marker draw data.
            </summary>
      <param name="creatingDeviceOrDisposing">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatingDeviceOrDisposing</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FreeMarkersDrawData(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.FreeZoomDrawData">
      <summary>
             Free DD of the zoom system. Rects etc. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.GetChartDiameterAndCenter(System.Int32@,System.Int32@,System.Int32@)">
      <summary>
             Get Smith or Polar charts outer diameter and center point in screen coordinates.
            </summary>
      <param name="diameter">Diameter (2 * radius).</param>
      <param name="centerX">Center point X.</param>
      <param name="centerY">Center point Y.</param>
      <returns>True if successfully resolved.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.GetDataBounds">
      <summary>
             Getter of the bounds of the data in screen pixels (zoomed) for 
             determination of the correct scale and center offset for the zooming 
             so that all data is fit to view. 
            </summary>
      <returns>Bounding box of the data in screen coordinates.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)">
      <summary>
            Handle user interactive device up event.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bMousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bMousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceButtonUpAction(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,Arction.Wpf.ChartingMVVM.UserInteractiveObject)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)">
      <summary>
             Handles user interactive device move events of the given type. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.HandleViewChanged">
      <summary>
             Virtual method that is called when zoom or panning properties have changed or engine changed or margins changed or ... The Chart update cycle has not 
             been ended yet. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_bContentMaskDirty">
      <summary>
             Marks if the content mask is dirty.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_bViewDirty">
      <summary>
             Marks if the view contains changed content and if it should be re-rendered. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_dOuterRadSq">
      <summary>
             (m_OuterDiameter/2)^2 for calculations optimizations
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_fDiameterNaturalPx">
      <summary>
             Unscaled / natural diameter of the view in PX. 
             Updated on view size changes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_pucZoomCenter">
      <summary>
             Center of the view in UnitCircle coordinates in relation to the 
             circle center. 
             User controlled property that the user can use to position the view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Panned">
      <summary>
            Panning has ended.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)">
      <summary>
            Check if position is over circular graph area. Meaning if it's inside the radius of the chart. 
            </summary>
      <param name="coord">Position</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.SetLegendBox(Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound)">
      <summary>
            Set LegendBox
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.SetLegendBox(Arction.Wpf.ChartingMVVM.Views.ViewRound.LegendBoxRound)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.SetZoomCenter(Arction.Wpf.ChartingMVVM.PointUnitCircle,System.Boolean)">
      <summary>
            Setter of the Zoom center in UC coords. 
            Emits corresponding zoom events if allowed.
            </summary>
      <param name="newCenter">New center of the view in UC coords.</param>
      <param name="emitEvents">If true, emits events that the user can use to cancel rendering or prevent the zoom operation.</param>
      <returns>True if zoom center changed</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.SetZoomScale(System.Double,System.Boolean)">
      <summary>
             Setter of the m_ZoomFactor. 
             Emits corresponding zoom events if allowed.
            </summary>
      <param name="newZoomScale">New Zoom scale to be set.</param>
      <param name="emitEvents">If true, emits events that the user can use to cancel rendering or prevent the zoom operation.</param>
      <returns>True if Zoom scale changed</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UCValueToCoord(Arction.Wpf.ChartingMVVM.PointFloat,System.Boolean)">
      <summary>
             Convert relative unit circle coordinates to absolute screen coordinates.
            </summary>
      <param name="ucValue">Unit circle coordinates to convert.</param>
      <param name="useDip">Use DIPs instead of pixels as parameters.</param>
      <returns>Absolute screen coordinates matching the given parameter.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UCValueToCoord(Arction.Wpf.ChartingMVVM.PointFloat@,System.Boolean)">
      <summary>
             Convert relative unit circle coordinates to absolute screen coordinates.
             The given pointfloat is modified.
            </summary>
      <param name="coords">Screen coordinates to convert into unit circle coordinates.</param>
      <param name="useDip">Use DIPs instead of pixels as parameters.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UCValueToCoord(Arction.Wpf.ChartingMVVM.PointUnitCircle,System.Boolean)">
      <summary>
             Convert relative unit circle coordinates to absolute screen coordinates.
            </summary>
      <param name="ucValue">Unit circle coordinates to convert.</param>
      <param name="useDip">Use DIPs instead of pixels as parameters.</param>
      <returns>Absolute screen coordinates matching the given parameter.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserDeviceCheckStarting">
      <summary>
             To be called as beginning of mouse move and mouse click checks / handling to cleanup states.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse wheel has been scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Zoom(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Zoom the chart in or out. 
            If stop point X is greater than start point X, zooms in.
            If stop point X is less than start point X action follows RightToLeftZoom property.
            </summary>
      <param name="startX">Zoom start point X.</param>
      <param name="startY">Zoom start point Y.</param>
      <param name="stopX">Zoom stop point X.</param>
      <param name="stopY">Zoom stop point Y.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomByFactor(Arction.Wpf.ChartingMVVM.PointInt,System.Single,System.Boolean)">
      <summary>
             Zoom by given factor and around given view center as DIP or screen coordinates.
            </summary>
      <param name="zoomCenterCoord">Screen coordinates of the new center point [default input in DIPs]</param>
      <param name="zoomFactor">Factor to modify the zoom scale by.</param>
      <param name="UseDIP">Defines if the input value is in DIP or PX</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomCenterChanged">
      <summary>
             Reacts to changes in ZoomCenter property, updates drawing center 
             quietly from zoom center.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.Zoomed">
      <summary>
            Zooming has ended.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomScale">
      <summary>
             Current zooming scale. 
             1 is the deafult zoom that shows the circle at it's maximum size
             so that it just fills the view area reduced by the margins.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomScaleProperty">
      <summary>
            Identifies the Axes dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomToFit(Arction.Wpf.ChartingMVVM.ZoomAreaRound)">
      <summary>
             Zooms the view so that the data is visible at maximum possible size.
             <para>
            Area is either the full drawing area inside <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewBase.Margins" /> 
            or are further limited by <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.ZoomPadding" />, depending 
            on case. For more information, see options at <see cref="T:Arction.Wpf.ChartingMVVM.ZoomAreaRound" />.
            </para></summary>
      <param name="zoomArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>zoomArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomToFit(Arction.Wpf.ChartingMVVM.ZoomAreaRound)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomToLabelsArea">
      <summary>
            Zooms the round view so that labels area is fitted to area inside  
            <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.ZoomPadding" />. 
            <para>
            Publicly accessible via <see cref="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomToFit(Arction.Wpf.ChartingMVVM.ZoomAreaRound)" /> method and 
            <see cref="F:Arction.Wpf.ChartingMVVM.RightToLeftZoomActionRound.ZoomToData" />. 
            </para></summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.BeforePanningEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforePanning event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the BeforePanning event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.BeforeZoomingEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforeZooming event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the BeforeZooming event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.PannedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Panned event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Panned event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.ZoomedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Zoomed event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Zoomed event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomedRoundEventArgs">
      <summary>
            Represents a class that provides arguments for the Zoomed event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomedRoundEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomedRoundEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound">
      <summary>
            Zoom, pan and auto-fitting options for Smith -and Polar views
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase)">
      <summary>
            Constructor
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.RectangleZoomAboutOrigin">
      <summary>
            Gets or sets if enable zooming around axis values defined in axes ZoomOrigin property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.RectangleZoomAboutOriginProperty">
      <summary>
            Identifies the RectangleZoomAboutOrigin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.RightToLeftZoomAction">
      <summary>
            Gets or sets right-to-left zoom action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.RightToLeftZoomActionProperty">
      <summary>
            Identifies the RightToLeftZoomAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.WheelZoomingEnabled">
      <summary>
            Gets or sets if user interactive device wheel zooming is allowed. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.WheelZoomingEnabledProperty">
      <summary>
            Identifies the WheelZoomingEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.ZoomPadding">
      <summary>
            Padding affecting zooming operations. The empty space left between the zoom area and the margins.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.ZoomPaddingProperty">
      <summary>
            Identifies the <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewRound.ZoomPanOptionsRound.ZoomPadding" /> dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.AnnotationSmithCollection">
      <summary>
            AnnotationSmith collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.AnnotationSmithCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.AnnotationSmithCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.Annotations.AnnotationSmith})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.BeforePanningSmithEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforePanning event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.BeforePanningSmithEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewSmith.BeforePanningSmithEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.LegendBoxSmith">
      <summary>
            LegendBox for smith series.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.LegendBoxSmith.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.LegendBoxSmith.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.LegendBoxSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.LegendBoxSmith.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.PannedSmithEventArgs">
      <summary>
            Represents a class that provides arguments for the Panned event for round view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.PannedSmithEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewSmith.PannedSmithEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.PointLineSeriesSmithCollection">
      <summary>
            PointLineSeriesSmith collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.PointLineSeriesSmithCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.PointLineSeriesSmithCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.SeriesSmith.PointLineSeriesSmith})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.SmithEventMarkerCollection">
      <summary>
            SmithEventMarker collection.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.SmithEventMarkerCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.SmithEventMarkerCollection.#ctor(System.Collections.Generic.IList{Arction.Wpf.ChartingMVVM.EventMarkers.SmithEventMarker})">
      <summary>
            Constructor.
            </summary>
      <param name="list">Items added to list</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith">
      <summary>
            ViewSmith class inherits ViewSmithBase.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith</parameter>
          </include>
        </markup>
      </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.Axis">
      <summary>
            Gets or sets pan polar axis list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.AxisProperty">
      <summary>
            Identifies the Axes dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.BeforePanning">
      <summary>
            Panning is about to start.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.CalcRadius(System.Double)">
      <summary>
            Calculates radius in pixels for given zoom factor.
            </summary>
      <param name="zoomFactor">
        <see cref="F:Arction.Wpf.ChartingMVVM.Views.ViewRound.ViewRoundBase.m_dZoomScale" />
      </param>
      <returns>Radius in pixels.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.Construct">
      <summary>
             One time initialization method, called from all constructors.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DataCursor">
      <summary>
            Axis value indicator length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DataCursorProperty">
      <summary>
            Identifies the IndicatorLength dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)">
      <summary>
            Check if user interactive device button was clicked.
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="Front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)">
      <summary>
             Virtual method to override if the class wants to handle 
             user interactive device button down event of axis on proper time. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if the event was consumed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
             Checks if the user interactive device button up event applies to the given item. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bMousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bMousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FireBeforePanningEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)">
      <summary>
             Event launcher for zoom events. 
            </summary>
      <param name="newCenter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newCenter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FireBeforePanningEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FireBeforePanningEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FirePannedEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)">
      <summary>
             Called after successful panning. Launches the after event. 
            </summary>
      <param name="oldCenter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldCenter</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FirePannedEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.FirePannedEvent(Arction.Wpf.ChartingMVVM.PointUnitCircle)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.GetDataBounds">
      <summary>
             Getter of the bounding box for the series data in PX.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.GetDataBounds</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.GetViewCornerValues(Arction.Wpf.ChartingMVVM.PointSmith@,Arction.Wpf.ChartingMVVM.PointSmith@)">
      <summary>
             Getter of the current views top-left and bottom-right corner axis values. 
            </summary>
      <param name="leftTopCorner">Views top-left corner axis values.</param>
      <param name="rightBottomCorner">Views bottom-right corner axis values.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.GetViewCornerValues(Arction.Wpf.ChartingMVVM.PointSmith@,Arction.Wpf.ChartingMVVM.PointSmith@,Arction.Wpf.ChartingMVVM.PointSmith@,Arction.Wpf.ChartingMVVM.PointSmith@)">
      <summary>
             Getter of the current views top-left, bottom-left, top-right and bottom-right corner axis values. 
            </summary>
      <param name="leftTopCorner">Views top-left corner axis values.</param>
      <param name="rightTopCorner">Views top-right corner axis values.</param>
      <param name="rightBottomCorner">Views bottom-right corner axis values.</param>
      <param name="leftBottomCorner">Views bottom-left corner axis values.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)">
      <summary>
             Handler for the user interactive device movements.
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleMarginsChanged">
      <summary>
            Handler gets Graph segment information
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.HandleViewChanged">
      <summary>
             Virtual method that is called when zoom or panning properties have changed. The Chart update cycle has not 
             been ended yet. 
             Implement to react to the event. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.Panned">
      <summary>
            Panning has ended.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.UserDeviceCheckStarting">
      <summary>
            User interactive device has been moved.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.Zoom(Arction.Wpf.ChartingMVVM.PointSmith,Arction.Wpf.ChartingMVVM.PointSmith)">
      <summary>
             Zooms the view to given rectangle, defined by the axis values of the diagonal corners of the rectangle. 
             If the rectangle is of wrong aspect ratio, center point of the given rectangle is followed. 
            </summary>
      <param name="corner1">One corner axis values.</param>
      <param name="corner2">One corner axis values.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.ZoomCenter">
      <summary>
            View center coordinates.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.ZoomCenterChanged">
      <summary>
             Reacts to changes in the base ZoomCenter (UC) property, 
             updates local Smith zoom center. 
             To be called each time the ZoomCenter is modified or modification 
             is detected in the base class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.ZoomCenterProperty">
      <summary>
            Identifies the Zooming center dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.BeforePanningEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforePanning event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the BeforePanning event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmith.PannedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Panned event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Panned event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase">
      <summary>
            Smith chart view's base class. 
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.Annotations">
      <summary>
            Gets or sets pan annotations list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.AnnotationsProperty">
      <summary>
            Identifies the Annotations dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.CalcMarginEffects">
      <summary>
             re-calculates the margin area and drawcenter, marks
             all affected to dirty.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.Construct">
      <summary>
            Constructor calls base constructor
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.CreateLegendBox">
      <summary>
            Create new Legend Box form Smith Chart
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.CreateZoomPanOptions">
      <summary>
            Create new Zoom Pan Options
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)">
      <summary>
            Check if user interactive device button was clicked.
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonClickCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)">
      <summary>
             Virtual method to override if the class wants to handle 
             user interactive device button down event of axis on proper time. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonDownCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>True if the event was consumed.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)">
      <summary>
             Checks if the user interactive device button up event applies to the given item. 
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bMousedObjectFirst">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bMousedObjectFirst</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bExit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bExit</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.DeviceButtonUpCheck(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.FreeZoomDrawData">
      <summary>
             Free DD of the zoom system. Rects etc. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.GetZoomPadding">
      <summary>
             Getter of the ZoomPadding, supported by Round and 3D Views
             ZoomPanOptions. 
             <para>
            Returns empty (default) value if ZoomPanOptions is not set. 
            </para></summary>
      <returns>ZoomPadding of the given view, if supported. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)">
      <summary>
            Occurs when the mouse is moved
            </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bIsOutsideGraphArea">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bIsOutsideGraphArea</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="mibHandled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mibHandled</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="front">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>front</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.HandleDeviceMoved(Arction.Wpf.ChartingMVVM.Views.View2D.ObjectType,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,System.Boolean,Arction.Wpf.ChartingMVVM.UserInteractiveObject,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.LegendBox">
      <summary>
            Gets or sets pan legend box. Shows description of series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.LegendBoxProperty">
      <summary>
            Identifies the LegendBox dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.m_zoomPanOptions">
      <summary>
             ZoomPanOptions, that contains settings for Zooming and panning and 
             similar operations. 
             <para>
            Controlled through <see cref="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.ZoomPanOptions" /></para><para>
            Can be internally requested at base classes through <see cref="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.GetZoomPanOptions" /></para></summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.Markers">
      <summary>
            Gets or sets pan polar markers. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.MarkersProperty">
      <summary>
            Identifies the Markers dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.PointLineSeries">
      <summary>
            Gets or sets pan polar point line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.PointLineSeriesProperty">
      <summary>
            Identifies the PointLineSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.SetZoomPanOptions(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith)">
      <summary>
            Set zoom pan options for smith
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.SetZoomPanOptions(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.ZoomPanOptions">
      <summary>
            Gets or sets zoom, pan and auto-fit options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase.ZoomPanOptionsProperty">
      <summary>
            Identifies the ZoomPanOptions dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith">
      <summary>
            Zoom, pan and auto-fitting options for Smith view
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith.#ctor">
      <summary>
             Zoom Pan Options for Smith
             </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)">
      <summary>
             Zoom Pan Options for Smith
             </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewSmith.ZoomPanOptionsSmith.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewSmith.ViewSmithBase)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AnnotationXYCollection">
      <summary>
            Represents a collection of XY Annotations.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AnnotationXYCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AreaSeriesCollection">
      <summary>
            Represents a collection of AreaSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AreaSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions">
      <summary>
            Aspect ratio options for ViewXY.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.#ctor(Arction.Wpf.ChartingMVVM.Views.ZoomPanOptionsBase)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.AspectRatio">
      <summary>
            Gets or sets aspect ratio. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.AspectRatioProperty">
      <summary>
            Identifies the AspectRatio dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.ManualAspectRatioWH">
      <summary>
            Gets or sets manual aspect ratio, width / height. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.ManualAspectRatioWHProperty">
      <summary>
            Identifies the ManualAspectRatioWH dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.XAxisIndex">
      <summary>
            Gets or sets aspect ratio x-axis index. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.XAxisIndexProperty">
      <summary>
            Identifies the XAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.YAxisIndex">
      <summary>
            Gets or sets aspect ratio y-axis index. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AspectRatioOptions.YAxisIndexProperty">
      <summary>
            Identifies the YAxisIndex dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator">
      <summary>
            Automatic titles placement.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CalculateLocations">
      <summary>
            Calculate title locations.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CalculateMaxDistance">
      <summary>
            Gets or sets if enable auto location with maximum distance calculation. If not applied, speeds things up a bit. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CalculateMaxDistanceProperty">
      <summary>
            Identifies the CalculateMaxDistance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CheckSeriesDataOverlapping">
      <summary>
            Gets or sets if enable checking of label overlap with series data. Disabling this increases performance, but decreases quality. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CheckSeriesDataOverlappingProperty">
      <summary>
            Identifies the CheckSeriesDataOverlapping dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.Enabled">
      <summary>
            Gets or sets if enable automatic series title placement. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.MaxLocationCandidates">
      <summary>
            Gets or sets maximum number of candidate locations for title. Reducing this would result faster location calculation. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.MaxLocationCandidatesProperty">
      <summary>
            Identifies the MaxLocationCandidates dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized.
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.Reset">
      <summary>
            Reset autolabeling.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.SearchCrossingPoint">
      <summary>
            Gets or sets if enable crossing point search. Disabling this increases performance, but decreases quality, if data seems to overlap visually. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.SearchCrossingPointProperty">
      <summary>
            Identifies the SearchCrossingPoint dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.UseSeriesTitleLocationsFromForm">
      <summary>
            Gets or sets if use series title locations as shown on form. May cause minor overlapping. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoLabelLocator.UseSeriesTitleLocationsFromFormProperty">
      <summary>
            Identifies the UseSeriesTitleLocationsFromForm dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit">
      <summary>
            Auto Y scale fit options class.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.Enabled">
      <summary>
            Gets or sets if automatic Y fitting is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.EnabledProperty">
      <summary>
            Identifies the Enabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.MarginPercents">
      <summary>
            Gets or sets margin in percents of min...max range. This is a dependency property.
            Using some margin leaves a gap between series and axis minimum and maximum values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.MarginPercentsProperty">
      <summary>
            Identifies the MarginPercents dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.TargetAllYAxes">
      <summary>
            Gets or sets if auto Y fit is done for all Y axes. This is a dependency property.
            If this is not set, auto Y fit targets only Y axes having AllowAutoYFit true.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.TargetAllYAxesProperty">
      <summary>
            Identifies the TargetAllYAxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.Thorough">
      <summary>
            Gets or sets if all series point in visible X range are searched. This is a dependency property. By using thorough detect method, all series point in visible X range are searched, resulting to 
            accurate fitting, but with cost of extra CPU load.
            If the detection is not thorough, fitting is not always accurate in real-time monitoring usage.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.ThoroughProperty">
      <summary>
            Identifies the Thorough dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.UpdateInterval">
      <summary>
            Gets or sets if auto Y scale update interval in milliseconds. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AutoYFit.UpdateIntervalProperty">
      <summary>
            Identifies the UpdateInterval dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout">
      <summary>
            Axis layout.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoAdjustAxisGap">
      <summary>
            Gets or sets auto adjust axis gap. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoAdjustAxisGapProperty">
      <summary>
            Identifies the AutoAdjustAxisGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoAdjustMargins">
      <summary>
            Gets or sets if calculate margins automatically. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoAdjustMarginsProperty">
      <summary>
            Identifies the AutoAdjustMargins dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoShrinkSegmentsGap">
      <summary>
            Gets or sets if automatically shrink stacked segments gap so that all Y axes can fit in graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoShrinkSegmentsGapProperty">
      <summary>
            Identifies the AutoSegmentsGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AutoShrinkYAxesGap">
      <summary>
            Gets or sets if automatically shrink stacked Y axes gap so that all Y axes can fit in graph. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AxisGridStrips">
      <summary>
            Gets or sets axis grid strip. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.AxisGridStripsProperty">
      <summary>
            Identifies the AxisGridStrips dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.Dispose(System.Boolean)">
      <summary>
            Dispose Layout
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.GridVisibilityOrder">
      <summary>
            Gets or sets Grid visibility order. 
            Note each axis has individual controls for major and minor grid visiblity, color, line style etc. 
            This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.GridVisibilityOrderProperty">
      <summary>
            Identifies the AxisGridStrips dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.Segments">
      <summary>
            Gets or sets Segments list. This is a dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.SegmentsGap">
      <summary>
            Gets or sets gap between segments. This is a dependency property. When a stacked or segmented view is selected and more than one Y axis has been defined,
            this is the gap in pixels between Y axes.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.SegmentsGapProperty">
      <summary>
            Identifies the SegmentsGap dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.SegmentsProperty">
      <summary>
            Identifies the YAxisSegments dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.StackedYAxesGap">
      <summary>
            Gets or sets gap between Y axes. This is a dependency property. When MultiYAxisMode is selected and more than one Y axis has been defined,
            this is the gap in pixels between Y axes.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.ToString">
      <summary>
            Converts object to string representation.
            </summary>
      <returns>Object as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XAxisAutoPlacement">
      <summary>
            Gets or sets X axes auto placement. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XAxisAutoPlacementProperty">
      <summary>
            Identifies the XAxisAutoPlacement dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XAxisTitleAutoPlacement">
      <summary>
            Gets or sets if place x-axis title automatically. If enabled overwrites x-axis' Title and Units two properties: VerticalAlign and DistanceToAxis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XAxisTitleAutoPlacementProperty">
      <summary>
            Identifies the XAxisTitleAutoPlacement dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XGridStripAxisIndex">
      <summary>
            Gets or sets X-grid fill axis index. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.XGridStripAxisIndexProperty">
      <summary>
            Identifies the XGridStripAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxesLayout">
      <summary>
            Gets or sets Y axis mode, when there's several Y axes defined. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxesLayoutProperty">
      <summary>
            Identifies the YAxesLayout dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxisAutoPlacement">
      <summary>
            Gets or sets Y axes auto placement. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxisAutoPlacementProperty">
      <summary>
            Identifies the YAxisAutoPlacement dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxisTitleAutoPlacement">
      <summary>
            Gets or sets if place y-axis title automatically. If enabled overwrites y-axis' Title and Units two properties: HorizontalAlign and DistanceToAxis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YAxisTitleAutoPlacementProperty">
      <summary>
            Identifies the YAxisTitleAutoplacement dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YGridStripAxisIndexLayered">
      <summary>
            Gets or sets Y-grid fill axis index. This is a dependency property.
            <remarks>Only applies when YAxesLayout is 'Layered'. In 'Stacked', each axis has an own vertical space and strips applied to that space only.</remarks></summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.AxisLayout.YGridStripAxisIndexLayeredProperty">
      <summary>
            Identifies the YGridStripAxisIndexLayred dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.BandCollection">
      <summary>
            Represents a collection of Band objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BandCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarSeriesCollection">
      <summary>
            Represents a collection of BarSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions">
      <summary>
            Bar view options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.BarSpacing">
      <summary>
            Gets or sets space between bars in same group, in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.BarSpacingProperty">
      <summary>
            Identifies the BarSpacing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.Grouping">
      <summary>
            Gets or sets grouping of the bars. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.GroupingProperty">
      <summary>
            Identifies the Grouping dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.IndexGroupingFitGroupDistance">
      <summary>
            Gets or sets distance from bar group to bar group in pixels. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.IndexGroupingFitGroupDistanceProperty">
      <summary>
            Identifies the IndexGroupingFitGroupDistance dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.IndexGroupingFitSideMargins">
      <summary>
            Gets or sets distance from bar edge to graph edge in pixels. This is a dependency property. It is used on left and right sides. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.IndexGroupingFitSideMarginsProperty">
      <summary>
            Identifies the IndexGroupingFitSideMargins dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.KeepBaseLevelAtAxisMinimum">
      <summary>
            Keep base level in axis minimum.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.KeepBaseLevelAtAxisMinimumProperty">
      <summary>
            Keep base level in axis minimum dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.Orientation">
      <summary>
            Gets or sets the orientation of bars (horizontal or vertical). This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.Stacking">
      <summary>
            Gets or sets stacking of bars of different series, that have same index or X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.StackingProperty">
      <summary>
            Identifies the Stacking dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.StackSum">
      <summary>
            Gets or sets stack sum. This is a dependency property. The series values amongst different series are stacked 
            and stretched to make this sum. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.StackSumProperty">
      <summary>
            Identifies the StackSum dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BarViewOptions.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforePanningXYEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforePanning event for XY view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforePanningXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BeforePanningXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforePanningXYEventArgs.Cancel">
      <summary>
            Cancel zooming.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforePanningXYEventArgs.XRanges">
      <summary>
            X-axis range change information.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforePanningXYEventArgs.YRanges">
      <summary>
            Y-axis range change information.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs">
      <summary>
            Represents a class that provides arguments for the BeforeZooming event for XY view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of BeforeZoomingXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs.ByWheel">
      <summary>
            Zooming is done by mouse wheel.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs.Cancel">
      <summary>
            Cancel zooming.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs.XRanges">
      <summary>
            X-axis range change information.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.BeforeZoomingXYEventArgs.YRanges">
      <summary>
            Y-axis range change information.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ChartEventMarkerCollection">
      <summary>
            Represents a collection of ChartEventMarker objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ChartEventMarkerCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ConstantLineCollection">
      <summary>
            Represents a collection of ConstantLines.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ConstantLineCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.DigitalLineSeriesCollection">
      <summary>
            Represents a collection of DigitalLineSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.DigitalLineSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings">
      <summary>
            Error bar settings.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.EndLength">
      <summary>
            Gets or sets end length. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.EndLengthProperty">
      <summary>
            Identifies the EndLength dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.ShowXError">
      <summary>
            Gets or sets if show X error. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.ShowXErrorProperty">
      <summary>
            Identifies the ShowXError dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.ShowYError">
      <summary>
            Gets or sets if show Y error. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.ShowYErrorProperty">
      <summary>
            Identifies the ShowYError dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.ToString">
      <summary>
            Convert class description to string 
            </summary>
      <returns>String</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.XColor">
      <summary>
            Gets or sets X color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.XColorProperty">
      <summary>
            Identifies the XColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.XThickness">
      <summary>
            Gets or sets X thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.XThicknessProperty">
      <summary>
            Identifies the XThickness dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.YColor">
      <summary>
            Gets or sets Y color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.YColorProperty">
      <summary>
            Identifies the YColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.YThickness">
      <summary>
            Gets or sets Y thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ErrorBarSettings.YThicknessProperty">
      <summary>
            Identifies the YThickness dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.FreeformPointLineSeriesCollection">
      <summary>
            Represents a collection of FreeformPointLineSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.FreeformPointLineSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.HighLowSeriesCollection">
      <summary>
            Represents a collection of HighLowSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.HighLowSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.IntensityGridSeriesCollection">
      <summary>
            Represents a collection of IntensityGridSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.IntensityGridSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.IntensityMeshSeriesCollection">
      <summary>
            Represents a collection of IntensityMeshSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.IntensityMeshSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY">
      <summary>
            LegendBox shows the series names and line/point styles in a box.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.#ctor">
      <summary>
            Constructor for Form editor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.AlignmentInSegmentGap">
      <summary>
            LegendBox alignment between Segments. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.AlignmentInSegmentGapProperty">
      <summary>
            Identifies the AlignmentInSegmentGap dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.AlignmentInVerticalMargin">
      <summary>
            LegendBox vertical alignment. Align LegendBoxes rendered on top by given edge. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.AlignmentInVerticalMarginProperty">
      <summary>
            Identifies the AlignmentInVerticalMargin dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.Categorization">
      <summary>
            Gets or sets items categorization. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CategorizationProperty">
      <summary>
            Identifies the Categorization dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CategoryColor">
      <summary>
            Gets or sets category title color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CategoryColorProperty">
      <summary>
            Identifies the CategoryColor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CategoryFont">
      <summary>
            Gets or sets category font. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CategoryFontProperty">
      <summary>
            Identifies the CategoryFont dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.CreateOffset">
      <summary>
            Create offset.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.IntensityScales">
      <summary>
            Gets or sets intensity scales. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.IntensityScalesProperty">
      <summary>
            Identifies the IntensityScales dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.Position">
      <summary>
            Gets or sets position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.PositionProperty">
      <summary>
            Identifies the Position dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SegmentIndex">
      <summary>
            Gets or sets LegendBox Segment index. Tells in which Segment the LegendBox should be drawn. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SegmentIndexProperty">
      <summary>
            Identifies the SegmentIndex dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SeriesTitleMouseMoveOverOff">
      <summary>
            Occurs when the mouse pointer moves out over the series title.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SeriesTitleMouseMoveOverOn">
      <summary>
            Occurs when the mouse pointer moves in over the series title.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SeriesTitleMouseMoveOverOffEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOff event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOff event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXY.SeriesTitleMouseMoveOverOnEventHandler">
      <summary>
            The delegate to use for handlers that receive the SeriesTitleMouseMoveOverOn event.
            </summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">Provides data for the SeriesTitleMouseMoveOverOn event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXYCollection">
      <summary>
            Represents a collection of LegendBoxXY objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LegendBoxXYCollection.#ctor">
      <summary>
            Constructor. Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineCollectionCollection">
      <summary>
            Represents a collection of LineCollection objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineCollectionCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor">
      <summary>
            Line series cursor allows tracking and evaluating line series values
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
      <param name="axisX">x-axis</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.AssignXAxisIndex">
      <summary>
            Gets or sets index of X axis assigned to this cursor. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.AssignXAxisIndexProperty">
      <summary>
            Identifies the AssignXAxisIndex dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.Behind">
      <summary>
            Gets or sets if cursor is behind series or front. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.BehindProperty">
      <summary>
            Identifies the Behind dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.FullHeight">
      <summary>
            Gets or sets is use full cursor height. This is a dependency property. If true, the cursor height will be the height of the control. 
            If false, the cursor is vertically painted in the graph area only. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.FullHeightProperty">
      <summary>
            Identifies the FullHeight dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.GrabPadding">
      <summary>
            Gets or sets grab padding, which is used to widen the active area. The area is widened on both sides the specified amount. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.GrabPaddingProperty">
      <summary>
            Identifies the GrabPadding dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.HairCrossColorMixing">
      <summary>
            Gets or sets if use cursor and dataseries colors or just cursor color for haircross. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.HairCrossColorMixingProperty">
      <summary>
            Identifies the HairCrossColorMixing dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.IndicateTrackingYRange">
      <summary>
            Gets or sets if cursor style is set to 'TrackSeries', and multiple series values hit on same 
            cursor X position, adjusts series tracking horizontal line height to match the minimum 
            and maximum value on current cursor position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.IndicateTrackingYRangeProperty">
      <summary>
            Identifies the IndicateTrackingYRange dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.IsPositionOver(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Is position over item.
            </summary>
      <param name="x">x-coordinate</param>
      <param name="y">y-coordinate</param>
      <param name="useDIP">Use DIP instead of pixels as parameters</param>
      <returns>true if position is over item, false otherwise</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.LineStyle">
      <summary>
            Gets or sets line style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.LineStyleProperty">
      <summary>
            Identifies the LineStyle dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.OwnerView">
      <summary>
            Owner view
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.PositionChanged">
      <summary>
            Cursor position on X-axis has changed.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.SetProperCursor">
      <summary>
            Set proper cursor. Default for dragging is VSplit.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.SnapToPoints">
      <summary>
            Gets or sets if moving the cursor, jumps the cursor to neareast series point. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.SnapToPointsProperty">
      <summary>
            Identifies the SnapToPoints dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.SolveYValue">
      <summary>
            Override LineSeriesCursor's Y-value solving/tracking method. Func (predefined generic) delegate type can be used with an anonymous method or lambda expression.
            Input parameter is series, which implements ITrackable interface. Output parameter is LineSeriesCoordinateSolveResult struct.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.Style">
      <summary>
            Gets or sets cursor style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.StyleProperty">
      <summary>
            Identifies the Style dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.ThinHairCross">
      <summary>
            Gets or sets if draw haircross horizontal line as 1px width, otherwise as wide as vertical. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.ThinHairCrossProperty">
      <summary>
            Identifies the ThinHairCross dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.TrackLineSeries">
      <summary>
            Predicate to determine if the cursor should draw/resolve TrackPoint for a series implementing ITrackable interface.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.TrackPoint">
      <summary>
            Gets or sets tracking point style. This is a dependency property. Applies only when Style is set to PointTrack.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.TrackPointProperty">
      <summary>
            Identifies the TrackPoint dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.ValueAtXAxis">
      <summary>
            Gets or sets X value. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.ValueAtXAxisProperty">
      <summary>
            Identifies the ValueAtXAxis dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.Visible">
      <summary>
            Gets or sets if cursor is visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursor.PositionChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the PositionChanged event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the PositionChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursorCollection">
      <summary>
            Represents a collection of LineSeriesCursor objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LineSeriesCursorCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LiteFreeformLineSeriesCollection">
      <summary>
            Represents a collection of LiteFreeformLineSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LiteFreeformLineSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.LiteLineSeriesCollection">
      <summary>
            Represents a collection of LiteLineSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.LiteLineSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale">
      <summary>
            Miniscale represents a miniature axes equivalent. Miniscales can't be used with logarithmic scales. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Color">
      <summary>
            Gets or sets color. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ColorProperty">
      <summary>
            Identifies the Color dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Direction">
      <summary>
            Gets or sets Y line direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.DirectionProperty">
      <summary>
            Identifies the Direction dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.HorizontalAlign">
      <summary>
            Gets or sets horizontal alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.HorizontalAlignProperty">
      <summary>
            Identifies the HorizontalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.LabelX">
      <summary>
            Gets or sets X dimension label style. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.LabelXProperty">
      <summary>
            Identifies the LabelX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.LabelY">
      <summary>
            Gets or sets Y dimension label style. This is a dependency property. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.LabelYProperty">
      <summary>
            Identifies the LabelY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Offset">
      <summary>
            Gets or sets offset from position set by HorizontalAlign and VerticalAlign. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.OffsetProperty">
      <summary>
            Identifies the Offset dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.PreferredSize">
      <summary>
            Gets or sets preferred size. This is a dependency property. The control tries to adjust its size near to this, while displaying user friendly dimension values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.PreferredSizeProperty">
      <summary>
            Identifies the PreferredSize dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ShowX">
      <summary>
            Gets or sets if show X dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ShowXProperty">
      <summary>
            Identifies the ShowX dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ShowY">
      <summary>
            Gets or sets if show Y dimension. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ShowYProperty">
      <summary>
            Identifies the ShowY dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Thickness">
      <summary>
            Gets or sets dimension lines thickness. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ThicknessProperty">
      <summary>
            Identifies the Thickness dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.VerticalAlign">
      <summary>
            Gets or sets vertical alignment. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.VerticalAlignProperty">
      <summary>
            Identifies the VerticalAlign dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.Visible">
      <summary>
            Gets or sets is miniscale visible or not. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.MiniScale.VisibleProperty">
      <summary>
            Identifies the Visible dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PannedXYEventArgs">
      <summary>
            Represents a class that provides arguments for the Panned event for XY view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PannedXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of PannedXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PannedXYEventArgs.XRanges">
      <summary>
            X-axis range information.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PannedXYEventArgs.YRanges">
      <summary>
            Y-axis range information.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer">
      <summary>
            Persistent series rendering intensity layer.
            Like PersistentSeriesRenderingLayer, but with palette coloring by hit count. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Constructor
            </summary>
      <param name="ownerView">Owner view</param>
      <param name="xAxis">X axis, whose series will be used in this layer</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.Clear">
      <summary>
            Clears the rendering layer and sets all intensity values to 0. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.CreatePalette">
      <summary>
            Create palette.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.HistoryIntensityFactor">
      <summary>
            Gets or sets current layer data intensity factor. Typically, keep 0.5 to 1.0. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.HistoryIntensityFactorProperty">
      <summary>
            Identifies the HistoryIntensityFactor dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.LegendBoxValueFormat">
      <summary>
            Gets or sets legendBox value format. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.LegendBoxValueFormatProperty">
      <summary>
            Identifies the LegendBoxValueFormat dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.LegendBoxValueType">
      <summary>
            Gets or sets value type: time, numeric or coordinates. Affects legend box value formatting. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.LegendBoxValueTypeProperty">
      <summary>
            Identifies the LegendBoxValueType dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.NewTraceIntensity">
      <summary>
            Gets or sets new trace intensity. Follows scale defined in ValueRangePalette. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.NewTraceIntensityProperty">
      <summary>
            Identifies the NewTraceIntensity dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.RenderSeries(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase})">
      <summary>
            Renders list of given series into the layer, in one batch. 
            </summary>
      <param name="seriesList">List of series to render</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.RenderSeries(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.ShowTextInLegendBox">
      <summary>
            Gets or sets if show text in legend box. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.ShowTextInLegendBoxProperty">
      <summary>
            Identifies the ShowTextInLegendBox dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.Title">
      <summary>
            Gets or sets layer title. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.TitleProperty">
      <summary>
            Identifies the Title dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.UnitsText">
      <summary>
            Gets or sets units text. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.UnitsTextProperty">
      <summary>
            Identifies the UnitsText dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.ValueRangePalette">
      <summary>
            Gets or sets color palette for value information. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingIntensityLayer.ValueRangePaletteProperty">
      <summary>
            Identifies the ValueRangePalette dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer">
      <summary>
            Persistent series rendering layer. Series can be rendered in a bitmap layer and the actual series freed. 
            Saves a lot of memory, CPU and GPU resources, especially when rendering hundreds or thousands of series.  
            The layer itself is rendered in the chart just before line series objects. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Constructor
            </summary>
      <param name="ownerView">Owner view</param>
      <param name="xAxis">X axis, whose series will be used in this layer</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.Clear">
      <summary>
            Clears the rendering layer and sets the size to size of the chart control. 
            Sets all data transparent (ARGB=0,255,255,255).
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.Clear(System.Windows.Media.Color)">
      <summary>
            Clears the rendering layer. Sets all data to given color.
            </summary>
      <param name="color">Color</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.MultiplyAlpha(System.Double)">
      <summary>
            Allows decaying or bringing the layer more visible. 
            </summary>
      <param name="factor">Multiply factor</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.RenderSeries(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase})">
      <summary>
            Renders list of given series into the layer, in one batch. Faster than calling RenderSeries many times. 
            </summary>
      <param name="seriesList">List of series to render</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayer.RenderSeries(System.Collections.Generic.List{Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase">
      <summary>
            Base class for persistent series rendering layers.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY,Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Constructor.
            </summary>
      <param name="ownerView">Owner view.</param>
      <param name="xAxis">X-axis, whose series will be used in this layer.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.AntiAliasing">
      <summary>
            Gets or sets anti-aliasing. Works also if the GPU doesn't support anti-aliasing in hardware. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.AntiAliasingProperty">
      <summary>
            Identifies the AntiAliasing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.DoClear(Arction.RenderingDefinitions.ColorRD)">
      <summary>
            Clears the rendering layer. Sets all data to given color.
            </summary>
      <param name="color">Color</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
            OnDeserialized is called just after the object has been deserialized
            </summary>
      <param name="context">Context</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.RenderSeries(Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase)">
      <summary>
            Renders the given series into the layer. 
            </summary>
      <param name="series">Series to render.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PersistentSeriesRenderingLayerBase.RenderSeries(Arction.Wpf.ChartingMVVM.SeriesXY.PointLineSeriesBase)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PointLineSeriesCollection">
      <summary>
            Represents a collection of PointLineSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PointLineSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PolygonSeriesCollection">
      <summary>
            Represents a collection of PolygonSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PolygonSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.PositionChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the PositionChanged event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.PositionChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of PositionChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PositionChangedEventArgs.CancelRendering">
      <summary>
            If you update the chart in the event handler, set to true to prevent flickering.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PositionChangedEventArgs.Cursor">
      <summary>
            Cursor.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.PositionChangedEventArgs.NewValue">
      <summary>
            New value on X-axis.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY">
      <summary>
            View rendering options.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">True if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.GDILineSeriesCompression">
      <summary>
            Gets or sets if compress GDI line series data. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.GDILineSeriesCompressionProperty">
      <summary>
            Identifies the GDILineSeriesCompression dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.LineSeriesEnhancedAntiAliasing">
      <summary>
            Gets or sets line series enhanced anti-aliasing. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.LineSeriesEnhancedAntiAliasingProperty">
      <summary>
            Identifies the LineSeriesEnhancedAntiAliasing dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.RenderOptionsViewXY.ToString">
      <summary>
            Convert class description to string. 
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.SampleDataBlockSeriesCollection">
      <summary>
            Represents a collection of SampleDataBlockSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.SampleDataBlockSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.SampleDataSeriesCollection">
      <summary>
            Represents a collection of SampleDataSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.SampleDataSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.SegmentCollection">
      <summary>
            Represents a collection of Segment objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.SegmentCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.SeriesEventMarkerCollection">
      <summary>
            Represents a collection of SeriesEventMarker objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.SeriesEventMarkerCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.SeriesTitleDeviceMovedEventArgs">
      <summary>
            Represents a class that provides arguments for the SeriesTitleDeviceMoved event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.SeriesTitleDeviceMovedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of SeriesTitleDeviceMovedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.SeriesTitleDeviceMovedEventArgs.Series">
      <summary>
            The series over which the mouse pointer was moved in or out.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.StockSeriesCollection">
      <summary>
            Represents a collection of StockSeries objects.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.StockSeriesCollection.#ctor">
      <summary>
            Creates and initializes a new instance of this class.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ThinBorderXY">
      <summary>
            Border rendered around graph area
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ThinBorderXY.#ctor">
      <summary>
            Constructor for Form editor/xaml
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ThinBorderXY.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor
            </summary>
      <param name="Owner">View owner</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ThinBorderXY.RenderBehindSeries">
      <summary>
            Gets or sets RenderBehindSeries values in ViewXY. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ThinBorderXY.RenderBehindSeriesProperty">
      <summary>
            Identifies the RenderBehindSeries dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY">
      <summary>
            XY graph view. Allows super-fast drawing of lines and bars.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.#ctor(Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Annotations">
      <summary>
            Gets or sets Annotations. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AnnotationsProperty">
      <summary>
            Identifies the Annotations dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AreaSeries">
      <summary>
            Gets or sets area series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AreaSeriesProperty">
      <summary>
            Identifies the AreaSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AutoSpaceLegendBoxes">
      <summary>
            Gets or sets if graph margins or space between Segments is automatically calculated due LegendBoxes. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AutoSpaceLegendBoxesProperty">
      <summary>
            Identifies the AutoSpaceLegendBoxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AxisLayout">
      <summary>
            Gets or sets axis layout. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.AxisLayoutProperty">
      <summary>
            Identifies the AxisLayout dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Bands">
      <summary>
            Gets or sets Band list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BandsProperty">
      <summary>
            Identifies the Bands dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BarSeries">
      <summary>
            Gets or sets Bar series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BarSeriesProperty">
      <summary>
            Identifies the BarSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BarViewOptions">
      <summary>
            Gets or sets bar view options for Bar series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BarViewOptionsProperty">
      <summary>
            Identifies the BarViewOptions dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BeforePanning">
      <summary>
            Panning is about to start.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BeforeZooming">
      <summary>
            Zooming is about to start.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Border">
      <summary>
            Gets or sets bar Border values in ViewXY. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BorderProperty">
      <summary>
            Identifies the Border dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CalculateMinMaxCoordinatesFromUserInteractiveDeviceLocation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Calculate minimum and maximum cordinates from user interactive device location.
            </summary>
      <param name="startX">Zoom start mouse position X coordinate.</param>
      <param name="stopX">Zoom stop mouse position X coordinate.</param>
      <param name="startY">Zoom start mouse position Y coordinate.</param>
      <param name="stopY">Zoom stop mouse position Y coordinate.</param>
      <param name="minX">X-minimum coordinate based on zoom mode.</param>
      <param name="maxX">X-maximum coordinate based on zoom mode.</param>
      <param name="minY">Y-minimum coordinate based on zoom mode.</param>
      <param name="maxY">Y-maximum coordinate based on zoom mode.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CalculateMinMaxCoordinatesFromUserInteractiveDeviceLocation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CancelRectangleZooming">
      <summary>
            Cancel rectangle zooming.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ChartEventMarkers">
      <summary>
            Gets or sets chart event markers. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ChartEventMarkersProperty">
      <summary>
            Identifies the ChartEventMarkers dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ClearZoomStack">
      <summary>
            Clear zoom stack.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ClonePrivates(System.Windows.Freezable)">
      <summary>
            Clone private members.
            </summary>
      <param name="sourceFreezable">Source object</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ConstantLines">
      <summary>
            Gets or sets constant line list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ConstantLinesProperty">
      <summary>
            Identifies the ConstantLines dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultLegendBoxes">
      <summary>
            Create default LegendBox and add to LegendBox collection.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultLegendBoxes</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultXAxes">
      <summary>
            Create default X-Axis and add to X-axes collection.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultXAxes</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultYAxes">
      <summary>
            Create default Y-Axis and add to Y-axes collection.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateDefaultYAxes</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.CreateZoomPanOptions">
      <summary>
            Create new Zoom pan options
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DataCursor">
      <summary>
            DataCursor for viewing data at mouse position. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DataCursorProperty">
      <summary>
            Identifies the DataCursor dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            Mouse button has been clicked.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonClicked(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been clicked down.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonDown(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device button has been released.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DeviceButtonUp(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DigitalLineSeries">
      <summary>
            Gets or sets digital line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DigitalLineSeriesProperty">
      <summary>
            Identifies the DigitalLineSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DropOldEventMarkers">
      <summary>
            Gets or sets if automatically deletes chart event markers and series event markers, whose x value is
            less than X-axis minimum. This is a dependency property. By setting this true, the performance is much better in real-time monitoring 
            applications. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DropOldEventMarkersProperty">
      <summary>
            Identifies the DropOldEventMarkers dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DropOldSeriesData">
      <summary>
            Gets or sets if automatically deletes series data, whose x value is less than X-axis minimum. This is a dependency property.
            By setting this true, the performance is much better in real-time monitoring 
            applications. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.DropOldSeriesDataProperty">
      <summary>
            Identifies the DropOldSeriesData dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.EnableParallelComputationForSampleDataBlockSeries(System.Boolean)">
      <summary>
            Enable parallel computation for SampleDataBlockSeries. Performance varies depending on hardware and sample count. Prefer parallelization, when series point count is high and there are multiple series.
            </summary>
      <param name="enable">Enable or disable parallelization.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.FreeformPointLineSeries">
      <summary>
            Gets or sets FreeformPointLine series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.FreeformPointLineSeriesProperty">
      <summary>
            Identifies the FreeformPointLineSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.FreeZoomDrawData">
      <summary>
            Free all zoom draw data
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Get2DDataSeries">
      <summary>
            Gets list of all series added into SampleDataSeries, PointLineSeries, FreeformPointLineSeries, AreaSeries and HighLowSeries.
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Get2DSeriesEnumerator">
      <summary>
            Get Enumerator of 2D Series.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Get2DSeriesEnumerator</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAll2DSeries">
      <summary>
            Gets all series
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAllHighLowSeries">
      <summary>
            Get list of all highlow series.
            </summary>
      <returns>List of highlow series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAllIntensitySeries">
      <summary>
            Get list of all intensity series
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAllLineCollectionSeries">
      <summary>
            Gets list of all series added into LineCollection.
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAllLineSeries">
      <summary>
            Gets list of all series added into SampleDataSeries, PointLineSeries and FreeformPointLineSeries
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetAllTriggableLineSeries">
      <summary>
            Gets list of all triggable series.
            </summary>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetGraphSegmentInfo">
      <summary>
            Gets graph segment info. Useful when multiple Y-axes are defined and you need to know where the graph 
            segment boundaries are. 
            </summary>
      <returns>Graph segment info.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetHighLowSeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Get list of highlow series belonging to given X axis
            </summary>
      <param name="axisX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetHighLowSeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)</parameter>
          </include>
        </markup>
      </param>
      <returns>List of highlow series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetIntensitySeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Get list of all intensity series bound to given axis
            </summary>
      <param name="axisX">X axis</param>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetLineSeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Gets list of series added into SampleDataSeries, PointLineSeries and FreeformPointLineSeries, belonging to given X axis. 
            </summary>
      <param name="axisX">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>axisX</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetLineSeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)</parameter>
          </include>
        </markup>
      </param>
      <returns>List of series</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetPersistentSeriesRenderingLayers">
      <summary>
            Get persistent series rendering layers and its descendant objects list.
            </summary>
      <returns>List of persistent series rendering layers.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetSeriesOfAxisX(Arction.Wpf.ChartingMVVM.Axes.AxisX)">
      <summary>
            Get list of series having the given X-axis assigned.
            </summary>
      <param name="axisX">X-axis.</param>
      <returns>List of series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetSeriesOfAxisY(Arction.Wpf.ChartingMVVM.Axes.AxisY)">
      <summary>
            Get list of series having the given Y-axis assigned.
            </summary>
      <param name="axisY">Y-axis.</param>
      <returns>List of series.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetValidZoomDirection">
      <summary>
             Determine the direction of zooming. 
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetValidZoomDirection</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetYAxesInSegment(System.Int32)">
      <summary>
            Get list of Y-axes which are in segment index given.
            </summary>
      <param name="segmentIndex">Segment index.</param>
      <returns>List of Y-axes.</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.GetZoomPadding">
      <summary>
             Getter of the ZoomPadding, supported by Round and 3D Views
             ZoomPanOptions. 
             <para>
            As <see cref="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY" /> does not support ZoomPadding, this method 
            always returns empty (default) padding. 
            </para></summary>
      <returns>ZoomPadding of the given view, if supported. </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.HandleMarginsChanged">
      <summary>
            Handler gets Graph segment information
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.HighLowSeries">
      <summary>
            Gets or sets high-low series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.HighLowSeriesProperty">
      <summary>
            Identifies the HighLowSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.IntensityGridSeries">
      <summary>
            Gets or sets list of evenly spaced intensity grid series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.IntensityGridSeriesProperty">
      <summary>
            Identifies the IntensityGridSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.IntensityMeshSeries">
      <summary>
            Gets or sets list of intensity mesh series. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.IntensityMeshSeriesProperty">
      <summary>
            Identifies the IntensityMeshSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.IsPositionOverGraphArea(System.Int32,System.Int32)">
      <summary>
            Finds out if the given position is over graph area.
            </summary>
      <param name="x">X coordinate</param>
      <param name="y">Y coordinate</param>
      <returns>True if is over</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LegendBoxes">
      <summary>
            Gets or sets ViewXY LegendBoxes. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LegendBoxesProperty">
      <summary>
            Identifies the LegendBoxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LineCollections">
      <summary>
            Gets or sets line segment collection list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LineCollectionsProperty">
      <summary>
            Identifies the LineCollections dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LineSeriesCursors">
      <summary>
            Gets or sets LineSeriesCursors. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LineSeriesCursorsProperty">
      <summary>
            Identifies the LineSeriesCursors dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LiteFreeformLineSeries">
      <summary>
            Gets or sets lite freeform line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LiteFreeformLineSeriesProperty">
      <summary>
            Identifies the LiteFreeformLineSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LiteLineSeries">
      <summary>
            Gets or sets lite line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.LiteLineSeriesProperty">
      <summary>
            Identifies the LiteLineSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Maps">
      <summary>
            Gets or sets Maps. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.MapsProperty">
      <summary>
            Identifies the Maps dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.MeasureText(System.String,Arction.Wpf.ChartingMVVM.WpfFont)">
      <summary>
            Measure text with given font.
            </summary>
      <param name="text">Text.</param>
      <param name="font">Font.</param>
      <returns>Dimensions in a point structure. If unable to measure, returns (0,0).</returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Pan(System.Int32,System.Int32)">
      <summary>
            Pan the view.
            </summary>
      <param name="deltaX">Mouse X delta.</param>
      <param name="deltaY">Mouse Y delta.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Panned">
      <summary>
            Panning has ended.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PointLineSeries">
      <summary>
            Gets or sets PointLine series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PointLineSeriesProperty">
      <summary>
            Identifies the PointLineSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PolygonSeries">
      <summary>
            Gets or sets Polygon series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PolygonSeriesProperty">
      <summary>
            Identifies the PolygonSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)">
      <summary>
            Check is position over graph.
            </summary>
      <param name="coord">Position</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PositionOverGraph(Arction.Wpf.ChartingMVVM.CoordXY)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.SampleDataBlockSeries">
      <summary>
            Gets or sets sampled data block point line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.SampleDataBlockSeriesProperty">
      <summary>
            Identifies the SampleDataBlockSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.SampleDataSeries">
      <summary>
            Gets or sets sampled data point line series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.SampleDataSeriesProperty">
      <summary>
            Identifies the SampleDataSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.StockSeries">
      <summary>
            Gets or sets stock data series list. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.StockSeriesProperty">
      <summary>
            Identifies the StockSeries dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.TitlesAutoPlacement">
      <summary>
            Gets or sets automatic title placement settings. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.TitlesAutoPlacementProperty">
      <summary>
            Identifies the TitlesAutoPlacement dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ToString">
      <summary>
            Convert class description to string.
            </summary>
      <returns>Class description as a string.</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UseMultithreadingForBlockSeries">
      <summary>
            Use multithreading for block series types. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UseMultithreadingForBlockSeriesProperty">
      <summary>
            Identifies the UseMultithreadingForBlockSeries dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device has been moved.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventType</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.UserInteractiveDeviceMoved(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventType,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)">
      <summary>
            User interactive device wheel has been been scrolled.
            </summary>
      <param name="eventArguments">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventArguments</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <param name="chart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chart</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.WheelScrolled(Arction.Wpf.ChartingMVVM.UserInteractiveDeviceEventArgs,Arction.Wpf.ChartingMVVM.LightningChart)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.XAxes">
      <summary>
            Gets or sets X axis collection. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.XAxesProperty">
      <summary>
            Identifies the XAxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.YAxes">
      <summary>
            Gets or sets Y axis collection. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.YAxesProperty">
      <summary>
            Identifies the YAxes dependency property.
            </summary>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.YAxisGapChanged">
      <summary>
            Occurs when the y-axis gap is reduced to zero, if y-axes do not fit with applied gap to graph area.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Zoom(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Zoom the chart in or out. The input parameters in screen coordinates (pixels).
            If stop point X is greater than start point X, zooms in.
            If stop point X is less than start point X, fits the view.
            </summary>
      <param name="startX">Zoom start point X, in pixels.</param>
      <param name="startY">Zoom start point Y, in pixels.</param>
      <param name="stopX">Zoom stop point X, in pixels.</param>
      <param name="stopY">Zoom stop point Y, in pixels.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomByFactor(Arction.Wpf.ChartingMVVM.PointInt,System.Double,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Zooms in by factor.
            </summary>
      <param name="zoomCenterCoord">Zoom center coordinate, default input in DIPs, zooming is made around it. 
            Coordinate must hit the graph area (area between graph margins).</param>
      <param name="zoomFactor">Zoom factor over 1 zooms in, factor in range 0...1 zooms out. </param>
      <param name="zoomX">Apply zoom in X-dimension.</param>
      <param name="zoomY">Apply zoom in Y-dimension.</param>
      <param name="UseDIP">Use DIPs instead of pixels as parameters.</param>
    </member>
    <member name="E:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.Zoomed">
      <summary>
            Zooming has ended.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomOutPopFromStack">
      <summary>
            Zoom out from stack.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomPanOptions">
      <summary>
            Gets or sets zoom, pan and auto-fit options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomPanOptionsProperty">
      <summary>
            Identifies the ZoomPanOptions dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomToFit">
      <summary>
            View autoscale. Fits all axes so that all series data is shown.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BeforePanningEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforePanning event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the BeforePanning event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.BeforeZoomingEventHandler">
      <summary>
            The delegate to use for handlers that receive the BeforeZooming event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the BeforeZooming event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.PannedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Panned event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Panned event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.YAxisGapChangedEventHandler">
      <summary>
            The delegate to use for handlers that receive the YAxisGapChanged event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the YAxisGapChanged event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY.ZoomedEventHandler">
      <summary>
            The delegate to use for handlers that receive the Zoomed event.
            </summary>
      <param name="sender"></param>
      <param name="e">Provides data for the Zoomed event.</param>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisGapChangedEventArgs">
      <summary>
            Represents a class that provides arguments for the YAxisGapChangedEventArgs event.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisGapChangedEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of YAxisGapChangedEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisGapChangedEventArgs.AveragedHeight">
      <summary>
            The averaged height for y-axis when gap is reduced to zero.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment">
      <summary>
            Y-axis segment.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment.#ctor(Arction.Wpf.ChartingMVVM.IChartNode)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment.CreateInstanceCore">
      <summary>
            Create instance.
            </summary>
      <returns>Instance as Freezable</returns>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment.Height">
      <summary>
            Gets or sets segment relative space. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.YAxisSegment.HeightProperty">
      <summary>
            Identifies the Height dependency property.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomedXYEventArgs">
      <summary>
            Represents a class that provides arguments for the Zoomed event for XY view.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomedXYEventArgs.#ctor">
      <summary>
            Creates and initializes a new instance of ZoomedXYEventArgs class.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomedXYEventArgs.CancelRendering">
      <summary>
            Cancel rendering after the Zoomed event has been handled.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomedXYEventArgs.XRanges">
      <summary>
            X-axis range information.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomedXYEventArgs.YRanges">
      <summary>
            Y-axis range information.
            </summary>
    </member>
    <member name="T:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions">
      <summary>
            Zoom, pan and auto-fitting options for ViewXY.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.#ctor">
      <summary>
            Simple constructor for Form designer's list editor. 
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.#ctor(Arction.Wpf.ChartingMVVM.Views.ViewXY.ViewXY)">
      <summary>
            Constructor.
            </summary>
      <param name="owner">Parent.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AltEnabled">
      <summary>
            Gets or sets if alt-key is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AltEnabledProperty">
      <summary>
            Identifies the AltEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AspectRatioOptions">
      <summary>
            Gets or sets aspect ratio options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AspectRatioOptionsProperty">
      <summary>
            Identifies the AspectRatioOptions dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AutoYFit">
      <summary>
            Gets or sets auto Y fit options. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AutoYFitProperty">
      <summary>
            Identifies the AutoYFit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AxisWheelAction">
      <summary>
            Gets or sets user interactive device wheel action on axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.AxisWheelActionProperty">
      <summary>
            Identifies the AxisWheelAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.CtrlEnabled">
      <summary>
            Gets or sets if Ctrl-key is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.CtrlEnabledProperty">
      <summary>
            Identifies the CtrlEnabled dependency property.
            </summary>
    </member>
    <member name="M:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed, otherwise false.</param>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.IgnoreZerosInLogFit">
      <summary>
            Gets or sets if ignore zero Y values in auto-fitting, when using logarithmic Y axis. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.IgnoreZerosInLogFitProperty">
      <summary>
            Identifies the IgnoreZerosInLogFit dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchPanEnabled">
      <summary>
            Gets or sets if enable multitouch panning. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchPanEnabledProperty">
      <summary>
            Identifies the MultiTouchPanEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchSensitivity">
      <summary>
            Gets or sets touch sensitivity. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchSensitivityProperty">
      <summary>
            Identifies the MultiTouchSensitivity dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchZoomDirection">
      <summary>
            Gets or sets multitouch zoom direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchZoomDirectionProperty">
      <summary>
            Identifies the MultiTouchZoomDirection dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchZoomEnabled">
      <summary>
            Gets or sets if enable multitouch zooming. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.MultiTouchZoomEnabledProperty">
      <summary>
            Identifies the MultiTouchZoomEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.PanDirection">
      <summary>
            Gets or sets pan direction. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.PanDirectionProperty">
      <summary>
            Identifies the PanDirection dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomLimitInsideGraph">
      <summary>
            Gets or sets, if limit rectangle zoom inside graph. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomLimitInsideGraphProperty">
      <summary>
            Identifies the RectangleZoomLimitInsideGraph dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomMode">
      <summary>
            Gets or sets rectangle zoom mode. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomModeProperty">
      <summary>
            Identifies the RectangleZoomMode dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomUnitsLinkYAxes">
      <summary>
            Gets or sets link zooming if possible based on Units texts. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RectangleZoomUnitsLinkYAxesProperty">
      <summary>
            Identifies the RectangleZoomUnitsLinkYAxes dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RightToLeftZoomAction">
      <summary>
            Gets or sets right-to-left zoom action. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.RightToLeftZoomActionProperty">
      <summary>
            Identifies the RightToLeftZoomAction dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.ShiftEnabled">
      <summary>
            Gets or sets if shift-key is enabled. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.ShiftEnabledProperty">
      <summary>
            Identifies the ShiftEnabled dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.WheelZooming">
      <summary>
            Gets or sets user interactive device wheel zooming. This is a dependency property.
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.WheelZoomingProperty">
      <summary>
            Identifies the WheelZooming dependency property.
            </summary>
    </member>
    <member name="P:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.ViewFitYMarginPixels">
      <summary>
            Gets or sets view fitting margin in pixels, gap left into top and bottom of Y axes. This is a dependency property.
            Using some margin leaves a gap between series and axis minimum and maximum values. 
            </summary>
    </member>
    <member name="F:Arction.Wpf.ChartingMVVM.Views.ViewXY.ZoomPanOptions.ViewFitYMarginPixelsProperty">
      <summary>
            Identifies the ViewFitYMarginPixels dependency property.
            </summary>
    </member>
  </members>
</doc>